{"id":"d945e2fddbdb7b9264ce2cdc0012ec94","_format":"hh-sol-build-info-1","solcVersion":"0.8.19","solcLongVersion":"0.8.19+commit.7dd6d404","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/governance/utils/IVotes.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (governance/utils/IVotes.sol)\npragma solidity ^0.8.0;\n\n/**\n * @dev Common interface for {ERC20Votes}, {ERC721Votes}, and other {Votes}-enabled contracts.\n *\n * _Available since v4.5._\n */\ninterface IVotes {\n    /**\n     * @dev Emitted when an account changes their delegate.\n     */\n    event DelegateChanged(address indexed delegator, address indexed fromDelegate, address indexed toDelegate);\n\n    /**\n     * @dev Emitted when a token transfer or delegate change results in changes to a delegate's number of votes.\n     */\n    event DelegateVotesChanged(address indexed delegate, uint256 previousBalance, uint256 newBalance);\n\n    /**\n     * @dev Returns the current amount of votes that `account` has.\n     */\n    function getVotes(address account) external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of votes that `account` had at a specific moment in the past. If the `clock()` is\n     * configured to use block numbers, this will return the value at the end of the corresponding block.\n     */\n    function getPastVotes(address account, uint256 timepoint) external view returns (uint256);\n\n    /**\n     * @dev Returns the total supply of votes available at a specific moment in the past. If the `clock()` is\n     * configured to use block numbers, this will return the value at the end of the corresponding block.\n     *\n     * NOTE: This value is the sum of all available votes, which is not necessarily the sum of all delegated votes.\n     * Votes that have not been delegated are still part of total supply, even though they would not participate in a\n     * vote.\n     */\n    function getPastTotalSupply(uint256 timepoint) external view returns (uint256);\n\n    /**\n     * @dev Returns the delegate that `account` has chosen.\n     */\n    function delegates(address account) external view returns (address);\n\n    /**\n     * @dev Delegates votes from the sender to `delegatee`.\n     */\n    function delegate(address delegatee) external;\n\n    /**\n     * @dev Delegates votes from signer to `delegatee`.\n     */\n    function delegateBySig(address delegatee, uint256 nonce, uint256 expiry, uint8 v, bytes32 r, bytes32 s) external;\n}\n"},"@openzeppelin/contracts/interfaces/IERC5267.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (interfaces/IERC5267.sol)\n\npragma solidity ^0.8.0;\n\ninterface IERC5267 {\n    /**\n     * @dev MAY be emitted to signal that the domain could have changed.\n     */\n    event EIP712DomainChanged();\n\n    /**\n     * @dev returns the fields and values that describe the domain separator used by this contract for EIP-712\n     * signature.\n     */\n    function eip712Domain()\n        external\n        view\n        returns (\n            bytes1 fields,\n            string memory name,\n            string memory version,\n            uint256 chainId,\n            address verifyingContract,\n            bytes32 salt,\n            uint256[] memory extensions\n        );\n}\n"},"@openzeppelin/contracts/interfaces/IERC5805.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (interfaces/IERC5805.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../governance/utils/IVotes.sol\";\nimport \"./IERC6372.sol\";\n\ninterface IERC5805 is IERC6372, IVotes {}\n"},"@openzeppelin/contracts/interfaces/IERC6372.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (interfaces/IERC6372.sol)\n\npragma solidity ^0.8.0;\n\ninterface IERC6372 {\n    /**\n     * @dev Clock used for flagging checkpoints. Can be overridden to implement timestamp based checkpoints (and voting).\n     */\n    function clock() external view returns (uint48);\n\n    /**\n     * @dev Description of the clock\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function CLOCK_MODE() external view returns (string memory);\n}\n"},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC20.sol\";\nimport \"./extensions/IERC20Metadata.sol\";\nimport \"../../utils/Context.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n * For a generic mechanism see {ERC20PresetMinterPauser}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n *\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n * functions have been added to mitigate the well-known issues around setting\n * allowances. See {IERC20-approve}.\n */\ncontract ERC20 is Context, IERC20, IERC20Metadata {\n    mapping(address => uint256) private _balances;\n\n    mapping(address => mapping(address => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual override returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual override returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, amount);\n        _transfer(from, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        uint256 currentAllowance = allowance(owner, spender);\n        require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\");\n        unchecked {\n            _approve(owner, spender, currentAllowance - subtractedValue);\n        }\n\n        return true;\n    }\n\n    /**\n     * @dev Moves `amount` of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     */\n    function _transfer(address from, address to, uint256 amount) internal virtual {\n        require(from != address(0), \"ERC20: transfer from the zero address\");\n        require(to != address(0), \"ERC20: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, amount);\n\n        uint256 fromBalance = _balances[from];\n        require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\");\n        unchecked {\n            _balances[from] = fromBalance - amount;\n            // Overflow not possible: the sum of all balances is capped by totalSupply, and the sum is preserved by\n            // decrementing then incrementing.\n            _balances[to] += amount;\n        }\n\n        emit Transfer(from, to, amount);\n\n        _afterTokenTransfer(from, to, amount);\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: mint to the zero address\");\n\n        _beforeTokenTransfer(address(0), account, amount);\n\n        _totalSupply += amount;\n        unchecked {\n            // Overflow not possible: balance + amount is at most totalSupply + amount, which is checked above.\n            _balances[account] += amount;\n        }\n        emit Transfer(address(0), account, amount);\n\n        _afterTokenTransfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        _beforeTokenTransfer(account, address(0), amount);\n\n        uint256 accountBalance = _balances[account];\n        require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\");\n        unchecked {\n            _balances[account] = accountBalance - amount;\n            // Overflow not possible: amount <= accountBalance <= totalSupply.\n            _totalSupply -= amount;\n        }\n\n        emit Transfer(account, address(0), amount);\n\n        _afterTokenTransfer(account, address(0), amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(address owner, address spender, uint256 amount) internal virtual {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n     *\n     * Does not update the allowance amount in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Might emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 amount) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            require(currentAllowance >= amount, \"ERC20: insufficient allowance\");\n            unchecked {\n                _approve(owner, spender, currentAllowance - amount);\n            }\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * will be transferred to `to`.\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * has been transferred to `to`.\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(address from, address to, uint256 amount) internal virtual {}\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/draft-ERC20Permit.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/extensions/draft-ERC20Permit.sol)\n\npragma solidity ^0.8.0;\n\n// EIP-2612 is Final as of 2022-11-01. This file is deprecated.\n\nimport \"./ERC20Permit.sol\";\n"},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/extensions/ERC20Permit.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC20Permit.sol\";\nimport \"../ERC20.sol\";\nimport \"../../../utils/cryptography/ECDSA.sol\";\nimport \"../../../utils/cryptography/EIP712.sol\";\nimport \"../../../utils/Counters.sol\";\n\n/**\n * @dev Implementation of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n *\n * _Available since v3.4._\n */\nabstract contract ERC20Permit is ERC20, IERC20Permit, EIP712 {\n    using Counters for Counters.Counter;\n\n    mapping(address => Counters.Counter) private _nonces;\n\n    // solhint-disable-next-line var-name-mixedcase\n    bytes32 private constant _PERMIT_TYPEHASH =\n        keccak256(\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\");\n    /**\n     * @dev In previous versions `_PERMIT_TYPEHASH` was declared as `immutable`.\n     * However, to ensure consistency with the upgradeable transpiler, we will continue\n     * to reserve a slot.\n     * @custom:oz-renamed-from _PERMIT_TYPEHASH\n     */\n    // solhint-disable-next-line var-name-mixedcase\n    bytes32 private _PERMIT_TYPEHASH_DEPRECATED_SLOT;\n\n    /**\n     * @dev Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\"1\"`.\n     *\n     * It's a good idea to use the same `name` that is defined as the ERC20 token name.\n     */\n    constructor(string memory name) EIP712(name, \"1\") {}\n\n    /**\n     * @dev See {IERC20Permit-permit}.\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) public virtual override {\n        require(block.timestamp <= deadline, \"ERC20Permit: expired deadline\");\n\n        bytes32 structHash = keccak256(abi.encode(_PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline));\n\n        bytes32 hash = _hashTypedDataV4(structHash);\n\n        address signer = ECDSA.recover(hash, v, r, s);\n        require(signer == owner, \"ERC20Permit: invalid signature\");\n\n        _approve(owner, spender, value);\n    }\n\n    /**\n     * @dev See {IERC20Permit-nonces}.\n     */\n    function nonces(address owner) public view virtual override returns (uint256) {\n        return _nonces[owner].current();\n    }\n\n    /**\n     * @dev See {IERC20Permit-DOMAIN_SEPARATOR}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view override returns (bytes32) {\n        return _domainSeparatorV4();\n    }\n\n    /**\n     * @dev \"Consume a nonce\": return the current value and increment.\n     *\n     * _Available since v4.1._\n     */\n    function _useNonce(address owner) internal virtual returns (uint256 current) {\n        Counters.Counter storage nonce = _nonces[owner];\n        current = nonce.current();\n        nonce.increment();\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/extensions/ERC20Votes.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./ERC20Permit.sol\";\nimport \"../../../interfaces/IERC5805.sol\";\nimport \"../../../utils/math/Math.sol\";\nimport \"../../../utils/math/SafeCast.sol\";\nimport \"../../../utils/cryptography/ECDSA.sol\";\n\n/**\n * @dev Extension of ERC20 to support Compound-like voting and delegation. This version is more generic than Compound's,\n * and supports token supply up to 2^224^ - 1, while COMP is limited to 2^96^ - 1.\n *\n * NOTE: If exact COMP compatibility is required, use the {ERC20VotesComp} variant of this module.\n *\n * This extension keeps a history (checkpoints) of each account's vote power. Vote power can be delegated either\n * by calling the {delegate} function directly, or by providing a signature to be used with {delegateBySig}. Voting\n * power can be queried through the public accessors {getVotes} and {getPastVotes}.\n *\n * By default, token balance does not account for voting power. This makes transfers cheaper. The downside is that it\n * requires users to delegate to themselves in order to activate checkpoints and have their voting power tracked.\n *\n * _Available since v4.2._\n */\nabstract contract ERC20Votes is ERC20Permit, IERC5805 {\n    struct Checkpoint {\n        uint32 fromBlock;\n        uint224 votes;\n    }\n\n    bytes32 private constant _DELEGATION_TYPEHASH =\n        keccak256(\"Delegation(address delegatee,uint256 nonce,uint256 expiry)\");\n\n    mapping(address => address) private _delegates;\n    mapping(address => Checkpoint[]) private _checkpoints;\n    Checkpoint[] private _totalSupplyCheckpoints;\n\n    /**\n     * @dev Clock used for flagging checkpoints. Can be overridden to implement timestamp based checkpoints (and voting).\n     */\n    function clock() public view virtual override returns (uint48) {\n        return SafeCast.toUint48(block.number);\n    }\n\n    /**\n     * @dev Description of the clock\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function CLOCK_MODE() public view virtual override returns (string memory) {\n        // Check that the clock was not modified\n        require(clock() == block.number, \"ERC20Votes: broken clock mode\");\n        return \"mode=blocknumber&from=default\";\n    }\n\n    /**\n     * @dev Get the `pos`-th checkpoint for `account`.\n     */\n    function checkpoints(address account, uint32 pos) public view virtual returns (Checkpoint memory) {\n        return _checkpoints[account][pos];\n    }\n\n    /**\n     * @dev Get number of checkpoints for `account`.\n     */\n    function numCheckpoints(address account) public view virtual returns (uint32) {\n        return SafeCast.toUint32(_checkpoints[account].length);\n    }\n\n    /**\n     * @dev Get the address `account` is currently delegating to.\n     */\n    function delegates(address account) public view virtual override returns (address) {\n        return _delegates[account];\n    }\n\n    /**\n     * @dev Gets the current votes balance for `account`\n     */\n    function getVotes(address account) public view virtual override returns (uint256) {\n        uint256 pos = _checkpoints[account].length;\n        unchecked {\n            return pos == 0 ? 0 : _checkpoints[account][pos - 1].votes;\n        }\n    }\n\n    /**\n     * @dev Retrieve the number of votes for `account` at the end of `timepoint`.\n     *\n     * Requirements:\n     *\n     * - `timepoint` must be in the past\n     */\n    function getPastVotes(address account, uint256 timepoint) public view virtual override returns (uint256) {\n        require(timepoint < clock(), \"ERC20Votes: future lookup\");\n        return _checkpointsLookup(_checkpoints[account], timepoint);\n    }\n\n    /**\n     * @dev Retrieve the `totalSupply` at the end of `timepoint`. Note, this value is the sum of all balances.\n     * It is NOT the sum of all the delegated votes!\n     *\n     * Requirements:\n     *\n     * - `timepoint` must be in the past\n     */\n    function getPastTotalSupply(uint256 timepoint) public view virtual override returns (uint256) {\n        require(timepoint < clock(), \"ERC20Votes: future lookup\");\n        return _checkpointsLookup(_totalSupplyCheckpoints, timepoint);\n    }\n\n    /**\n     * @dev Lookup a value in a list of (sorted) checkpoints.\n     */\n    function _checkpointsLookup(Checkpoint[] storage ckpts, uint256 timepoint) private view returns (uint256) {\n        // We run a binary search to look for the last (most recent) checkpoint taken before (or at) `timepoint`.\n        //\n        // Initially we check if the block is recent to narrow the search range.\n        // During the loop, the index of the wanted checkpoint remains in the range [low-1, high).\n        // With each iteration, either `low` or `high` is moved towards the middle of the range to maintain the invariant.\n        // - If the middle checkpoint is after `timepoint`, we look in [low, mid)\n        // - If the middle checkpoint is before or equal to `timepoint`, we look in [mid+1, high)\n        // Once we reach a single value (when low == high), we've found the right checkpoint at the index high-1, if not\n        // out of bounds (in which case we're looking too far in the past and the result is 0).\n        // Note that if the latest checkpoint available is exactly for `timepoint`, we end up with an index that is\n        // past the end of the array, so we technically don't find a checkpoint after `timepoint`, but it works out\n        // the same.\n        uint256 length = ckpts.length;\n\n        uint256 low = 0;\n        uint256 high = length;\n\n        if (length > 5) {\n            uint256 mid = length - Math.sqrt(length);\n            if (_unsafeAccess(ckpts, mid).fromBlock > timepoint) {\n                high = mid;\n            } else {\n                low = mid + 1;\n            }\n        }\n\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n            if (_unsafeAccess(ckpts, mid).fromBlock > timepoint) {\n                high = mid;\n            } else {\n                low = mid + 1;\n            }\n        }\n\n        unchecked {\n            return high == 0 ? 0 : _unsafeAccess(ckpts, high - 1).votes;\n        }\n    }\n\n    /**\n     * @dev Delegate votes from the sender to `delegatee`.\n     */\n    function delegate(address delegatee) public virtual override {\n        _delegate(_msgSender(), delegatee);\n    }\n\n    /**\n     * @dev Delegates votes from signer to `delegatee`\n     */\n    function delegateBySig(\n        address delegatee,\n        uint256 nonce,\n        uint256 expiry,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) public virtual override {\n        require(block.timestamp <= expiry, \"ERC20Votes: signature expired\");\n        address signer = ECDSA.recover(\n            _hashTypedDataV4(keccak256(abi.encode(_DELEGATION_TYPEHASH, delegatee, nonce, expiry))),\n            v,\n            r,\n            s\n        );\n        require(nonce == _useNonce(signer), \"ERC20Votes: invalid nonce\");\n        _delegate(signer, delegatee);\n    }\n\n    /**\n     * @dev Maximum token supply. Defaults to `type(uint224).max` (2^224^ - 1).\n     */\n    function _maxSupply() internal view virtual returns (uint224) {\n        return type(uint224).max;\n    }\n\n    /**\n     * @dev Snapshots the totalSupply after it has been increased.\n     */\n    function _mint(address account, uint256 amount) internal virtual override {\n        super._mint(account, amount);\n        require(totalSupply() <= _maxSupply(), \"ERC20Votes: total supply risks overflowing votes\");\n\n        _writeCheckpoint(_totalSupplyCheckpoints, _add, amount);\n    }\n\n    /**\n     * @dev Snapshots the totalSupply after it has been decreased.\n     */\n    function _burn(address account, uint256 amount) internal virtual override {\n        super._burn(account, amount);\n\n        _writeCheckpoint(_totalSupplyCheckpoints, _subtract, amount);\n    }\n\n    /**\n     * @dev Move voting power when tokens are transferred.\n     *\n     * Emits a {IVotes-DelegateVotesChanged} event.\n     */\n    function _afterTokenTransfer(address from, address to, uint256 amount) internal virtual override {\n        super._afterTokenTransfer(from, to, amount);\n\n        _moveVotingPower(delegates(from), delegates(to), amount);\n    }\n\n    /**\n     * @dev Change delegation for `delegator` to `delegatee`.\n     *\n     * Emits events {IVotes-DelegateChanged} and {IVotes-DelegateVotesChanged}.\n     */\n    function _delegate(address delegator, address delegatee) internal virtual {\n        address currentDelegate = delegates(delegator);\n        uint256 delegatorBalance = balanceOf(delegator);\n        _delegates[delegator] = delegatee;\n\n        emit DelegateChanged(delegator, currentDelegate, delegatee);\n\n        _moveVotingPower(currentDelegate, delegatee, delegatorBalance);\n    }\n\n    function _moveVotingPower(address src, address dst, uint256 amount) private {\n        if (src != dst && amount > 0) {\n            if (src != address(0)) {\n                (uint256 oldWeight, uint256 newWeight) = _writeCheckpoint(_checkpoints[src], _subtract, amount);\n                emit DelegateVotesChanged(src, oldWeight, newWeight);\n            }\n\n            if (dst != address(0)) {\n                (uint256 oldWeight, uint256 newWeight) = _writeCheckpoint(_checkpoints[dst], _add, amount);\n                emit DelegateVotesChanged(dst, oldWeight, newWeight);\n            }\n        }\n    }\n\n    function _writeCheckpoint(\n        Checkpoint[] storage ckpts,\n        function(uint256, uint256) view returns (uint256) op,\n        uint256 delta\n    ) private returns (uint256 oldWeight, uint256 newWeight) {\n        uint256 pos = ckpts.length;\n\n        unchecked {\n            Checkpoint memory oldCkpt = pos == 0 ? Checkpoint(0, 0) : _unsafeAccess(ckpts, pos - 1);\n\n            oldWeight = oldCkpt.votes;\n            newWeight = op(oldWeight, delta);\n\n            if (pos > 0 && oldCkpt.fromBlock == clock()) {\n                _unsafeAccess(ckpts, pos - 1).votes = SafeCast.toUint224(newWeight);\n            } else {\n                ckpts.push(Checkpoint({fromBlock: SafeCast.toUint32(clock()), votes: SafeCast.toUint224(newWeight)}));\n            }\n        }\n    }\n\n    function _add(uint256 a, uint256 b) private pure returns (uint256) {\n        return a + b;\n    }\n\n    function _subtract(uint256 a, uint256 b) private pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Access an element of the array without performing bounds check. The position is assumed to be within bounds.\n     */\n    function _unsafeAccess(Checkpoint[] storage ckpts, uint256 pos) private pure returns (Checkpoint storage result) {\n        assembly {\n            mstore(0, ckpts.slot)\n            result.slot := add(keccak256(0, 0x20), pos)\n        }\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n *\n * _Available since v4.1._\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/extensions/IERC20Permit.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n */\ninterface IERC20Permit {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"},"@openzeppelin/contracts/utils/Counters.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Counters.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @title Counters\n * @author Matt Condon (@shrugs)\n * @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\n * of elements in a mapping, issuing ERC721 ids, or counting request ids.\n *\n * Include with `using Counters for Counters.Counter;`\n */\nlibrary Counters {\n    struct Counter {\n        // This variable should never be directly accessed by users of the library: interactions must be restricted to\n        // the library's function. As of Solidity v0.5.2, this cannot be enforced, though there is a proposal to add\n        // this feature: see https://github.com/ethereum/solidity/issues/4637\n        uint256 _value; // default: 0\n    }\n\n    function current(Counter storage counter) internal view returns (uint256) {\n        return counter._value;\n    }\n\n    function increment(Counter storage counter) internal {\n        unchecked {\n            counter._value += 1;\n        }\n    }\n\n    function decrement(Counter storage counter) internal {\n        uint256 value = counter._value;\n        require(value > 0, \"Counter: decrement overflow\");\n        unchecked {\n            counter._value = value - 1;\n        }\n    }\n\n    function reset(Counter storage counter) internal {\n        counter._value = 0;\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/cryptography/ECDSA.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../Strings.sol\";\n\n/**\n * @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n *\n * These functions can be used to verify that a message was signed by the holder\n * of the private keys of a given address.\n */\nlibrary ECDSA {\n    enum RecoverError {\n        NoError,\n        InvalidSignature,\n        InvalidSignatureLength,\n        InvalidSignatureS,\n        InvalidSignatureV // Deprecated in v4.8\n    }\n\n    function _throwError(RecoverError error) private pure {\n        if (error == RecoverError.NoError) {\n            return; // no error: do nothing\n        } else if (error == RecoverError.InvalidSignature) {\n            revert(\"ECDSA: invalid signature\");\n        } else if (error == RecoverError.InvalidSignatureLength) {\n            revert(\"ECDSA: invalid signature length\");\n        } else if (error == RecoverError.InvalidSignatureS) {\n            revert(\"ECDSA: invalid signature 's' value\");\n        }\n    }\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature` or error string. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {toEthSignedMessageHash} on it.\n     *\n     * Documentation for signature generation:\n     * - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n     * - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\n     *\n     * _Available since v4.3._\n     */\n    function tryRecover(bytes32 hash, bytes memory signature) internal pure returns (address, RecoverError) {\n        if (signature.length == 65) {\n            bytes32 r;\n            bytes32 s;\n            uint8 v;\n            // ecrecover takes the signature parameters, and the only way to get them\n            // currently is to use assembly.\n            /// @solidity memory-safe-assembly\n            assembly {\n                r := mload(add(signature, 0x20))\n                s := mload(add(signature, 0x40))\n                v := byte(0, mload(add(signature, 0x60)))\n            }\n            return tryRecover(hash, v, r, s);\n        } else {\n            return (address(0), RecoverError.InvalidSignatureLength);\n        }\n    }\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature`. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {toEthSignedMessageHash} on it.\n     */\n    function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {\n        (address recovered, RecoverError error) = tryRecover(hash, signature);\n        _throwError(error);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n     *\n     * See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]\n     *\n     * _Available since v4.3._\n     */\n    function tryRecover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address, RecoverError) {\n        bytes32 s = vs & bytes32(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff);\n        uint8 v = uint8((uint256(vs) >> 255) + 27);\n        return tryRecover(hash, v, r, s);\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\n     *\n     * _Available since v4.2._\n     */\n    function recover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address) {\n        (address recovered, RecoverError error) = tryRecover(hash, r, vs);\n        _throwError(error);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     *\n     * _Available since v4.3._\n     */\n    function tryRecover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address, RecoverError) {\n        // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\n        // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\n        // the valid range for s in (301): 0 < s < secp256k1n ÷ 2 + 1, and for v in (302): v ∈ {27, 28}. Most\n        // signatures from current libraries generate a unique signature with an s-value in the lower half order.\n        //\n        // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\n        // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\n        // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\n        // these malleable signatures as well.\n        if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {\n            return (address(0), RecoverError.InvalidSignatureS);\n        }\n\n        // If the signature is valid (and not malleable), return the signer address\n        address signer = ecrecover(hash, v, r, s);\n        if (signer == address(0)) {\n            return (address(0), RecoverError.InvalidSignature);\n        }\n\n        return (signer, RecoverError.NoError);\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function recover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address) {\n        (address recovered, RecoverError error) = tryRecover(hash, v, r, s);\n        _throwError(error);\n        return recovered;\n    }\n\n    /**\n     * @dev Returns an Ethereum Signed Message, created from a `hash`. This\n     * produces hash corresponding to the one signed with the\n     * https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\n     * JSON-RPC method as part of EIP-191.\n     *\n     * See {recover}.\n     */\n    function toEthSignedMessageHash(bytes32 hash) internal pure returns (bytes32 message) {\n        // 32 is the length in bytes of hash,\n        // enforced by the type signature above\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(0x00, \"\\x19Ethereum Signed Message:\\n32\")\n            mstore(0x1c, hash)\n            message := keccak256(0x00, 0x3c)\n        }\n    }\n\n    /**\n     * @dev Returns an Ethereum Signed Message, created from `s`. This\n     * produces hash corresponding to the one signed with the\n     * https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\n     * JSON-RPC method as part of EIP-191.\n     *\n     * See {recover}.\n     */\n    function toEthSignedMessageHash(bytes memory s) internal pure returns (bytes32) {\n        return keccak256(abi.encodePacked(\"\\x19Ethereum Signed Message:\\n\", Strings.toString(s.length), s));\n    }\n\n    /**\n     * @dev Returns an Ethereum Signed Typed Data, created from a\n     * `domainSeparator` and a `structHash`. This produces hash corresponding\n     * to the one signed with the\n     * https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`]\n     * JSON-RPC method as part of EIP-712.\n     *\n     * See {recover}.\n     */\n    function toTypedDataHash(bytes32 domainSeparator, bytes32 structHash) internal pure returns (bytes32 data) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            let ptr := mload(0x40)\n            mstore(ptr, \"\\x19\\x01\")\n            mstore(add(ptr, 0x02), domainSeparator)\n            mstore(add(ptr, 0x22), structHash)\n            data := keccak256(ptr, 0x42)\n        }\n    }\n\n    /**\n     * @dev Returns an Ethereum Signed Data with intended validator, created from a\n     * `validator` and `data` according to the version 0 of EIP-191.\n     *\n     * See {recover}.\n     */\n    function toDataWithIntendedValidatorHash(address validator, bytes memory data) internal pure returns (bytes32) {\n        return keccak256(abi.encodePacked(\"\\x19\\x00\", validator, data));\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/EIP712.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/cryptography/EIP712.sol)\n\npragma solidity ^0.8.8;\n\nimport \"./ECDSA.sol\";\nimport \"../ShortStrings.sol\";\nimport \"../../interfaces/IERC5267.sol\";\n\n/**\n * @dev https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data.\n *\n * The encoding specified in the EIP is very generic, and such a generic implementation in Solidity is not feasible,\n * thus this contract does not implement the encoding itself. Protocols need to implement the type-specific encoding\n * they need in their contracts using a combination of `abi.encode` and `keccak256`.\n *\n * This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding\n * scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA\n * ({_hashTypedDataV4}).\n *\n * The implementation of the domain separator was designed to be as efficient as possible while still properly updating\n * the chain id to protect against replay attacks on an eventual fork of the chain.\n *\n * NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method\n * https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask].\n *\n * NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain\n * separator of the implementation contract. This will cause the `_domainSeparatorV4` function to always rebuild the\n * separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\n *\n * _Available since v3.4._\n *\n * @custom:oz-upgrades-unsafe-allow state-variable-immutable state-variable-assignment\n */\nabstract contract EIP712 is IERC5267 {\n    using ShortStrings for *;\n\n    bytes32 private constant _TYPE_HASH =\n        keccak256(\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\");\n\n    // Cache the domain separator as an immutable value, but also store the chain id that it corresponds to, in order to\n    // invalidate the cached domain separator if the chain id changes.\n    bytes32 private immutable _cachedDomainSeparator;\n    uint256 private immutable _cachedChainId;\n    address private immutable _cachedThis;\n\n    bytes32 private immutable _hashedName;\n    bytes32 private immutable _hashedVersion;\n\n    ShortString private immutable _name;\n    ShortString private immutable _version;\n    string private _nameFallback;\n    string private _versionFallback;\n\n    /**\n     * @dev Initializes the domain separator and parameter caches.\n     *\n     * The meaning of `name` and `version` is specified in\n     * https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP 712]:\n     *\n     * - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol.\n     * - `version`: the current major version of the signing domain.\n     *\n     * NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart\n     * contract upgrade].\n     */\n    constructor(string memory name, string memory version) {\n        _name = name.toShortStringWithFallback(_nameFallback);\n        _version = version.toShortStringWithFallback(_versionFallback);\n        _hashedName = keccak256(bytes(name));\n        _hashedVersion = keccak256(bytes(version));\n\n        _cachedChainId = block.chainid;\n        _cachedDomainSeparator = _buildDomainSeparator();\n        _cachedThis = address(this);\n    }\n\n    /**\n     * @dev Returns the domain separator for the current chain.\n     */\n    function _domainSeparatorV4() internal view returns (bytes32) {\n        if (address(this) == _cachedThis && block.chainid == _cachedChainId) {\n            return _cachedDomainSeparator;\n        } else {\n            return _buildDomainSeparator();\n        }\n    }\n\n    function _buildDomainSeparator() private view returns (bytes32) {\n        return keccak256(abi.encode(_TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this)));\n    }\n\n    /**\n     * @dev Given an already https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct[hashed struct], this\n     * function returns the hash of the fully encoded EIP712 message for this domain.\n     *\n     * This hash can be used together with {ECDSA-recover} to obtain the signer of a message. For example:\n     *\n     * ```solidity\n     * bytes32 digest = _hashTypedDataV4(keccak256(abi.encode(\n     *     keccak256(\"Mail(address to,string contents)\"),\n     *     mailTo,\n     *     keccak256(bytes(mailContents))\n     * )));\n     * address signer = ECDSA.recover(digest, signature);\n     * ```\n     */\n    function _hashTypedDataV4(bytes32 structHash) internal view virtual returns (bytes32) {\n        return ECDSA.toTypedDataHash(_domainSeparatorV4(), structHash);\n    }\n\n    /**\n     * @dev See {EIP-5267}.\n     *\n     * _Available since v4.9._\n     */\n    function eip712Domain()\n        public\n        view\n        virtual\n        override\n        returns (\n            bytes1 fields,\n            string memory name,\n            string memory version,\n            uint256 chainId,\n            address verifyingContract,\n            bytes32 salt,\n            uint256[] memory extensions\n        )\n    {\n        return (\n            hex\"0f\", // 01111\n            _name.toStringWithFallback(_nameFallback),\n            _version.toStringWithFallback(_versionFallback),\n            block.chainid,\n            address(this),\n            bytes32(0),\n            new uint256[](0)\n        );\n    }\n}\n"},"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Down, // Toward negative infinity\n        Up, // Toward infinity\n        Zero // Toward zero\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds up instead\n     * of rounding down.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n     * with further edits by Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod0 := mul(x, y)\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            require(denominator > prod1, \"Math: mulDiv overflow\");\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\n            // See https://cs.stackexchange.com/q/138556/92363.\n\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\n            uint256 twos = denominator & (~denominator + 1);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\n            // in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (rounding == Rounding.Up && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (rounding == Rounding.Up && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/SafeCast.sol)\n// This file was procedurally generated from scripts/generate/templates/SafeCast.js.\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Wrappers over Solidity's uintXX/intXX casting operators with added overflow\n * checks.\n *\n * Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n * easily result in undesired exploitation or bugs, since developers usually\n * assume that overflows raise errors. `SafeCast` restores this intuition by\n * reverting the transaction when such an operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n *\n * Can be combined with {SafeMath} and {SignedSafeMath} to extend it to smaller types, by performing\n * all math on `uint256` and `int256` and then downcasting.\n */\nlibrary SafeCast {\n    /**\n     * @dev Returns the downcasted uint248 from uint256, reverting on\n     * overflow (when the input is greater than largest uint248).\n     *\n     * Counterpart to Solidity's `uint248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint248(uint256 value) internal pure returns (uint248) {\n        require(value <= type(uint248).max, \"SafeCast: value doesn't fit in 248 bits\");\n        return uint248(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint240 from uint256, reverting on\n     * overflow (when the input is greater than largest uint240).\n     *\n     * Counterpart to Solidity's `uint240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint240(uint256 value) internal pure returns (uint240) {\n        require(value <= type(uint240).max, \"SafeCast: value doesn't fit in 240 bits\");\n        return uint240(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint232 from uint256, reverting on\n     * overflow (when the input is greater than largest uint232).\n     *\n     * Counterpart to Solidity's `uint232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint232(uint256 value) internal pure returns (uint232) {\n        require(value <= type(uint232).max, \"SafeCast: value doesn't fit in 232 bits\");\n        return uint232(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint224 from uint256, reverting on\n     * overflow (when the input is greater than largest uint224).\n     *\n     * Counterpart to Solidity's `uint224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     *\n     * _Available since v4.2._\n     */\n    function toUint224(uint256 value) internal pure returns (uint224) {\n        require(value <= type(uint224).max, \"SafeCast: value doesn't fit in 224 bits\");\n        return uint224(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint216 from uint256, reverting on\n     * overflow (when the input is greater than largest uint216).\n     *\n     * Counterpart to Solidity's `uint216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint216(uint256 value) internal pure returns (uint216) {\n        require(value <= type(uint216).max, \"SafeCast: value doesn't fit in 216 bits\");\n        return uint216(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint208 from uint256, reverting on\n     * overflow (when the input is greater than largest uint208).\n     *\n     * Counterpart to Solidity's `uint208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint208(uint256 value) internal pure returns (uint208) {\n        require(value <= type(uint208).max, \"SafeCast: value doesn't fit in 208 bits\");\n        return uint208(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint200 from uint256, reverting on\n     * overflow (when the input is greater than largest uint200).\n     *\n     * Counterpart to Solidity's `uint200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint200(uint256 value) internal pure returns (uint200) {\n        require(value <= type(uint200).max, \"SafeCast: value doesn't fit in 200 bits\");\n        return uint200(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint192 from uint256, reverting on\n     * overflow (when the input is greater than largest uint192).\n     *\n     * Counterpart to Solidity's `uint192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint192(uint256 value) internal pure returns (uint192) {\n        require(value <= type(uint192).max, \"SafeCast: value doesn't fit in 192 bits\");\n        return uint192(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint184 from uint256, reverting on\n     * overflow (when the input is greater than largest uint184).\n     *\n     * Counterpart to Solidity's `uint184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint184(uint256 value) internal pure returns (uint184) {\n        require(value <= type(uint184).max, \"SafeCast: value doesn't fit in 184 bits\");\n        return uint184(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint176 from uint256, reverting on\n     * overflow (when the input is greater than largest uint176).\n     *\n     * Counterpart to Solidity's `uint176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint176(uint256 value) internal pure returns (uint176) {\n        require(value <= type(uint176).max, \"SafeCast: value doesn't fit in 176 bits\");\n        return uint176(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint168 from uint256, reverting on\n     * overflow (when the input is greater than largest uint168).\n     *\n     * Counterpart to Solidity's `uint168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint168(uint256 value) internal pure returns (uint168) {\n        require(value <= type(uint168).max, \"SafeCast: value doesn't fit in 168 bits\");\n        return uint168(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint160 from uint256, reverting on\n     * overflow (when the input is greater than largest uint160).\n     *\n     * Counterpart to Solidity's `uint160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint160(uint256 value) internal pure returns (uint160) {\n        require(value <= type(uint160).max, \"SafeCast: value doesn't fit in 160 bits\");\n        return uint160(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint152 from uint256, reverting on\n     * overflow (when the input is greater than largest uint152).\n     *\n     * Counterpart to Solidity's `uint152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint152(uint256 value) internal pure returns (uint152) {\n        require(value <= type(uint152).max, \"SafeCast: value doesn't fit in 152 bits\");\n        return uint152(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint144 from uint256, reverting on\n     * overflow (when the input is greater than largest uint144).\n     *\n     * Counterpart to Solidity's `uint144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint144(uint256 value) internal pure returns (uint144) {\n        require(value <= type(uint144).max, \"SafeCast: value doesn't fit in 144 bits\");\n        return uint144(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint136 from uint256, reverting on\n     * overflow (when the input is greater than largest uint136).\n     *\n     * Counterpart to Solidity's `uint136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint136(uint256 value) internal pure returns (uint136) {\n        require(value <= type(uint136).max, \"SafeCast: value doesn't fit in 136 bits\");\n        return uint136(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint128 from uint256, reverting on\n     * overflow (when the input is greater than largest uint128).\n     *\n     * Counterpart to Solidity's `uint128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     *\n     * _Available since v2.5._\n     */\n    function toUint128(uint256 value) internal pure returns (uint128) {\n        require(value <= type(uint128).max, \"SafeCast: value doesn't fit in 128 bits\");\n        return uint128(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint120 from uint256, reverting on\n     * overflow (when the input is greater than largest uint120).\n     *\n     * Counterpart to Solidity's `uint120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint120(uint256 value) internal pure returns (uint120) {\n        require(value <= type(uint120).max, \"SafeCast: value doesn't fit in 120 bits\");\n        return uint120(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint112 from uint256, reverting on\n     * overflow (when the input is greater than largest uint112).\n     *\n     * Counterpart to Solidity's `uint112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint112(uint256 value) internal pure returns (uint112) {\n        require(value <= type(uint112).max, \"SafeCast: value doesn't fit in 112 bits\");\n        return uint112(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint104 from uint256, reverting on\n     * overflow (when the input is greater than largest uint104).\n     *\n     * Counterpart to Solidity's `uint104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint104(uint256 value) internal pure returns (uint104) {\n        require(value <= type(uint104).max, \"SafeCast: value doesn't fit in 104 bits\");\n        return uint104(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint96 from uint256, reverting on\n     * overflow (when the input is greater than largest uint96).\n     *\n     * Counterpart to Solidity's `uint96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     *\n     * _Available since v4.2._\n     */\n    function toUint96(uint256 value) internal pure returns (uint96) {\n        require(value <= type(uint96).max, \"SafeCast: value doesn't fit in 96 bits\");\n        return uint96(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint88 from uint256, reverting on\n     * overflow (when the input is greater than largest uint88).\n     *\n     * Counterpart to Solidity's `uint88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint88(uint256 value) internal pure returns (uint88) {\n        require(value <= type(uint88).max, \"SafeCast: value doesn't fit in 88 bits\");\n        return uint88(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint80 from uint256, reverting on\n     * overflow (when the input is greater than largest uint80).\n     *\n     * Counterpart to Solidity's `uint80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint80(uint256 value) internal pure returns (uint80) {\n        require(value <= type(uint80).max, \"SafeCast: value doesn't fit in 80 bits\");\n        return uint80(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint72 from uint256, reverting on\n     * overflow (when the input is greater than largest uint72).\n     *\n     * Counterpart to Solidity's `uint72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint72(uint256 value) internal pure returns (uint72) {\n        require(value <= type(uint72).max, \"SafeCast: value doesn't fit in 72 bits\");\n        return uint72(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint64 from uint256, reverting on\n     * overflow (when the input is greater than largest uint64).\n     *\n     * Counterpart to Solidity's `uint64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     *\n     * _Available since v2.5._\n     */\n    function toUint64(uint256 value) internal pure returns (uint64) {\n        require(value <= type(uint64).max, \"SafeCast: value doesn't fit in 64 bits\");\n        return uint64(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint56 from uint256, reverting on\n     * overflow (when the input is greater than largest uint56).\n     *\n     * Counterpart to Solidity's `uint56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint56(uint256 value) internal pure returns (uint56) {\n        require(value <= type(uint56).max, \"SafeCast: value doesn't fit in 56 bits\");\n        return uint56(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint48 from uint256, reverting on\n     * overflow (when the input is greater than largest uint48).\n     *\n     * Counterpart to Solidity's `uint48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint48(uint256 value) internal pure returns (uint48) {\n        require(value <= type(uint48).max, \"SafeCast: value doesn't fit in 48 bits\");\n        return uint48(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint40 from uint256, reverting on\n     * overflow (when the input is greater than largest uint40).\n     *\n     * Counterpart to Solidity's `uint40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint40(uint256 value) internal pure returns (uint40) {\n        require(value <= type(uint40).max, \"SafeCast: value doesn't fit in 40 bits\");\n        return uint40(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint32 from uint256, reverting on\n     * overflow (when the input is greater than largest uint32).\n     *\n     * Counterpart to Solidity's `uint32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     *\n     * _Available since v2.5._\n     */\n    function toUint32(uint256 value) internal pure returns (uint32) {\n        require(value <= type(uint32).max, \"SafeCast: value doesn't fit in 32 bits\");\n        return uint32(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint24 from uint256, reverting on\n     * overflow (when the input is greater than largest uint24).\n     *\n     * Counterpart to Solidity's `uint24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint24(uint256 value) internal pure returns (uint24) {\n        require(value <= type(uint24).max, \"SafeCast: value doesn't fit in 24 bits\");\n        return uint24(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint16 from uint256, reverting on\n     * overflow (when the input is greater than largest uint16).\n     *\n     * Counterpart to Solidity's `uint16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     *\n     * _Available since v2.5._\n     */\n    function toUint16(uint256 value) internal pure returns (uint16) {\n        require(value <= type(uint16).max, \"SafeCast: value doesn't fit in 16 bits\");\n        return uint16(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint8 from uint256, reverting on\n     * overflow (when the input is greater than largest uint8).\n     *\n     * Counterpart to Solidity's `uint8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     *\n     * _Available since v2.5._\n     */\n    function toUint8(uint256 value) internal pure returns (uint8) {\n        require(value <= type(uint8).max, \"SafeCast: value doesn't fit in 8 bits\");\n        return uint8(value);\n    }\n\n    /**\n     * @dev Converts a signed int256 into an unsigned uint256.\n     *\n     * Requirements:\n     *\n     * - input must be greater than or equal to 0.\n     *\n     * _Available since v3.0._\n     */\n    function toUint256(int256 value) internal pure returns (uint256) {\n        require(value >= 0, \"SafeCast: value must be positive\");\n        return uint256(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int248 from int256, reverting on\n     * overflow (when the input is less than smallest int248 or\n     * greater than largest int248).\n     *\n     * Counterpart to Solidity's `int248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt248(int256 value) internal pure returns (int248 downcasted) {\n        downcasted = int248(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 248 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int240 from int256, reverting on\n     * overflow (when the input is less than smallest int240 or\n     * greater than largest int240).\n     *\n     * Counterpart to Solidity's `int240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt240(int256 value) internal pure returns (int240 downcasted) {\n        downcasted = int240(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 240 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int232 from int256, reverting on\n     * overflow (when the input is less than smallest int232 or\n     * greater than largest int232).\n     *\n     * Counterpart to Solidity's `int232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt232(int256 value) internal pure returns (int232 downcasted) {\n        downcasted = int232(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 232 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int224 from int256, reverting on\n     * overflow (when the input is less than smallest int224 or\n     * greater than largest int224).\n     *\n     * Counterpart to Solidity's `int224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt224(int256 value) internal pure returns (int224 downcasted) {\n        downcasted = int224(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 224 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int216 from int256, reverting on\n     * overflow (when the input is less than smallest int216 or\n     * greater than largest int216).\n     *\n     * Counterpart to Solidity's `int216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt216(int256 value) internal pure returns (int216 downcasted) {\n        downcasted = int216(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 216 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int208 from int256, reverting on\n     * overflow (when the input is less than smallest int208 or\n     * greater than largest int208).\n     *\n     * Counterpart to Solidity's `int208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt208(int256 value) internal pure returns (int208 downcasted) {\n        downcasted = int208(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 208 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int200 from int256, reverting on\n     * overflow (when the input is less than smallest int200 or\n     * greater than largest int200).\n     *\n     * Counterpart to Solidity's `int200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt200(int256 value) internal pure returns (int200 downcasted) {\n        downcasted = int200(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 200 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int192 from int256, reverting on\n     * overflow (when the input is less than smallest int192 or\n     * greater than largest int192).\n     *\n     * Counterpart to Solidity's `int192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt192(int256 value) internal pure returns (int192 downcasted) {\n        downcasted = int192(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 192 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int184 from int256, reverting on\n     * overflow (when the input is less than smallest int184 or\n     * greater than largest int184).\n     *\n     * Counterpart to Solidity's `int184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt184(int256 value) internal pure returns (int184 downcasted) {\n        downcasted = int184(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 184 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int176 from int256, reverting on\n     * overflow (when the input is less than smallest int176 or\n     * greater than largest int176).\n     *\n     * Counterpart to Solidity's `int176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt176(int256 value) internal pure returns (int176 downcasted) {\n        downcasted = int176(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 176 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int168 from int256, reverting on\n     * overflow (when the input is less than smallest int168 or\n     * greater than largest int168).\n     *\n     * Counterpart to Solidity's `int168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt168(int256 value) internal pure returns (int168 downcasted) {\n        downcasted = int168(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 168 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int160 from int256, reverting on\n     * overflow (when the input is less than smallest int160 or\n     * greater than largest int160).\n     *\n     * Counterpart to Solidity's `int160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt160(int256 value) internal pure returns (int160 downcasted) {\n        downcasted = int160(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 160 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int152 from int256, reverting on\n     * overflow (when the input is less than smallest int152 or\n     * greater than largest int152).\n     *\n     * Counterpart to Solidity's `int152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt152(int256 value) internal pure returns (int152 downcasted) {\n        downcasted = int152(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 152 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int144 from int256, reverting on\n     * overflow (when the input is less than smallest int144 or\n     * greater than largest int144).\n     *\n     * Counterpart to Solidity's `int144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt144(int256 value) internal pure returns (int144 downcasted) {\n        downcasted = int144(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 144 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int136 from int256, reverting on\n     * overflow (when the input is less than smallest int136 or\n     * greater than largest int136).\n     *\n     * Counterpart to Solidity's `int136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt136(int256 value) internal pure returns (int136 downcasted) {\n        downcasted = int136(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 136 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int128 from int256, reverting on\n     * overflow (when the input is less than smallest int128 or\n     * greater than largest int128).\n     *\n     * Counterpart to Solidity's `int128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     *\n     * _Available since v3.1._\n     */\n    function toInt128(int256 value) internal pure returns (int128 downcasted) {\n        downcasted = int128(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 128 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int120 from int256, reverting on\n     * overflow (when the input is less than smallest int120 or\n     * greater than largest int120).\n     *\n     * Counterpart to Solidity's `int120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt120(int256 value) internal pure returns (int120 downcasted) {\n        downcasted = int120(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 120 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int112 from int256, reverting on\n     * overflow (when the input is less than smallest int112 or\n     * greater than largest int112).\n     *\n     * Counterpart to Solidity's `int112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt112(int256 value) internal pure returns (int112 downcasted) {\n        downcasted = int112(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 112 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int104 from int256, reverting on\n     * overflow (when the input is less than smallest int104 or\n     * greater than largest int104).\n     *\n     * Counterpart to Solidity's `int104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt104(int256 value) internal pure returns (int104 downcasted) {\n        downcasted = int104(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 104 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int96 from int256, reverting on\n     * overflow (when the input is less than smallest int96 or\n     * greater than largest int96).\n     *\n     * Counterpart to Solidity's `int96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt96(int256 value) internal pure returns (int96 downcasted) {\n        downcasted = int96(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 96 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int88 from int256, reverting on\n     * overflow (when the input is less than smallest int88 or\n     * greater than largest int88).\n     *\n     * Counterpart to Solidity's `int88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt88(int256 value) internal pure returns (int88 downcasted) {\n        downcasted = int88(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 88 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int80 from int256, reverting on\n     * overflow (when the input is less than smallest int80 or\n     * greater than largest int80).\n     *\n     * Counterpart to Solidity's `int80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt80(int256 value) internal pure returns (int80 downcasted) {\n        downcasted = int80(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 80 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int72 from int256, reverting on\n     * overflow (when the input is less than smallest int72 or\n     * greater than largest int72).\n     *\n     * Counterpart to Solidity's `int72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt72(int256 value) internal pure returns (int72 downcasted) {\n        downcasted = int72(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 72 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int64 from int256, reverting on\n     * overflow (when the input is less than smallest int64 or\n     * greater than largest int64).\n     *\n     * Counterpart to Solidity's `int64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     *\n     * _Available since v3.1._\n     */\n    function toInt64(int256 value) internal pure returns (int64 downcasted) {\n        downcasted = int64(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 64 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int56 from int256, reverting on\n     * overflow (when the input is less than smallest int56 or\n     * greater than largest int56).\n     *\n     * Counterpart to Solidity's `int56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt56(int256 value) internal pure returns (int56 downcasted) {\n        downcasted = int56(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 56 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int48 from int256, reverting on\n     * overflow (when the input is less than smallest int48 or\n     * greater than largest int48).\n     *\n     * Counterpart to Solidity's `int48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt48(int256 value) internal pure returns (int48 downcasted) {\n        downcasted = int48(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 48 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int40 from int256, reverting on\n     * overflow (when the input is less than smallest int40 or\n     * greater than largest int40).\n     *\n     * Counterpart to Solidity's `int40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt40(int256 value) internal pure returns (int40 downcasted) {\n        downcasted = int40(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 40 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int32 from int256, reverting on\n     * overflow (when the input is less than smallest int32 or\n     * greater than largest int32).\n     *\n     * Counterpart to Solidity's `int32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     *\n     * _Available since v3.1._\n     */\n    function toInt32(int256 value) internal pure returns (int32 downcasted) {\n        downcasted = int32(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 32 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int24 from int256, reverting on\n     * overflow (when the input is less than smallest int24 or\n     * greater than largest int24).\n     *\n     * Counterpart to Solidity's `int24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt24(int256 value) internal pure returns (int24 downcasted) {\n        downcasted = int24(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 24 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int16 from int256, reverting on\n     * overflow (when the input is less than smallest int16 or\n     * greater than largest int16).\n     *\n     * Counterpart to Solidity's `int16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     *\n     * _Available since v3.1._\n     */\n    function toInt16(int256 value) internal pure returns (int16 downcasted) {\n        downcasted = int16(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 16 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int8 from int256, reverting on\n     * overflow (when the input is less than smallest int8 or\n     * greater than largest int8).\n     *\n     * Counterpart to Solidity's `int8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     *\n     * _Available since v3.1._\n     */\n    function toInt8(int256 value) internal pure returns (int8 downcasted) {\n        downcasted = int8(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 8 bits\");\n    }\n\n    /**\n     * @dev Converts an unsigned uint256 into a signed int256.\n     *\n     * Requirements:\n     *\n     * - input must be less than or equal to maxInt256.\n     *\n     * _Available since v3.0._\n     */\n    function toInt256(uint256 value) internal pure returns (int256) {\n        // Note: Unsafe cast below is okay because `type(int256).max` is guaranteed to be positive\n        require(value <= uint256(type(int256).max), \"SafeCast: value doesn't fit in an int256\");\n        return int256(value);\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // must be unchecked in order to support `n = type(int256).min`\n            return uint256(n >= 0 ? n : -n);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/ShortStrings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/ShortStrings.sol)\n\npragma solidity ^0.8.8;\n\nimport \"./StorageSlot.sol\";\n\n// | string  | 0xAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA   |\n// | length  | 0x                                                              BB |\ntype ShortString is bytes32;\n\n/**\n * @dev This library provides functions to convert short memory strings\n * into a `ShortString` type that can be used as an immutable variable.\n *\n * Strings of arbitrary length can be optimized using this library if\n * they are short enough (up to 31 bytes) by packing them with their\n * length (1 byte) in a single EVM word (32 bytes). Additionally, a\n * fallback mechanism can be used for every other case.\n *\n * Usage example:\n *\n * ```solidity\n * contract Named {\n *     using ShortStrings for *;\n *\n *     ShortString private immutable _name;\n *     string private _nameFallback;\n *\n *     constructor(string memory contractName) {\n *         _name = contractName.toShortStringWithFallback(_nameFallback);\n *     }\n *\n *     function name() external view returns (string memory) {\n *         return _name.toStringWithFallback(_nameFallback);\n *     }\n * }\n * ```\n */\nlibrary ShortStrings {\n    // Used as an identifier for strings longer than 31 bytes.\n    bytes32 private constant _FALLBACK_SENTINEL = 0x00000000000000000000000000000000000000000000000000000000000000FF;\n\n    error StringTooLong(string str);\n    error InvalidShortString();\n\n    /**\n     * @dev Encode a string of at most 31 chars into a `ShortString`.\n     *\n     * This will trigger a `StringTooLong` error is the input string is too long.\n     */\n    function toShortString(string memory str) internal pure returns (ShortString) {\n        bytes memory bstr = bytes(str);\n        if (bstr.length > 31) {\n            revert StringTooLong(str);\n        }\n        return ShortString.wrap(bytes32(uint256(bytes32(bstr)) | bstr.length));\n    }\n\n    /**\n     * @dev Decode a `ShortString` back to a \"normal\" string.\n     */\n    function toString(ShortString sstr) internal pure returns (string memory) {\n        uint256 len = byteLength(sstr);\n        // using `new string(len)` would work locally but is not memory safe.\n        string memory str = new string(32);\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(str, len)\n            mstore(add(str, 0x20), sstr)\n        }\n        return str;\n    }\n\n    /**\n     * @dev Return the length of a `ShortString`.\n     */\n    function byteLength(ShortString sstr) internal pure returns (uint256) {\n        uint256 result = uint256(ShortString.unwrap(sstr)) & 0xFF;\n        if (result > 31) {\n            revert InvalidShortString();\n        }\n        return result;\n    }\n\n    /**\n     * @dev Encode a string into a `ShortString`, or write it to storage if it is too long.\n     */\n    function toShortStringWithFallback(string memory value, string storage store) internal returns (ShortString) {\n        if (bytes(value).length < 32) {\n            return toShortString(value);\n        } else {\n            StorageSlot.getStringSlot(store).value = value;\n            return ShortString.wrap(_FALLBACK_SENTINEL);\n        }\n    }\n\n    /**\n     * @dev Decode a string that was encoded to `ShortString` or written to storage using {setWithFallback}.\n     */\n    function toStringWithFallback(ShortString value, string storage store) internal pure returns (string memory) {\n        if (ShortString.unwrap(value) != _FALLBACK_SENTINEL) {\n            return toString(value);\n        } else {\n            return store;\n        }\n    }\n\n    /**\n     * @dev Return the length of a string that was encoded to `ShortString` or written to storage using {setWithFallback}.\n     *\n     * WARNING: This will return the \"byte length\" of the string. This may not reflect the actual length in terms of\n     * actual characters as the UTF-8 encoding of a single character can span over multiple bytes.\n     */\n    function byteLengthWithFallback(ShortString value, string storage store) internal view returns (uint256) {\n        if (ShortString.unwrap(value) != _FALLBACK_SENTINEL) {\n            return byteLength(value);\n        } else {\n            return bytes(store).length;\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/StorageSlot.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(Address.isContract(newImplementation), \"ERC1967: new implementation is not a contract\");\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n *\n * _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._\n * _Available since v4.9 for `string`, `bytes`._\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Strings.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./math/Math.sol\";\nimport \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant _SYMBOLS = \"0123456789abcdef\";\n    uint8 private constant _ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toString(int256 value) internal pure returns (string memory) {\n        return string(abi.encodePacked(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value))));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = _SYMBOLS[value & 0xf];\n            value >>= 4;\n        }\n        require(value == 0, \"Strings: hex length insufficient\");\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"},"contracts/Token.sol":{"content":"//SPDX-License-Identifier: MIT\r\npragma solidity >=0.8.19;\r\n\r\n// this will be a gorbernancy currency (for Ecommerce or actions)\r\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/extensions/draft-ERC20Permit.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\n\r\n\r\ncontract Token is ERC20, ERC20Permit, ERC20Votes, Ownable {\r\n    constructor() ERC20(\"Gorilla Tokens\", \"GORILLAZ\") ERC20Permit(\"Gorilla Governance Token\") {\r\n        _mint(msg.sender, 10000000*10**18);\r\n    }\r\n\r\n    // The functions below are overrides required by Solidity.\r\n\r\n// *** After Token Transfer\r\n    function _afterTokenTransfer(address from, address to, uint256 amount)\r\n        internal\r\n        override(ERC20, ERC20Votes)\r\n    {\r\n        super._afterTokenTransfer(from, to, amount);\r\n    }\r\n\r\n// *** MINT\r\n    function _mint(address to, uint256 amount)\r\n        internal\r\n        override(ERC20, ERC20Votes)\r\n    {\r\n        super._mint(to, amount);\r\n    }\r\n\r\n// *** BURN\r\n    function _burn(address account, uint256 amount)\r\n        internal\r\n        override(ERC20, ERC20Votes)\r\n    {\r\n        super._burn(account, amount);\r\n    }\r\n\r\n\r\n}"}},"settings":{"optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"sources":{"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[1896],"Ownable":[112]},"id":113,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"102:23:0"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":2,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":113,"sourceUnit":1897,"src":"127:30:0","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":4,"name":"Context","nameLocations":["683:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":1896,"src":"683:7:0"},"id":5,"nodeType":"InheritanceSpecifier","src":"683:7:0"}],"canonicalName":"Ownable","contractDependencies":[],"contractKind":"contract","documentation":{"id":3,"nodeType":"StructuredDocumentation","src":"159:494:0","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":112,"linearizedBaseContracts":[112,1896],"name":"Ownable","nameLocation":"672:7:0","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":7,"mutability":"mutable","name":"_owner","nameLocation":"713:6:0","nodeType":"VariableDeclaration","scope":112,"src":"697:22:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6,"name":"address","nodeType":"ElementaryTypeName","src":"697:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":13,"name":"OwnershipTransferred","nameLocation":"732:20:0","nodeType":"EventDefinition","parameters":{"id":12,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"769:13:0","nodeType":"VariableDeclaration","scope":13,"src":"753:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8,"name":"address","nodeType":"ElementaryTypeName","src":"753:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":11,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"800:8:0","nodeType":"VariableDeclaration","scope":13,"src":"784:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10,"name":"address","nodeType":"ElementaryTypeName","src":"784:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"752:57:0"},"src":"726:84:0"},{"body":{"id":22,"nodeType":"Block","src":"926:49:0","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":18,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1886,"src":"955:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":19,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"955:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":17,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"936:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":20,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"936:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":21,"nodeType":"ExpressionStatement","src":"936:32:0"}]},"documentation":{"id":14,"nodeType":"StructuredDocumentation","src":"816:91:0","text":" @dev Initializes the contract setting the deployer as the initial owner."},"id":23,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":15,"nodeType":"ParameterList","parameters":[],"src":"923:2:0"},"returnParameters":{"id":16,"nodeType":"ParameterList","parameters":[],"src":"926:0:0"},"scope":112,"src":"912:63:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":30,"nodeType":"Block","src":"1084:41:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":26,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":54,"src":"1094:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":27,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1094:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":28,"nodeType":"ExpressionStatement","src":"1094:13:0"},{"id":29,"nodeType":"PlaceholderStatement","src":"1117:1:0"}]},"documentation":{"id":24,"nodeType":"StructuredDocumentation","src":"981:77:0","text":" @dev Throws if called by any account other than the owner."},"id":31,"name":"onlyOwner","nameLocation":"1072:9:0","nodeType":"ModifierDefinition","parameters":{"id":25,"nodeType":"ParameterList","parameters":[],"src":"1081:2:0"},"src":"1063:62:0","virtual":false,"visibility":"internal"},{"body":{"id":39,"nodeType":"Block","src":"1256:30:0","statements":[{"expression":{"id":37,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"1273:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":36,"id":38,"nodeType":"Return","src":"1266:13:0"}]},"documentation":{"id":32,"nodeType":"StructuredDocumentation","src":"1131:65:0","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":40,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1210:5:0","nodeType":"FunctionDefinition","parameters":{"id":33,"nodeType":"ParameterList","parameters":[],"src":"1215:2:0"},"returnParameters":{"id":36,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":40,"src":"1247:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":34,"name":"address","nodeType":"ElementaryTypeName","src":"1247:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1246:9:0"},"scope":112,"src":"1201:85:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":53,"nodeType":"Block","src":"1404:85:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":49,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":45,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":40,"src":"1422:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":46,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1422:7:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":47,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1886,"src":"1433:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":48,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1433:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1422:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","id":50,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1447:34:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""},"value":"Ownable: caller is not the owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""}],"id":44,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1414:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":51,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1414:68:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":52,"nodeType":"ExpressionStatement","src":"1414:68:0"}]},"documentation":{"id":41,"nodeType":"StructuredDocumentation","src":"1292:62:0","text":" @dev Throws if the sender is not the owner."},"id":54,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1368:11:0","nodeType":"FunctionDefinition","parameters":{"id":42,"nodeType":"ParameterList","parameters":[],"src":"1379:2:0"},"returnParameters":{"id":43,"nodeType":"ParameterList","parameters":[],"src":"1404:0:0"},"scope":112,"src":"1359:130:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":67,"nodeType":"Block","src":"1878:47:0","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":63,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1915:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":62,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1907:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":61,"name":"address","nodeType":"ElementaryTypeName","src":"1907:7:0","typeDescriptions":{}}},"id":64,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1907:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":60,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"1888:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":65,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1888:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":66,"nodeType":"ExpressionStatement","src":"1888:30:0"}]},"documentation":{"id":55,"nodeType":"StructuredDocumentation","src":"1495:324:0","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":68,"implemented":true,"kind":"function","modifiers":[{"id":58,"kind":"modifierInvocation","modifierName":{"id":57,"name":"onlyOwner","nameLocations":["1868:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":31,"src":"1868:9:0"},"nodeType":"ModifierInvocation","src":"1868:9:0"}],"name":"renounceOwnership","nameLocation":"1833:17:0","nodeType":"FunctionDefinition","parameters":{"id":56,"nodeType":"ParameterList","parameters":[],"src":"1850:2:0"},"returnParameters":{"id":59,"nodeType":"ParameterList","parameters":[],"src":"1878:0:0"},"scope":112,"src":"1824:101:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":90,"nodeType":"Block","src":"2144:128:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":82,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":77,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":71,"src":"2162:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":80,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2182:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":79,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2174:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":78,"name":"address","nodeType":"ElementaryTypeName","src":"2174:7:0","typeDescriptions":{}}},"id":81,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2174:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2162:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373","id":83,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2186:40:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""},"value":"Ownable: new owner is the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""}],"id":76,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2154:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":84,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2154:73:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":85,"nodeType":"ExpressionStatement","src":"2154:73:0"},{"expression":{"arguments":[{"id":87,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":71,"src":"2256:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":86,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"2237:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":88,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2237:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":89,"nodeType":"ExpressionStatement","src":"2237:28:0"}]},"documentation":{"id":69,"nodeType":"StructuredDocumentation","src":"1931:138:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":91,"implemented":true,"kind":"function","modifiers":[{"id":74,"kind":"modifierInvocation","modifierName":{"id":73,"name":"onlyOwner","nameLocations":["2134:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":31,"src":"2134:9:0"},"nodeType":"ModifierInvocation","src":"2134:9:0"}],"name":"transferOwnership","nameLocation":"2083:17:0","nodeType":"FunctionDefinition","parameters":{"id":72,"nodeType":"ParameterList","parameters":[{"constant":false,"id":71,"mutability":"mutable","name":"newOwner","nameLocation":"2109:8:0","nodeType":"VariableDeclaration","scope":91,"src":"2101:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":70,"name":"address","nodeType":"ElementaryTypeName","src":"2101:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2100:18:0"},"returnParameters":{"id":75,"nodeType":"ParameterList","parameters":[],"src":"2144:0:0"},"scope":112,"src":"2074:198:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":110,"nodeType":"Block","src":"2489:124:0","statements":[{"assignments":[98],"declarations":[{"constant":false,"id":98,"mutability":"mutable","name":"oldOwner","nameLocation":"2507:8:0","nodeType":"VariableDeclaration","scope":110,"src":"2499:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":97,"name":"address","nodeType":"ElementaryTypeName","src":"2499:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":100,"initialValue":{"id":99,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"2518:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2499:25:0"},{"expression":{"id":103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":101,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"2534:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":102,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":94,"src":"2543:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2534:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":104,"nodeType":"ExpressionStatement","src":"2534:17:0"},{"eventCall":{"arguments":[{"id":106,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":98,"src":"2587:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":107,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":94,"src":"2597:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":105,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13,"src":"2566:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":108,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2566:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":109,"nodeType":"EmitStatement","src":"2561:45:0"}]},"documentation":{"id":92,"nodeType":"StructuredDocumentation","src":"2278:143:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":111,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2435:18:0","nodeType":"FunctionDefinition","parameters":{"id":95,"nodeType":"ParameterList","parameters":[{"constant":false,"id":94,"mutability":"mutable","name":"newOwner","nameLocation":"2462:8:0","nodeType":"VariableDeclaration","scope":111,"src":"2454:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":93,"name":"address","nodeType":"ElementaryTypeName","src":"2454:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2453:18:0"},"returnParameters":{"id":96,"nodeType":"ParameterList","parameters":[],"src":"2489:0:0"},"scope":112,"src":"2426:187:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":113,"src":"654:1961:0","usedErrors":[]}],"src":"102:2514:0"},"id":0},"@openzeppelin/contracts/governance/utils/IVotes.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/governance/utils/IVotes.sol","exportedSymbols":{"IVotes":[190]},"id":191,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":114,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"110:23:1"},{"abstract":false,"baseContracts":[],"canonicalName":"IVotes","contractDependencies":[],"contractKind":"interface","documentation":{"id":115,"nodeType":"StructuredDocumentation","src":"135:132:1","text":" @dev Common interface for {ERC20Votes}, {ERC721Votes}, and other {Votes}-enabled contracts.\n _Available since v4.5._"},"fullyImplemented":false,"id":190,"linearizedBaseContracts":[190],"name":"IVotes","nameLocation":"278:6:1","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":116,"nodeType":"StructuredDocumentation","src":"291:71:1","text":" @dev Emitted when an account changes their delegate."},"eventSelector":"3134e8a2e6d97e929a7e54011ea5485d7d196dd5f0ba4d4ef95803e8e3fc257f","id":124,"name":"DelegateChanged","nameLocation":"373:15:1","nodeType":"EventDefinition","parameters":{"id":123,"nodeType":"ParameterList","parameters":[{"constant":false,"id":118,"indexed":true,"mutability":"mutable","name":"delegator","nameLocation":"405:9:1","nodeType":"VariableDeclaration","scope":124,"src":"389:25:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":117,"name":"address","nodeType":"ElementaryTypeName","src":"389:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":120,"indexed":true,"mutability":"mutable","name":"fromDelegate","nameLocation":"432:12:1","nodeType":"VariableDeclaration","scope":124,"src":"416:28:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":119,"name":"address","nodeType":"ElementaryTypeName","src":"416:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":122,"indexed":true,"mutability":"mutable","name":"toDelegate","nameLocation":"462:10:1","nodeType":"VariableDeclaration","scope":124,"src":"446:26:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":121,"name":"address","nodeType":"ElementaryTypeName","src":"446:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"388:85:1"},"src":"367:107:1"},{"anonymous":false,"documentation":{"id":125,"nodeType":"StructuredDocumentation","src":"480:124:1","text":" @dev Emitted when a token transfer or delegate change results in changes to a delegate's number of votes."},"eventSelector":"dec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a724","id":133,"name":"DelegateVotesChanged","nameLocation":"615:20:1","nodeType":"EventDefinition","parameters":{"id":132,"nodeType":"ParameterList","parameters":[{"constant":false,"id":127,"indexed":true,"mutability":"mutable","name":"delegate","nameLocation":"652:8:1","nodeType":"VariableDeclaration","scope":133,"src":"636:24:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":126,"name":"address","nodeType":"ElementaryTypeName","src":"636:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":129,"indexed":false,"mutability":"mutable","name":"previousBalance","nameLocation":"670:15:1","nodeType":"VariableDeclaration","scope":133,"src":"662:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":128,"name":"uint256","nodeType":"ElementaryTypeName","src":"662:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":131,"indexed":false,"mutability":"mutable","name":"newBalance","nameLocation":"695:10:1","nodeType":"VariableDeclaration","scope":133,"src":"687:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":130,"name":"uint256","nodeType":"ElementaryTypeName","src":"687:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"635:71:1"},"src":"609:98:1"},{"documentation":{"id":134,"nodeType":"StructuredDocumentation","src":"713:79:1","text":" @dev Returns the current amount of votes that `account` has."},"functionSelector":"9ab24eb0","id":141,"implemented":false,"kind":"function","modifiers":[],"name":"getVotes","nameLocation":"806:8:1","nodeType":"FunctionDefinition","parameters":{"id":137,"nodeType":"ParameterList","parameters":[{"constant":false,"id":136,"mutability":"mutable","name":"account","nameLocation":"823:7:1","nodeType":"VariableDeclaration","scope":141,"src":"815:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":135,"name":"address","nodeType":"ElementaryTypeName","src":"815:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"814:17:1"},"returnParameters":{"id":140,"nodeType":"ParameterList","parameters":[{"constant":false,"id":139,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":141,"src":"855:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":138,"name":"uint256","nodeType":"ElementaryTypeName","src":"855:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"854:9:1"},"scope":190,"src":"797:67:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":142,"nodeType":"StructuredDocumentation","src":"870:230:1","text":" @dev Returns the amount of votes that `account` had at a specific moment in the past. If the `clock()` is\n configured to use block numbers, this will return the value at the end of the corresponding block."},"functionSelector":"3a46b1a8","id":151,"implemented":false,"kind":"function","modifiers":[],"name":"getPastVotes","nameLocation":"1114:12:1","nodeType":"FunctionDefinition","parameters":{"id":147,"nodeType":"ParameterList","parameters":[{"constant":false,"id":144,"mutability":"mutable","name":"account","nameLocation":"1135:7:1","nodeType":"VariableDeclaration","scope":151,"src":"1127:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":143,"name":"address","nodeType":"ElementaryTypeName","src":"1127:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":146,"mutability":"mutable","name":"timepoint","nameLocation":"1152:9:1","nodeType":"VariableDeclaration","scope":151,"src":"1144:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":145,"name":"uint256","nodeType":"ElementaryTypeName","src":"1144:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1126:36:1"},"returnParameters":{"id":150,"nodeType":"ParameterList","parameters":[{"constant":false,"id":149,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":151,"src":"1186:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":148,"name":"uint256","nodeType":"ElementaryTypeName","src":"1186:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1185:9:1"},"scope":190,"src":"1105:90:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":152,"nodeType":"StructuredDocumentation","src":"1201:481:1","text":" @dev Returns the total supply of votes available at a specific moment in the past. If the `clock()` is\n configured to use block numbers, this will return the value at the end of the corresponding block.\n NOTE: This value is the sum of all available votes, which is not necessarily the sum of all delegated votes.\n Votes that have not been delegated are still part of total supply, even though they would not participate in a\n vote."},"functionSelector":"8e539e8c","id":159,"implemented":false,"kind":"function","modifiers":[],"name":"getPastTotalSupply","nameLocation":"1696:18:1","nodeType":"FunctionDefinition","parameters":{"id":155,"nodeType":"ParameterList","parameters":[{"constant":false,"id":154,"mutability":"mutable","name":"timepoint","nameLocation":"1723:9:1","nodeType":"VariableDeclaration","scope":159,"src":"1715:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":153,"name":"uint256","nodeType":"ElementaryTypeName","src":"1715:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1714:19:1"},"returnParameters":{"id":158,"nodeType":"ParameterList","parameters":[{"constant":false,"id":157,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":159,"src":"1757:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":156,"name":"uint256","nodeType":"ElementaryTypeName","src":"1757:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1756:9:1"},"scope":190,"src":"1687:79:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":160,"nodeType":"StructuredDocumentation","src":"1772:71:1","text":" @dev Returns the delegate that `account` has chosen."},"functionSelector":"587cde1e","id":167,"implemented":false,"kind":"function","modifiers":[],"name":"delegates","nameLocation":"1857:9:1","nodeType":"FunctionDefinition","parameters":{"id":163,"nodeType":"ParameterList","parameters":[{"constant":false,"id":162,"mutability":"mutable","name":"account","nameLocation":"1875:7:1","nodeType":"VariableDeclaration","scope":167,"src":"1867:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":161,"name":"address","nodeType":"ElementaryTypeName","src":"1867:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1866:17:1"},"returnParameters":{"id":166,"nodeType":"ParameterList","parameters":[{"constant":false,"id":165,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":167,"src":"1907:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":164,"name":"address","nodeType":"ElementaryTypeName","src":"1907:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1906:9:1"},"scope":190,"src":"1848:68:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":168,"nodeType":"StructuredDocumentation","src":"1922:71:1","text":" @dev Delegates votes from the sender to `delegatee`."},"functionSelector":"5c19a95c","id":173,"implemented":false,"kind":"function","modifiers":[],"name":"delegate","nameLocation":"2007:8:1","nodeType":"FunctionDefinition","parameters":{"id":171,"nodeType":"ParameterList","parameters":[{"constant":false,"id":170,"mutability":"mutable","name":"delegatee","nameLocation":"2024:9:1","nodeType":"VariableDeclaration","scope":173,"src":"2016:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":169,"name":"address","nodeType":"ElementaryTypeName","src":"2016:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2015:19:1"},"returnParameters":{"id":172,"nodeType":"ParameterList","parameters":[],"src":"2043:0:1"},"scope":190,"src":"1998:46:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":174,"nodeType":"StructuredDocumentation","src":"2050:67:1","text":" @dev Delegates votes from signer to `delegatee`."},"functionSelector":"c3cda520","id":189,"implemented":false,"kind":"function","modifiers":[],"name":"delegateBySig","nameLocation":"2131:13:1","nodeType":"FunctionDefinition","parameters":{"id":187,"nodeType":"ParameterList","parameters":[{"constant":false,"id":176,"mutability":"mutable","name":"delegatee","nameLocation":"2153:9:1","nodeType":"VariableDeclaration","scope":189,"src":"2145:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":175,"name":"address","nodeType":"ElementaryTypeName","src":"2145:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":178,"mutability":"mutable","name":"nonce","nameLocation":"2172:5:1","nodeType":"VariableDeclaration","scope":189,"src":"2164:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":177,"name":"uint256","nodeType":"ElementaryTypeName","src":"2164:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":180,"mutability":"mutable","name":"expiry","nameLocation":"2187:6:1","nodeType":"VariableDeclaration","scope":189,"src":"2179:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":179,"name":"uint256","nodeType":"ElementaryTypeName","src":"2179:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":182,"mutability":"mutable","name":"v","nameLocation":"2201:1:1","nodeType":"VariableDeclaration","scope":189,"src":"2195:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":181,"name":"uint8","nodeType":"ElementaryTypeName","src":"2195:5:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":184,"mutability":"mutable","name":"r","nameLocation":"2212:1:1","nodeType":"VariableDeclaration","scope":189,"src":"2204:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":183,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2204:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":186,"mutability":"mutable","name":"s","nameLocation":"2223:1:1","nodeType":"VariableDeclaration","scope":189,"src":"2215:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":185,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2215:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2144:81:1"},"returnParameters":{"id":188,"nodeType":"ParameterList","parameters":[],"src":"2234:0:1"},"scope":190,"src":"2122:113:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":191,"src":"268:1969:1","usedErrors":[]}],"src":"110:2128:1"},"id":1},"@openzeppelin/contracts/interfaces/IERC5267.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC5267.sol","exportedSymbols":{"IERC5267":[215]},"id":216,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":192,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"107:23:2"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC5267","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":215,"linearizedBaseContracts":[215],"name":"IERC5267","nameLocation":"142:8:2","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":193,"nodeType":"StructuredDocumentation","src":"157:84:2","text":" @dev MAY be emitted to signal that the domain could have changed."},"eventSelector":"0a6387c9ea3628b88a633bb4f3b151770f70085117a15f9bf3787cda53f13d31","id":195,"name":"EIP712DomainChanged","nameLocation":"252:19:2","nodeType":"EventDefinition","parameters":{"id":194,"nodeType":"ParameterList","parameters":[],"src":"271:2:2"},"src":"246:28:2"},{"documentation":{"id":196,"nodeType":"StructuredDocumentation","src":"280:140:2","text":" @dev returns the fields and values that describe the domain separator used by this contract for EIP-712\n signature."},"functionSelector":"84b0196e","id":214,"implemented":false,"kind":"function","modifiers":[],"name":"eip712Domain","nameLocation":"434:12:2","nodeType":"FunctionDefinition","parameters":{"id":197,"nodeType":"ParameterList","parameters":[],"src":"446:2:2"},"returnParameters":{"id":213,"nodeType":"ParameterList","parameters":[{"constant":false,"id":199,"mutability":"mutable","name":"fields","nameLocation":"516:6:2","nodeType":"VariableDeclaration","scope":214,"src":"509:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":198,"name":"bytes1","nodeType":"ElementaryTypeName","src":"509:6:2","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"},{"constant":false,"id":201,"mutability":"mutable","name":"name","nameLocation":"550:4:2","nodeType":"VariableDeclaration","scope":214,"src":"536:18:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":200,"name":"string","nodeType":"ElementaryTypeName","src":"536:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":203,"mutability":"mutable","name":"version","nameLocation":"582:7:2","nodeType":"VariableDeclaration","scope":214,"src":"568:21:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":202,"name":"string","nodeType":"ElementaryTypeName","src":"568:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":205,"mutability":"mutable","name":"chainId","nameLocation":"611:7:2","nodeType":"VariableDeclaration","scope":214,"src":"603:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":204,"name":"uint256","nodeType":"ElementaryTypeName","src":"603:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":207,"mutability":"mutable","name":"verifyingContract","nameLocation":"640:17:2","nodeType":"VariableDeclaration","scope":214,"src":"632:25:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":206,"name":"address","nodeType":"ElementaryTypeName","src":"632:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":209,"mutability":"mutable","name":"salt","nameLocation":"679:4:2","nodeType":"VariableDeclaration","scope":214,"src":"671:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":208,"name":"bytes32","nodeType":"ElementaryTypeName","src":"671:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":212,"mutability":"mutable","name":"extensions","nameLocation":"714:10:2","nodeType":"VariableDeclaration","scope":214,"src":"697:27:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":210,"name":"uint256","nodeType":"ElementaryTypeName","src":"697:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":211,"nodeType":"ArrayTypeName","src":"697:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"495:239:2"},"scope":215,"src":"425:310:2","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":216,"src":"132:605:2","usedErrors":[]}],"src":"107:631:2"},"id":2},"@openzeppelin/contracts/interfaces/IERC5805.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC5805.sol","exportedSymbols":{"IERC5805":[224],"IERC6372":[239],"IVotes":[190]},"id":225,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":217,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"107:23:3"},{"absolutePath":"@openzeppelin/contracts/governance/utils/IVotes.sol","file":"../governance/utils/IVotes.sol","id":218,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":225,"sourceUnit":191,"src":"132:40:3","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC6372.sol","file":"./IERC6372.sol","id":219,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":225,"sourceUnit":240,"src":"173:24:3","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":220,"name":"IERC6372","nameLocations":["221:8:3"],"nodeType":"IdentifierPath","referencedDeclaration":239,"src":"221:8:3"},"id":221,"nodeType":"InheritanceSpecifier","src":"221:8:3"},{"baseName":{"id":222,"name":"IVotes","nameLocations":["231:6:3"],"nodeType":"IdentifierPath","referencedDeclaration":190,"src":"231:6:3"},"id":223,"nodeType":"InheritanceSpecifier","src":"231:6:3"}],"canonicalName":"IERC5805","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":224,"linearizedBaseContracts":[224,190,239],"name":"IERC5805","nameLocation":"209:8:3","nodeType":"ContractDefinition","nodes":[],"scope":225,"src":"199:41:3","usedErrors":[]}],"src":"107:134:3"},"id":3},"@openzeppelin/contracts/interfaces/IERC6372.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC6372.sol","exportedSymbols":{"IERC6372":[239]},"id":240,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":226,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"107:23:4"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC6372","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":239,"linearizedBaseContracts":[239],"name":"IERC6372","nameLocation":"142:8:4","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":227,"nodeType":"StructuredDocumentation","src":"157:133:4","text":" @dev Clock used for flagging checkpoints. Can be overridden to implement timestamp based checkpoints (and voting)."},"functionSelector":"91ddadf4","id":232,"implemented":false,"kind":"function","modifiers":[],"name":"clock","nameLocation":"304:5:4","nodeType":"FunctionDefinition","parameters":{"id":228,"nodeType":"ParameterList","parameters":[],"src":"309:2:4"},"returnParameters":{"id":231,"nodeType":"ParameterList","parameters":[{"constant":false,"id":230,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":232,"src":"335:6:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":229,"name":"uint48","nodeType":"ElementaryTypeName","src":"335:6:4","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"334:8:4"},"scope":239,"src":"295:48:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":233,"nodeType":"StructuredDocumentation","src":"349:48:4","text":" @dev Description of the clock"},"functionSelector":"4bf5d7e9","id":238,"implemented":false,"kind":"function","modifiers":[],"name":"CLOCK_MODE","nameLocation":"464:10:4","nodeType":"FunctionDefinition","parameters":{"id":234,"nodeType":"ParameterList","parameters":[],"src":"474:2:4"},"returnParameters":{"id":237,"nodeType":"ParameterList","parameters":[{"constant":false,"id":236,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":238,"src":"500:13:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":235,"name":"string","nodeType":"ElementaryTypeName","src":"500:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"499:15:4"},"scope":239,"src":"455:60:4","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":240,"src":"132:385:4","usedErrors":[]}],"src":"107:411:4"},"id":4},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","exportedSymbols":{"Context":[1896],"ERC20":[826],"IERC20":[904],"IERC20Metadata":[1835]},"id":827,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":241,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"105:23:5"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"./IERC20.sol","id":242,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":827,"sourceUnit":905,"src":"130:22:5","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","file":"./extensions/IERC20Metadata.sol","id":243,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":827,"sourceUnit":1836,"src":"153:41:5","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":244,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":827,"sourceUnit":1897,"src":"195:33:5","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":246,"name":"Context","nameLocations":["1550:7:5"],"nodeType":"IdentifierPath","referencedDeclaration":1896,"src":"1550:7:5"},"id":247,"nodeType":"InheritanceSpecifier","src":"1550:7:5"},{"baseName":{"id":248,"name":"IERC20","nameLocations":["1559:6:5"],"nodeType":"IdentifierPath","referencedDeclaration":904,"src":"1559:6:5"},"id":249,"nodeType":"InheritanceSpecifier","src":"1559:6:5"},{"baseName":{"id":250,"name":"IERC20Metadata","nameLocations":["1567:14:5"],"nodeType":"IdentifierPath","referencedDeclaration":1835,"src":"1567:14:5"},"id":251,"nodeType":"InheritanceSpecifier","src":"1567:14:5"}],"canonicalName":"ERC20","contractDependencies":[],"contractKind":"contract","documentation":{"id":245,"nodeType":"StructuredDocumentation","src":"230:1301:5","text":" @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {ERC20PresetMinterPauser}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."},"fullyImplemented":true,"id":826,"linearizedBaseContracts":[826,1835,904,1896],"name":"ERC20","nameLocation":"1541:5:5","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":255,"mutability":"mutable","name":"_balances","nameLocation":"1624:9:5","nodeType":"VariableDeclaration","scope":826,"src":"1588:45:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":254,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":252,"name":"address","nodeType":"ElementaryTypeName","src":"1596:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1588:27:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":253,"name":"uint256","nodeType":"ElementaryTypeName","src":"1607:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":261,"mutability":"mutable","name":"_allowances","nameLocation":"1696:11:5","nodeType":"VariableDeclaration","scope":826,"src":"1640:67:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"typeName":{"id":260,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":256,"name":"address","nodeType":"ElementaryTypeName","src":"1648:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1640:47:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":259,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":257,"name":"address","nodeType":"ElementaryTypeName","src":"1667:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1659:27:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":258,"name":"uint256","nodeType":"ElementaryTypeName","src":"1678:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"private"},{"constant":false,"id":263,"mutability":"mutable","name":"_totalSupply","nameLocation":"1730:12:5","nodeType":"VariableDeclaration","scope":826,"src":"1714:28:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":262,"name":"uint256","nodeType":"ElementaryTypeName","src":"1714:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":265,"mutability":"mutable","name":"_name","nameLocation":"1764:5:5","nodeType":"VariableDeclaration","scope":826,"src":"1749:20:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":264,"name":"string","nodeType":"ElementaryTypeName","src":"1749:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":267,"mutability":"mutable","name":"_symbol","nameLocation":"1790:7:5","nodeType":"VariableDeclaration","scope":826,"src":"1775:22:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":266,"name":"string","nodeType":"ElementaryTypeName","src":"1775:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":283,"nodeType":"Block","src":"2036:57:5","statements":[{"expression":{"id":277,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":275,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":265,"src":"2046:5:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":276,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":270,"src":"2054:5:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2046:13:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":278,"nodeType":"ExpressionStatement","src":"2046:13:5"},{"expression":{"id":281,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":279,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":267,"src":"2069:7:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":280,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":272,"src":"2079:7:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2069:17:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":282,"nodeType":"ExpressionStatement","src":"2069:17:5"}]},"documentation":{"id":268,"nodeType":"StructuredDocumentation","src":"1804:171:5","text":" @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."},"id":284,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":273,"nodeType":"ParameterList","parameters":[{"constant":false,"id":270,"mutability":"mutable","name":"name_","nameLocation":"2006:5:5","nodeType":"VariableDeclaration","scope":284,"src":"1992:19:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":269,"name":"string","nodeType":"ElementaryTypeName","src":"1992:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":272,"mutability":"mutable","name":"symbol_","nameLocation":"2027:7:5","nodeType":"VariableDeclaration","scope":284,"src":"2013:21:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":271,"name":"string","nodeType":"ElementaryTypeName","src":"2013:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1991:44:5"},"returnParameters":{"id":274,"nodeType":"ParameterList","parameters":[],"src":"2036:0:5"},"scope":826,"src":"1980:113:5","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[1822],"body":{"id":293,"nodeType":"Block","src":"2227:29:5","statements":[{"expression":{"id":291,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":265,"src":"2244:5:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":290,"id":292,"nodeType":"Return","src":"2237:12:5"}]},"documentation":{"id":285,"nodeType":"StructuredDocumentation","src":"2099:54:5","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":294,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"2167:4:5","nodeType":"FunctionDefinition","overrides":{"id":287,"nodeType":"OverrideSpecifier","overrides":[],"src":"2194:8:5"},"parameters":{"id":286,"nodeType":"ParameterList","parameters":[],"src":"2171:2:5"},"returnParameters":{"id":290,"nodeType":"ParameterList","parameters":[{"constant":false,"id":289,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":294,"src":"2212:13:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":288,"name":"string","nodeType":"ElementaryTypeName","src":"2212:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2211:15:5"},"scope":826,"src":"2158:98:5","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1828],"body":{"id":303,"nodeType":"Block","src":"2440:31:5","statements":[{"expression":{"id":301,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":267,"src":"2457:7:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":300,"id":302,"nodeType":"Return","src":"2450:14:5"}]},"documentation":{"id":295,"nodeType":"StructuredDocumentation","src":"2262:102:5","text":" @dev Returns the symbol of the token, usually a shorter version of the\n name."},"functionSelector":"95d89b41","id":304,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"2378:6:5","nodeType":"FunctionDefinition","overrides":{"id":297,"nodeType":"OverrideSpecifier","overrides":[],"src":"2407:8:5"},"parameters":{"id":296,"nodeType":"ParameterList","parameters":[],"src":"2384:2:5"},"returnParameters":{"id":300,"nodeType":"ParameterList","parameters":[{"constant":false,"id":299,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":304,"src":"2425:13:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":298,"name":"string","nodeType":"ElementaryTypeName","src":"2425:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2424:15:5"},"scope":826,"src":"2369:102:5","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1834],"body":{"id":313,"nodeType":"Block","src":"3169:26:5","statements":[{"expression":{"hexValue":"3138","id":311,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3186:2:5","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"functionReturnParameters":310,"id":312,"nodeType":"Return","src":"3179:9:5"}]},"documentation":{"id":305,"nodeType":"StructuredDocumentation","src":"2477:622:5","text":" @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."},"functionSelector":"313ce567","id":314,"implemented":true,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"3113:8:5","nodeType":"FunctionDefinition","overrides":{"id":307,"nodeType":"OverrideSpecifier","overrides":[],"src":"3144:8:5"},"parameters":{"id":306,"nodeType":"ParameterList","parameters":[],"src":"3121:2:5"},"returnParameters":{"id":310,"nodeType":"ParameterList","parameters":[{"constant":false,"id":309,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":314,"src":"3162:5:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":308,"name":"uint8","nodeType":"ElementaryTypeName","src":"3162:5:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"3161:7:5"},"scope":826,"src":"3104:91:5","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[853],"body":{"id":323,"nodeType":"Block","src":"3325:36:5","statements":[{"expression":{"id":321,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":263,"src":"3342:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":320,"id":322,"nodeType":"Return","src":"3335:19:5"}]},"documentation":{"id":315,"nodeType":"StructuredDocumentation","src":"3201:49:5","text":" @dev See {IERC20-totalSupply}."},"functionSelector":"18160ddd","id":324,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"3264:11:5","nodeType":"FunctionDefinition","overrides":{"id":317,"nodeType":"OverrideSpecifier","overrides":[],"src":"3298:8:5"},"parameters":{"id":316,"nodeType":"ParameterList","parameters":[],"src":"3275:2:5"},"returnParameters":{"id":320,"nodeType":"ParameterList","parameters":[{"constant":false,"id":319,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":324,"src":"3316:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":318,"name":"uint256","nodeType":"ElementaryTypeName","src":"3316:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3315:9:5"},"scope":826,"src":"3255:106:5","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[861],"body":{"id":337,"nodeType":"Block","src":"3502:42:5","statements":[{"expression":{"baseExpression":{"id":333,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":255,"src":"3519:9:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":335,"indexExpression":{"id":334,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":327,"src":"3529:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3519:18:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":332,"id":336,"nodeType":"Return","src":"3512:25:5"}]},"documentation":{"id":325,"nodeType":"StructuredDocumentation","src":"3367:47:5","text":" @dev See {IERC20-balanceOf}."},"functionSelector":"70a08231","id":338,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"3428:9:5","nodeType":"FunctionDefinition","overrides":{"id":329,"nodeType":"OverrideSpecifier","overrides":[],"src":"3475:8:5"},"parameters":{"id":328,"nodeType":"ParameterList","parameters":[{"constant":false,"id":327,"mutability":"mutable","name":"account","nameLocation":"3446:7:5","nodeType":"VariableDeclaration","scope":338,"src":"3438:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":326,"name":"address","nodeType":"ElementaryTypeName","src":"3438:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3437:17:5"},"returnParameters":{"id":332,"nodeType":"ParameterList","parameters":[{"constant":false,"id":331,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":338,"src":"3493:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":330,"name":"uint256","nodeType":"ElementaryTypeName","src":"3493:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3492:9:5"},"scope":826,"src":"3419:125:5","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[871],"body":{"id":362,"nodeType":"Block","src":"3825:104:5","statements":[{"assignments":[350],"declarations":[{"constant":false,"id":350,"mutability":"mutable","name":"owner","nameLocation":"3843:5:5","nodeType":"VariableDeclaration","scope":362,"src":"3835:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":349,"name":"address","nodeType":"ElementaryTypeName","src":"3835:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":353,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":351,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1886,"src":"3851:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":352,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3851:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3835:28:5"},{"expression":{"arguments":[{"id":355,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":350,"src":"3883:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":356,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":341,"src":"3890:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":357,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":343,"src":"3894:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":354,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":586,"src":"3873:9:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":358,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3873:28:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":359,"nodeType":"ExpressionStatement","src":"3873:28:5"},{"expression":{"hexValue":"74727565","id":360,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3918:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":348,"id":361,"nodeType":"Return","src":"3911:11:5"}]},"documentation":{"id":339,"nodeType":"StructuredDocumentation","src":"3550:185:5","text":" @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `amount`."},"functionSelector":"a9059cbb","id":363,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"3749:8:5","nodeType":"FunctionDefinition","overrides":{"id":345,"nodeType":"OverrideSpecifier","overrides":[],"src":"3801:8:5"},"parameters":{"id":344,"nodeType":"ParameterList","parameters":[{"constant":false,"id":341,"mutability":"mutable","name":"to","nameLocation":"3766:2:5","nodeType":"VariableDeclaration","scope":363,"src":"3758:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":340,"name":"address","nodeType":"ElementaryTypeName","src":"3758:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":343,"mutability":"mutable","name":"amount","nameLocation":"3778:6:5","nodeType":"VariableDeclaration","scope":363,"src":"3770:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":342,"name":"uint256","nodeType":"ElementaryTypeName","src":"3770:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3757:28:5"},"returnParameters":{"id":348,"nodeType":"ParameterList","parameters":[{"constant":false,"id":347,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":363,"src":"3819:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":346,"name":"bool","nodeType":"ElementaryTypeName","src":"3819:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3818:6:5"},"scope":826,"src":"3740:189:5","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[881],"body":{"id":380,"nodeType":"Block","src":"4085:51:5","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":374,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":261,"src":"4102:11:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":376,"indexExpression":{"id":375,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":366,"src":"4114:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4102:18:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":378,"indexExpression":{"id":377,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":368,"src":"4121:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4102:27:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":373,"id":379,"nodeType":"Return","src":"4095:34:5"}]},"documentation":{"id":364,"nodeType":"StructuredDocumentation","src":"3935:47:5","text":" @dev See {IERC20-allowance}."},"functionSelector":"dd62ed3e","id":381,"implemented":true,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"3996:9:5","nodeType":"FunctionDefinition","overrides":{"id":370,"nodeType":"OverrideSpecifier","overrides":[],"src":"4058:8:5"},"parameters":{"id":369,"nodeType":"ParameterList","parameters":[{"constant":false,"id":366,"mutability":"mutable","name":"owner","nameLocation":"4014:5:5","nodeType":"VariableDeclaration","scope":381,"src":"4006:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":365,"name":"address","nodeType":"ElementaryTypeName","src":"4006:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":368,"mutability":"mutable","name":"spender","nameLocation":"4029:7:5","nodeType":"VariableDeclaration","scope":381,"src":"4021:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":367,"name":"address","nodeType":"ElementaryTypeName","src":"4021:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4005:32:5"},"returnParameters":{"id":373,"nodeType":"ParameterList","parameters":[{"constant":false,"id":372,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":381,"src":"4076:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":371,"name":"uint256","nodeType":"ElementaryTypeName","src":"4076:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4075:9:5"},"scope":826,"src":"3987:149:5","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[891],"body":{"id":405,"nodeType":"Block","src":"4533:108:5","statements":[{"assignments":[393],"declarations":[{"constant":false,"id":393,"mutability":"mutable","name":"owner","nameLocation":"4551:5:5","nodeType":"VariableDeclaration","scope":405,"src":"4543:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":392,"name":"address","nodeType":"ElementaryTypeName","src":"4543:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":396,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":394,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1886,"src":"4559:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":395,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4559:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4543:28:5"},{"expression":{"arguments":[{"id":398,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":393,"src":"4590:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":399,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":384,"src":"4597:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":400,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":386,"src":"4606:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":397,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":760,"src":"4581:8:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":401,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4581:32:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":402,"nodeType":"ExpressionStatement","src":"4581:32:5"},{"expression":{"hexValue":"74727565","id":403,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4630:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":391,"id":404,"nodeType":"Return","src":"4623:11:5"}]},"documentation":{"id":382,"nodeType":"StructuredDocumentation","src":"4142:297:5","text":" @dev See {IERC20-approve}.\n NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"095ea7b3","id":406,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"4453:7:5","nodeType":"FunctionDefinition","overrides":{"id":388,"nodeType":"OverrideSpecifier","overrides":[],"src":"4509:8:5"},"parameters":{"id":387,"nodeType":"ParameterList","parameters":[{"constant":false,"id":384,"mutability":"mutable","name":"spender","nameLocation":"4469:7:5","nodeType":"VariableDeclaration","scope":406,"src":"4461:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":383,"name":"address","nodeType":"ElementaryTypeName","src":"4461:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":386,"mutability":"mutable","name":"amount","nameLocation":"4486:6:5","nodeType":"VariableDeclaration","scope":406,"src":"4478:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":385,"name":"uint256","nodeType":"ElementaryTypeName","src":"4478:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4460:33:5"},"returnParameters":{"id":391,"nodeType":"ParameterList","parameters":[{"constant":false,"id":390,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":406,"src":"4527:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":389,"name":"bool","nodeType":"ElementaryTypeName","src":"4527:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4526:6:5"},"scope":826,"src":"4444:197:5","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[903],"body":{"id":438,"nodeType":"Block","src":"5306:153:5","statements":[{"assignments":[420],"declarations":[{"constant":false,"id":420,"mutability":"mutable","name":"spender","nameLocation":"5324:7:5","nodeType":"VariableDeclaration","scope":438,"src":"5316:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":419,"name":"address","nodeType":"ElementaryTypeName","src":"5316:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":423,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":421,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1886,"src":"5334:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":422,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5334:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5316:30:5"},{"expression":{"arguments":[{"id":425,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":409,"src":"5372:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":426,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":420,"src":"5378:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":427,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":413,"src":"5387:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":424,"name":"_spendAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":803,"src":"5356:15:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":428,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5356:38:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":429,"nodeType":"ExpressionStatement","src":"5356:38:5"},{"expression":{"arguments":[{"id":431,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":409,"src":"5414:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":432,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":411,"src":"5420:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":433,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":413,"src":"5424:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":430,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":586,"src":"5404:9:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":434,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5404:27:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":435,"nodeType":"ExpressionStatement","src":"5404:27:5"},{"expression":{"hexValue":"74727565","id":436,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5448:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":418,"id":437,"nodeType":"Return","src":"5441:11:5"}]},"documentation":{"id":407,"nodeType":"StructuredDocumentation","src":"4647:551:5","text":" @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`.\n - the caller must have allowance for ``from``'s tokens of at least\n `amount`."},"functionSelector":"23b872dd","id":439,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"5212:12:5","nodeType":"FunctionDefinition","overrides":{"id":415,"nodeType":"OverrideSpecifier","overrides":[],"src":"5282:8:5"},"parameters":{"id":414,"nodeType":"ParameterList","parameters":[{"constant":false,"id":409,"mutability":"mutable","name":"from","nameLocation":"5233:4:5","nodeType":"VariableDeclaration","scope":439,"src":"5225:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":408,"name":"address","nodeType":"ElementaryTypeName","src":"5225:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":411,"mutability":"mutable","name":"to","nameLocation":"5247:2:5","nodeType":"VariableDeclaration","scope":439,"src":"5239:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":410,"name":"address","nodeType":"ElementaryTypeName","src":"5239:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":413,"mutability":"mutable","name":"amount","nameLocation":"5259:6:5","nodeType":"VariableDeclaration","scope":439,"src":"5251:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":412,"name":"uint256","nodeType":"ElementaryTypeName","src":"5251:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5224:42:5"},"returnParameters":{"id":418,"nodeType":"ParameterList","parameters":[{"constant":false,"id":417,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":439,"src":"5300:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":416,"name":"bool","nodeType":"ElementaryTypeName","src":"5300:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5299:6:5"},"scope":826,"src":"5203:256:5","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":467,"nodeType":"Block","src":"5948:140:5","statements":[{"assignments":[450],"declarations":[{"constant":false,"id":450,"mutability":"mutable","name":"owner","nameLocation":"5966:5:5","nodeType":"VariableDeclaration","scope":467,"src":"5958:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":449,"name":"address","nodeType":"ElementaryTypeName","src":"5958:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":453,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":451,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1886,"src":"5974:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":452,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5974:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5958:28:5"},{"expression":{"arguments":[{"id":455,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":450,"src":"6005:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":456,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":442,"src":"6012:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":458,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":450,"src":"6031:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":459,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":442,"src":"6038:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":457,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":381,"src":"6021:9:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":460,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6021:25:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":461,"name":"addedValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":444,"src":"6049:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6021:38:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":454,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":760,"src":"5996:8:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":463,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5996:64:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":464,"nodeType":"ExpressionStatement","src":"5996:64:5"},{"expression":{"hexValue":"74727565","id":465,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6077:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":448,"id":466,"nodeType":"Return","src":"6070:11:5"}]},"documentation":{"id":440,"nodeType":"StructuredDocumentation","src":"5465:384:5","text":" @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"39509351","id":468,"implemented":true,"kind":"function","modifiers":[],"name":"increaseAllowance","nameLocation":"5863:17:5","nodeType":"FunctionDefinition","parameters":{"id":445,"nodeType":"ParameterList","parameters":[{"constant":false,"id":442,"mutability":"mutable","name":"spender","nameLocation":"5889:7:5","nodeType":"VariableDeclaration","scope":468,"src":"5881:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":441,"name":"address","nodeType":"ElementaryTypeName","src":"5881:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":444,"mutability":"mutable","name":"addedValue","nameLocation":"5906:10:5","nodeType":"VariableDeclaration","scope":468,"src":"5898:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":443,"name":"uint256","nodeType":"ElementaryTypeName","src":"5898:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5880:37:5"},"returnParameters":{"id":448,"nodeType":"ParameterList","parameters":[{"constant":false,"id":447,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":468,"src":"5942:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":446,"name":"bool","nodeType":"ElementaryTypeName","src":"5942:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5941:6:5"},"scope":826,"src":"5854:234:5","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":508,"nodeType":"Block","src":"6674:328:5","statements":[{"assignments":[479],"declarations":[{"constant":false,"id":479,"mutability":"mutable","name":"owner","nameLocation":"6692:5:5","nodeType":"VariableDeclaration","scope":508,"src":"6684:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":478,"name":"address","nodeType":"ElementaryTypeName","src":"6684:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":482,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":480,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1886,"src":"6700:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":481,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6700:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6684:28:5"},{"assignments":[484],"declarations":[{"constant":false,"id":484,"mutability":"mutable","name":"currentAllowance","nameLocation":"6730:16:5","nodeType":"VariableDeclaration","scope":508,"src":"6722:24:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":483,"name":"uint256","nodeType":"ElementaryTypeName","src":"6722:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":489,"initialValue":{"arguments":[{"id":486,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":479,"src":"6759:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":487,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":471,"src":"6766:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":485,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":381,"src":"6749:9:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":488,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6749:25:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6722:52:5"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":493,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":491,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":484,"src":"6792:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":492,"name":"subtractedValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":473,"src":"6812:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6792:35:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f","id":494,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6829:39:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","typeString":"literal_string \"ERC20: decreased allowance below zero\""},"value":"ERC20: decreased allowance below zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","typeString":"literal_string \"ERC20: decreased allowance below zero\""}],"id":490,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6784:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":495,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6784:85:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":496,"nodeType":"ExpressionStatement","src":"6784:85:5"},{"id":505,"nodeType":"UncheckedBlock","src":"6879:95:5","statements":[{"expression":{"arguments":[{"id":498,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":479,"src":"6912:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":499,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":471,"src":"6919:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":502,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":500,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":484,"src":"6928:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":501,"name":"subtractedValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":473,"src":"6947:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6928:34:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":497,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":760,"src":"6903:8:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":503,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6903:60:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":504,"nodeType":"ExpressionStatement","src":"6903:60:5"}]},{"expression":{"hexValue":"74727565","id":506,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6991:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":477,"id":507,"nodeType":"Return","src":"6984:11:5"}]},"documentation":{"id":469,"nodeType":"StructuredDocumentation","src":"6094:476:5","text":" @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."},"functionSelector":"a457c2d7","id":509,"implemented":true,"kind":"function","modifiers":[],"name":"decreaseAllowance","nameLocation":"6584:17:5","nodeType":"FunctionDefinition","parameters":{"id":474,"nodeType":"ParameterList","parameters":[{"constant":false,"id":471,"mutability":"mutable","name":"spender","nameLocation":"6610:7:5","nodeType":"VariableDeclaration","scope":509,"src":"6602:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":470,"name":"address","nodeType":"ElementaryTypeName","src":"6602:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":473,"mutability":"mutable","name":"subtractedValue","nameLocation":"6627:15:5","nodeType":"VariableDeclaration","scope":509,"src":"6619:23:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":472,"name":"uint256","nodeType":"ElementaryTypeName","src":"6619:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6601:42:5"},"returnParameters":{"id":477,"nodeType":"ParameterList","parameters":[{"constant":false,"id":476,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":509,"src":"6668:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":475,"name":"bool","nodeType":"ElementaryTypeName","src":"6668:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6667:6:5"},"scope":826,"src":"6575:427:5","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":585,"nodeType":"Block","src":"7534:710:5","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":525,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":520,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":512,"src":"7552:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":523,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7568:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":522,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7560:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":521,"name":"address","nodeType":"ElementaryTypeName","src":"7560:7:5","typeDescriptions":{}}},"id":524,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7560:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7552:18:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373","id":526,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7572:39:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","typeString":"literal_string \"ERC20: transfer from the zero address\""},"value":"ERC20: transfer from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","typeString":"literal_string \"ERC20: transfer from the zero address\""}],"id":519,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7544:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":527,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7544:68:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":528,"nodeType":"ExpressionStatement","src":"7544:68:5"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":535,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":530,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":514,"src":"7630:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":533,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7644:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":532,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7636:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":531,"name":"address","nodeType":"ElementaryTypeName","src":"7636:7:5","typeDescriptions":{}}},"id":534,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7636:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7630:16:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a207472616e7366657220746f20746865207a65726f2061646472657373","id":536,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7648:37:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","typeString":"literal_string \"ERC20: transfer to the zero address\""},"value":"ERC20: transfer to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","typeString":"literal_string \"ERC20: transfer to the zero address\""}],"id":529,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7622:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":537,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7622:64:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":538,"nodeType":"ExpressionStatement","src":"7622:64:5"},{"expression":{"arguments":[{"id":540,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":512,"src":"7718:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":541,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":514,"src":"7724:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":542,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":516,"src":"7728:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":539,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":814,"src":"7697:20:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":543,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7697:38:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":544,"nodeType":"ExpressionStatement","src":"7697:38:5"},{"assignments":[546],"declarations":[{"constant":false,"id":546,"mutability":"mutable","name":"fromBalance","nameLocation":"7754:11:5","nodeType":"VariableDeclaration","scope":585,"src":"7746:19:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":545,"name":"uint256","nodeType":"ElementaryTypeName","src":"7746:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":550,"initialValue":{"baseExpression":{"id":547,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":255,"src":"7768:9:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":549,"indexExpression":{"id":548,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":512,"src":"7778:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7768:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7746:37:5"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":554,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":552,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":546,"src":"7801:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":553,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":516,"src":"7816:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7801:21:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365","id":555,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7824:40:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","typeString":"literal_string \"ERC20: transfer amount exceeds balance\""},"value":"ERC20: transfer amount exceeds balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","typeString":"literal_string \"ERC20: transfer amount exceeds balance\""}],"id":551,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7793:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":556,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7793:72:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":557,"nodeType":"ExpressionStatement","src":"7793:72:5"},{"id":572,"nodeType":"UncheckedBlock","src":"7875:273:5","statements":[{"expression":{"id":564,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":558,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":255,"src":"7899:9:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":560,"indexExpression":{"id":559,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":512,"src":"7909:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7899:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":563,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":561,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":546,"src":"7917:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":562,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":516,"src":"7931:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7917:20:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7899:38:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":565,"nodeType":"ExpressionStatement","src":"7899:38:5"},{"expression":{"id":570,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":566,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":255,"src":"8114:9:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":568,"indexExpression":{"id":567,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":514,"src":"8124:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8114:13:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":569,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":516,"src":"8131:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8114:23:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":571,"nodeType":"ExpressionStatement","src":"8114:23:5"}]},{"eventCall":{"arguments":[{"id":574,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":512,"src":"8172:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":575,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":514,"src":"8178:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":576,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":516,"src":"8182:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":573,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":838,"src":"8163:8:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":577,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8163:26:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":578,"nodeType":"EmitStatement","src":"8158:31:5"},{"expression":{"arguments":[{"id":580,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":512,"src":"8220:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":581,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":514,"src":"8226:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":582,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":516,"src":"8230:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":579,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":825,"src":"8200:19:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":583,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8200:37:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":584,"nodeType":"ExpressionStatement","src":"8200:37:5"}]},"documentation":{"id":510,"nodeType":"StructuredDocumentation","src":"7008:443:5","text":" @dev Moves `amount` of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`."},"id":586,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"7465:9:5","nodeType":"FunctionDefinition","parameters":{"id":517,"nodeType":"ParameterList","parameters":[{"constant":false,"id":512,"mutability":"mutable","name":"from","nameLocation":"7483:4:5","nodeType":"VariableDeclaration","scope":586,"src":"7475:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":511,"name":"address","nodeType":"ElementaryTypeName","src":"7475:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":514,"mutability":"mutable","name":"to","nameLocation":"7497:2:5","nodeType":"VariableDeclaration","scope":586,"src":"7489:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":513,"name":"address","nodeType":"ElementaryTypeName","src":"7489:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":516,"mutability":"mutable","name":"amount","nameLocation":"7509:6:5","nodeType":"VariableDeclaration","scope":586,"src":"7501:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":515,"name":"uint256","nodeType":"ElementaryTypeName","src":"7501:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7474:42:5"},"returnParameters":{"id":518,"nodeType":"ParameterList","parameters":[],"src":"7534:0:5"},"scope":826,"src":"7456:788:5","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":642,"nodeType":"Block","src":"8585:470:5","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":600,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":595,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":589,"src":"8603:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":598,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8622:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":597,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8614:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":596,"name":"address","nodeType":"ElementaryTypeName","src":"8614:7:5","typeDescriptions":{}}},"id":599,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8614:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8603:21:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a206d696e7420746f20746865207a65726f2061646472657373","id":601,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8626:33:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e","typeString":"literal_string \"ERC20: mint to the zero address\""},"value":"ERC20: mint to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e","typeString":"literal_string \"ERC20: mint to the zero address\""}],"id":594,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8595:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":602,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8595:65:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":603,"nodeType":"ExpressionStatement","src":"8595:65:5"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":607,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8700:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":606,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8692:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":605,"name":"address","nodeType":"ElementaryTypeName","src":"8692:7:5","typeDescriptions":{}}},"id":608,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8692:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":609,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":589,"src":"8704:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":610,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":591,"src":"8713:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":604,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":814,"src":"8671:20:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":611,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8671:49:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":612,"nodeType":"ExpressionStatement","src":"8671:49:5"},{"expression":{"id":615,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":613,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":263,"src":"8731:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":614,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":591,"src":"8747:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8731:22:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":616,"nodeType":"ExpressionStatement","src":"8731:22:5"},{"id":623,"nodeType":"UncheckedBlock","src":"8763:175:5","statements":[{"expression":{"id":621,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":617,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":255,"src":"8899:9:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":619,"indexExpression":{"id":618,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":589,"src":"8909:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8899:18:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":620,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":591,"src":"8921:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8899:28:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":622,"nodeType":"ExpressionStatement","src":"8899:28:5"}]},{"eventCall":{"arguments":[{"arguments":[{"hexValue":"30","id":627,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8969:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":626,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8961:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":625,"name":"address","nodeType":"ElementaryTypeName","src":"8961:7:5","typeDescriptions":{}}},"id":628,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8961:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":629,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":589,"src":"8973:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":630,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":591,"src":"8982:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":624,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":838,"src":"8952:8:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":631,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8952:37:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":632,"nodeType":"EmitStatement","src":"8947:42:5"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":636,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9028:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":635,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9020:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":634,"name":"address","nodeType":"ElementaryTypeName","src":"9020:7:5","typeDescriptions":{}}},"id":637,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9020:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":638,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":589,"src":"9032:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":639,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":591,"src":"9041:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":633,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":825,"src":"9000:19:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":640,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9000:48:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":641,"nodeType":"ExpressionStatement","src":"9000:48:5"}]},"documentation":{"id":587,"nodeType":"StructuredDocumentation","src":"8250:265:5","text":"@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `account` cannot be the zero address."},"id":643,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"8529:5:5","nodeType":"FunctionDefinition","parameters":{"id":592,"nodeType":"ParameterList","parameters":[{"constant":false,"id":589,"mutability":"mutable","name":"account","nameLocation":"8543:7:5","nodeType":"VariableDeclaration","scope":643,"src":"8535:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":588,"name":"address","nodeType":"ElementaryTypeName","src":"8535:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":591,"mutability":"mutable","name":"amount","nameLocation":"8560:6:5","nodeType":"VariableDeclaration","scope":643,"src":"8552:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":590,"name":"uint256","nodeType":"ElementaryTypeName","src":"8552:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8534:33:5"},"returnParameters":{"id":593,"nodeType":"ParameterList","parameters":[],"src":"8585:0:5"},"scope":826,"src":"8520:535:5","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":714,"nodeType":"Block","src":"9440:594:5","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":657,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":652,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":646,"src":"9458:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":655,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9477:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":654,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9469:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":653,"name":"address","nodeType":"ElementaryTypeName","src":"9469:7:5","typeDescriptions":{}}},"id":656,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9469:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9458:21:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a206275726e2066726f6d20746865207a65726f2061646472657373","id":658,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9481:35:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f","typeString":"literal_string \"ERC20: burn from the zero address\""},"value":"ERC20: burn from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f","typeString":"literal_string \"ERC20: burn from the zero address\""}],"id":651,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9450:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":659,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9450:67:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":660,"nodeType":"ExpressionStatement","src":"9450:67:5"},{"expression":{"arguments":[{"id":662,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":646,"src":"9549:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":665,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9566:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":664,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9558:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":663,"name":"address","nodeType":"ElementaryTypeName","src":"9558:7:5","typeDescriptions":{}}},"id":666,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9558:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":667,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":648,"src":"9570:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":661,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":814,"src":"9528:20:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":668,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9528:49:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":669,"nodeType":"ExpressionStatement","src":"9528:49:5"},{"assignments":[671],"declarations":[{"constant":false,"id":671,"mutability":"mutable","name":"accountBalance","nameLocation":"9596:14:5","nodeType":"VariableDeclaration","scope":714,"src":"9588:22:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":670,"name":"uint256","nodeType":"ElementaryTypeName","src":"9588:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":675,"initialValue":{"baseExpression":{"id":672,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":255,"src":"9613:9:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":674,"indexExpression":{"id":673,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":646,"src":"9623:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9613:18:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9588:43:5"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":679,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":677,"name":"accountBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":671,"src":"9649:14:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":678,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":648,"src":"9667:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9649:24:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365","id":680,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9675:36:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd","typeString":"literal_string \"ERC20: burn amount exceeds balance\""},"value":"ERC20: burn amount exceeds balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd","typeString":"literal_string \"ERC20: burn amount exceeds balance\""}],"id":676,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9641:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":681,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9641:71:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":682,"nodeType":"ExpressionStatement","src":"9641:71:5"},{"id":695,"nodeType":"UncheckedBlock","src":"9722:194:5","statements":[{"expression":{"id":689,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":683,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":255,"src":"9746:9:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":685,"indexExpression":{"id":684,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":646,"src":"9756:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9746:18:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":688,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":686,"name":"accountBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":671,"src":"9767:14:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":687,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":648,"src":"9784:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9767:23:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9746:44:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":690,"nodeType":"ExpressionStatement","src":"9746:44:5"},{"expression":{"id":693,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":691,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":263,"src":"9883:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":692,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":648,"src":"9899:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9883:22:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":694,"nodeType":"ExpressionStatement","src":"9883:22:5"}]},{"eventCall":{"arguments":[{"id":697,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":646,"src":"9940:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":700,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9957:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":699,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9949:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":698,"name":"address","nodeType":"ElementaryTypeName","src":"9949:7:5","typeDescriptions":{}}},"id":701,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9949:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":702,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":648,"src":"9961:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":696,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":838,"src":"9931:8:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":703,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9931:37:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":704,"nodeType":"EmitStatement","src":"9926:42:5"},{"expression":{"arguments":[{"id":706,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":646,"src":"9999:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":709,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10016:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":708,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10008:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":707,"name":"address","nodeType":"ElementaryTypeName","src":"10008:7:5","typeDescriptions":{}}},"id":710,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10008:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":711,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":648,"src":"10020:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":705,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":825,"src":"9979:19:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":712,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9979:48:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":713,"nodeType":"ExpressionStatement","src":"9979:48:5"}]},"documentation":{"id":644,"nodeType":"StructuredDocumentation","src":"9061:309:5","text":" @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."},"id":715,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"9384:5:5","nodeType":"FunctionDefinition","parameters":{"id":649,"nodeType":"ParameterList","parameters":[{"constant":false,"id":646,"mutability":"mutable","name":"account","nameLocation":"9398:7:5","nodeType":"VariableDeclaration","scope":715,"src":"9390:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":645,"name":"address","nodeType":"ElementaryTypeName","src":"9390:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":648,"mutability":"mutable","name":"amount","nameLocation":"9415:6:5","nodeType":"VariableDeclaration","scope":715,"src":"9407:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":647,"name":"uint256","nodeType":"ElementaryTypeName","src":"9407:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9389:33:5"},"returnParameters":{"id":650,"nodeType":"ParameterList","parameters":[],"src":"9440:0:5"},"scope":826,"src":"9375:659:5","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":759,"nodeType":"Block","src":"10540:257:5","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":731,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":726,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":718,"src":"10558:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":729,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10575:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":728,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10567:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":727,"name":"address","nodeType":"ElementaryTypeName","src":"10567:7:5","typeDescriptions":{}}},"id":730,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10567:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10558:19:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373","id":732,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10579:38:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","typeString":"literal_string \"ERC20: approve from the zero address\""},"value":"ERC20: approve from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","typeString":"literal_string \"ERC20: approve from the zero address\""}],"id":725,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10550:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":733,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10550:68:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":734,"nodeType":"ExpressionStatement","src":"10550:68:5"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":741,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":736,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":720,"src":"10636:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":739,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10655:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":738,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10647:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":737,"name":"address","nodeType":"ElementaryTypeName","src":"10647:7:5","typeDescriptions":{}}},"id":740,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10647:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10636:21:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a20617070726f766520746f20746865207a65726f2061646472657373","id":742,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10659:36:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","typeString":"literal_string \"ERC20: approve to the zero address\""},"value":"ERC20: approve to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","typeString":"literal_string \"ERC20: approve to the zero address\""}],"id":735,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10628:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":743,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10628:68:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":744,"nodeType":"ExpressionStatement","src":"10628:68:5"},{"expression":{"id":751,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":745,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":261,"src":"10707:11:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":748,"indexExpression":{"id":746,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":718,"src":"10719:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10707:18:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":749,"indexExpression":{"id":747,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":720,"src":"10726:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10707:27:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":750,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":722,"src":"10737:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10707:36:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":752,"nodeType":"ExpressionStatement","src":"10707:36:5"},{"eventCall":{"arguments":[{"id":754,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":718,"src":"10767:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":755,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":720,"src":"10774:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":756,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":722,"src":"10783:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":753,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":847,"src":"10758:8:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":757,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10758:32:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":758,"nodeType":"EmitStatement","src":"10753:37:5"}]},"documentation":{"id":716,"nodeType":"StructuredDocumentation","src":"10040:412:5","text":" @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."},"id":760,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"10466:8:5","nodeType":"FunctionDefinition","parameters":{"id":723,"nodeType":"ParameterList","parameters":[{"constant":false,"id":718,"mutability":"mutable","name":"owner","nameLocation":"10483:5:5","nodeType":"VariableDeclaration","scope":760,"src":"10475:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":717,"name":"address","nodeType":"ElementaryTypeName","src":"10475:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":720,"mutability":"mutable","name":"spender","nameLocation":"10498:7:5","nodeType":"VariableDeclaration","scope":760,"src":"10490:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":719,"name":"address","nodeType":"ElementaryTypeName","src":"10490:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":722,"mutability":"mutable","name":"amount","nameLocation":"10515:6:5","nodeType":"VariableDeclaration","scope":760,"src":"10507:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":721,"name":"uint256","nodeType":"ElementaryTypeName","src":"10507:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10474:48:5"},"returnParameters":{"id":724,"nodeType":"ParameterList","parameters":[],"src":"10540:0:5"},"scope":826,"src":"10457:340:5","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":802,"nodeType":"Block","src":"11168:321:5","statements":[{"assignments":[771],"declarations":[{"constant":false,"id":771,"mutability":"mutable","name":"currentAllowance","nameLocation":"11186:16:5","nodeType":"VariableDeclaration","scope":802,"src":"11178:24:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":770,"name":"uint256","nodeType":"ElementaryTypeName","src":"11178:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":776,"initialValue":{"arguments":[{"id":773,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":763,"src":"11215:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":774,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":765,"src":"11222:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":772,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":381,"src":"11205:9:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":775,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11205:25:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11178:52:5"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":783,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":777,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":771,"src":"11244:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"arguments":[{"id":780,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11269:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":779,"name":"uint256","nodeType":"ElementaryTypeName","src":"11269:7:5","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":778,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11264:4:5","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":781,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11264:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":782,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11278:3:5","memberName":"max","nodeType":"MemberAccess","src":"11264:17:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11244:37:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":801,"nodeType":"IfStatement","src":"11240:243:5","trueBody":{"id":800,"nodeType":"Block","src":"11283:200:5","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":787,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":785,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":771,"src":"11305:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":786,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":767,"src":"11325:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11305:26:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a20696e73756666696369656e7420616c6c6f77616e6365","id":788,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11333:31:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","typeString":"literal_string \"ERC20: insufficient allowance\""},"value":"ERC20: insufficient allowance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","typeString":"literal_string \"ERC20: insufficient allowance\""}],"id":784,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11297:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":789,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11297:68:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":790,"nodeType":"ExpressionStatement","src":"11297:68:5"},{"id":799,"nodeType":"UncheckedBlock","src":"11379:94:5","statements":[{"expression":{"arguments":[{"id":792,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":763,"src":"11416:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":793,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":765,"src":"11423:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":796,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":794,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":771,"src":"11432:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":795,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":767,"src":"11451:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11432:25:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":791,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":760,"src":"11407:8:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":797,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11407:51:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":798,"nodeType":"ExpressionStatement","src":"11407:51:5"}]}]}}]},"documentation":{"id":761,"nodeType":"StructuredDocumentation","src":"10803:270:5","text":" @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n Does not update the allowance amount in case of infinite allowance.\n Revert if not enough allowance is available.\n Might emit an {Approval} event."},"id":803,"implemented":true,"kind":"function","modifiers":[],"name":"_spendAllowance","nameLocation":"11087:15:5","nodeType":"FunctionDefinition","parameters":{"id":768,"nodeType":"ParameterList","parameters":[{"constant":false,"id":763,"mutability":"mutable","name":"owner","nameLocation":"11111:5:5","nodeType":"VariableDeclaration","scope":803,"src":"11103:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":762,"name":"address","nodeType":"ElementaryTypeName","src":"11103:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":765,"mutability":"mutable","name":"spender","nameLocation":"11126:7:5","nodeType":"VariableDeclaration","scope":803,"src":"11118:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":764,"name":"address","nodeType":"ElementaryTypeName","src":"11118:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":767,"mutability":"mutable","name":"amount","nameLocation":"11143:6:5","nodeType":"VariableDeclaration","scope":803,"src":"11135:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":766,"name":"uint256","nodeType":"ElementaryTypeName","src":"11135:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11102:48:5"},"returnParameters":{"id":769,"nodeType":"ParameterList","parameters":[],"src":"11168:0:5"},"scope":826,"src":"11078:411:5","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":813,"nodeType":"Block","src":"12162:2:5","statements":[]},"documentation":{"id":804,"nodeType":"StructuredDocumentation","src":"11495:573:5","text":" @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."},"id":814,"implemented":true,"kind":"function","modifiers":[],"name":"_beforeTokenTransfer","nameLocation":"12082:20:5","nodeType":"FunctionDefinition","parameters":{"id":811,"nodeType":"ParameterList","parameters":[{"constant":false,"id":806,"mutability":"mutable","name":"from","nameLocation":"12111:4:5","nodeType":"VariableDeclaration","scope":814,"src":"12103:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":805,"name":"address","nodeType":"ElementaryTypeName","src":"12103:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":808,"mutability":"mutable","name":"to","nameLocation":"12125:2:5","nodeType":"VariableDeclaration","scope":814,"src":"12117:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":807,"name":"address","nodeType":"ElementaryTypeName","src":"12117:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":810,"mutability":"mutable","name":"amount","nameLocation":"12137:6:5","nodeType":"VariableDeclaration","scope":814,"src":"12129:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":809,"name":"uint256","nodeType":"ElementaryTypeName","src":"12129:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12102:42:5"},"returnParameters":{"id":812,"nodeType":"ParameterList","parameters":[],"src":"12162:0:5"},"scope":826,"src":"12073:91:5","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":824,"nodeType":"Block","src":"12840:2:5","statements":[]},"documentation":{"id":815,"nodeType":"StructuredDocumentation","src":"12170:577:5","text":" @dev Hook that is called after any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n has been transferred to `to`.\n - when `from` is zero, `amount` tokens have been minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."},"id":825,"implemented":true,"kind":"function","modifiers":[],"name":"_afterTokenTransfer","nameLocation":"12761:19:5","nodeType":"FunctionDefinition","parameters":{"id":822,"nodeType":"ParameterList","parameters":[{"constant":false,"id":817,"mutability":"mutable","name":"from","nameLocation":"12789:4:5","nodeType":"VariableDeclaration","scope":825,"src":"12781:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":816,"name":"address","nodeType":"ElementaryTypeName","src":"12781:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":819,"mutability":"mutable","name":"to","nameLocation":"12803:2:5","nodeType":"VariableDeclaration","scope":825,"src":"12795:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":818,"name":"address","nodeType":"ElementaryTypeName","src":"12795:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":821,"mutability":"mutable","name":"amount","nameLocation":"12815:6:5","nodeType":"VariableDeclaration","scope":825,"src":"12807:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":820,"name":"uint256","nodeType":"ElementaryTypeName","src":"12807:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12780:42:5"},"returnParameters":{"id":823,"nodeType":"ParameterList","parameters":[],"src":"12840:0:5"},"scope":826,"src":"12752:90:5","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":827,"src":"1532:11312:5","usedErrors":[]}],"src":"105:12740:5"},"id":5},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[904]},"id":905,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":828,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"106:23:6"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":829,"nodeType":"StructuredDocumentation","src":"131:70:6","text":" @dev Interface of the ERC20 standard as defined in the EIP."},"fullyImplemented":false,"id":904,"linearizedBaseContracts":[904],"name":"IERC20","nameLocation":"212:6:6","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":830,"nodeType":"StructuredDocumentation","src":"225:158:6","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":838,"name":"Transfer","nameLocation":"394:8:6","nodeType":"EventDefinition","parameters":{"id":837,"nodeType":"ParameterList","parameters":[{"constant":false,"id":832,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"419:4:6","nodeType":"VariableDeclaration","scope":838,"src":"403:20:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":831,"name":"address","nodeType":"ElementaryTypeName","src":"403:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":834,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"441:2:6","nodeType":"VariableDeclaration","scope":838,"src":"425:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":833,"name":"address","nodeType":"ElementaryTypeName","src":"425:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":836,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"453:5:6","nodeType":"VariableDeclaration","scope":838,"src":"445:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":835,"name":"uint256","nodeType":"ElementaryTypeName","src":"445:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"402:57:6"},"src":"388:72:6"},{"anonymous":false,"documentation":{"id":839,"nodeType":"StructuredDocumentation","src":"466:148:6","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":847,"name":"Approval","nameLocation":"625:8:6","nodeType":"EventDefinition","parameters":{"id":846,"nodeType":"ParameterList","parameters":[{"constant":false,"id":841,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"650:5:6","nodeType":"VariableDeclaration","scope":847,"src":"634:21:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":840,"name":"address","nodeType":"ElementaryTypeName","src":"634:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":843,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"673:7:6","nodeType":"VariableDeclaration","scope":847,"src":"657:23:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":842,"name":"address","nodeType":"ElementaryTypeName","src":"657:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":845,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"690:5:6","nodeType":"VariableDeclaration","scope":847,"src":"682:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":844,"name":"uint256","nodeType":"ElementaryTypeName","src":"682:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"633:63:6"},"src":"619:78:6"},{"documentation":{"id":848,"nodeType":"StructuredDocumentation","src":"703:66:6","text":" @dev Returns the amount of tokens in existence."},"functionSelector":"18160ddd","id":853,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"783:11:6","nodeType":"FunctionDefinition","parameters":{"id":849,"nodeType":"ParameterList","parameters":[],"src":"794:2:6"},"returnParameters":{"id":852,"nodeType":"ParameterList","parameters":[{"constant":false,"id":851,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":853,"src":"820:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":850,"name":"uint256","nodeType":"ElementaryTypeName","src":"820:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"819:9:6"},"scope":904,"src":"774:55:6","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":854,"nodeType":"StructuredDocumentation","src":"835:72:6","text":" @dev Returns the amount of tokens owned by `account`."},"functionSelector":"70a08231","id":861,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"921:9:6","nodeType":"FunctionDefinition","parameters":{"id":857,"nodeType":"ParameterList","parameters":[{"constant":false,"id":856,"mutability":"mutable","name":"account","nameLocation":"939:7:6","nodeType":"VariableDeclaration","scope":861,"src":"931:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":855,"name":"address","nodeType":"ElementaryTypeName","src":"931:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"930:17:6"},"returnParameters":{"id":860,"nodeType":"ParameterList","parameters":[{"constant":false,"id":859,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":861,"src":"971:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":858,"name":"uint256","nodeType":"ElementaryTypeName","src":"971:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"970:9:6"},"scope":904,"src":"912:68:6","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":862,"nodeType":"StructuredDocumentation","src":"986:202:6","text":" @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":871,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1202:8:6","nodeType":"FunctionDefinition","parameters":{"id":867,"nodeType":"ParameterList","parameters":[{"constant":false,"id":864,"mutability":"mutable","name":"to","nameLocation":"1219:2:6","nodeType":"VariableDeclaration","scope":871,"src":"1211:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":863,"name":"address","nodeType":"ElementaryTypeName","src":"1211:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":866,"mutability":"mutable","name":"amount","nameLocation":"1231:6:6","nodeType":"VariableDeclaration","scope":871,"src":"1223:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":865,"name":"uint256","nodeType":"ElementaryTypeName","src":"1223:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1210:28:6"},"returnParameters":{"id":870,"nodeType":"ParameterList","parameters":[{"constant":false,"id":869,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":871,"src":"1257:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":868,"name":"bool","nodeType":"ElementaryTypeName","src":"1257:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1256:6:6"},"scope":904,"src":"1193:70:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":872,"nodeType":"StructuredDocumentation","src":"1269:264:6","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":881,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1547:9:6","nodeType":"FunctionDefinition","parameters":{"id":877,"nodeType":"ParameterList","parameters":[{"constant":false,"id":874,"mutability":"mutable","name":"owner","nameLocation":"1565:5:6","nodeType":"VariableDeclaration","scope":881,"src":"1557:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":873,"name":"address","nodeType":"ElementaryTypeName","src":"1557:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":876,"mutability":"mutable","name":"spender","nameLocation":"1580:7:6","nodeType":"VariableDeclaration","scope":881,"src":"1572:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":875,"name":"address","nodeType":"ElementaryTypeName","src":"1572:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1556:32:6"},"returnParameters":{"id":880,"nodeType":"ParameterList","parameters":[{"constant":false,"id":879,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":881,"src":"1612:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":878,"name":"uint256","nodeType":"ElementaryTypeName","src":"1612:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1611:9:6"},"scope":904,"src":"1538:83:6","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":882,"nodeType":"StructuredDocumentation","src":"1627:642:6","text":" @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":891,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2283:7:6","nodeType":"FunctionDefinition","parameters":{"id":887,"nodeType":"ParameterList","parameters":[{"constant":false,"id":884,"mutability":"mutable","name":"spender","nameLocation":"2299:7:6","nodeType":"VariableDeclaration","scope":891,"src":"2291:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":883,"name":"address","nodeType":"ElementaryTypeName","src":"2291:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":886,"mutability":"mutable","name":"amount","nameLocation":"2316:6:6","nodeType":"VariableDeclaration","scope":891,"src":"2308:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":885,"name":"uint256","nodeType":"ElementaryTypeName","src":"2308:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2290:33:6"},"returnParameters":{"id":890,"nodeType":"ParameterList","parameters":[{"constant":false,"id":889,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":891,"src":"2342:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":888,"name":"bool","nodeType":"ElementaryTypeName","src":"2342:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2341:6:6"},"scope":904,"src":"2274:74:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":892,"nodeType":"StructuredDocumentation","src":"2354:287:6","text":" @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":903,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2655:12:6","nodeType":"FunctionDefinition","parameters":{"id":899,"nodeType":"ParameterList","parameters":[{"constant":false,"id":894,"mutability":"mutable","name":"from","nameLocation":"2676:4:6","nodeType":"VariableDeclaration","scope":903,"src":"2668:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":893,"name":"address","nodeType":"ElementaryTypeName","src":"2668:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":896,"mutability":"mutable","name":"to","nameLocation":"2690:2:6","nodeType":"VariableDeclaration","scope":903,"src":"2682:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":895,"name":"address","nodeType":"ElementaryTypeName","src":"2682:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":898,"mutability":"mutable","name":"amount","nameLocation":"2702:6:6","nodeType":"VariableDeclaration","scope":903,"src":"2694:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":897,"name":"uint256","nodeType":"ElementaryTypeName","src":"2694:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2667:42:6"},"returnParameters":{"id":902,"nodeType":"ParameterList","parameters":[{"constant":false,"id":901,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":903,"src":"2728:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":900,"name":"bool","nodeType":"ElementaryTypeName","src":"2728:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2727:6:6"},"scope":904,"src":"2646:88:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":905,"src":"202:2534:6","usedErrors":[]}],"src":"106:2631:6"},"id":6},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol","exportedSymbols":{"Context":[1896],"Counters":[1970],"ECDSA":[2891],"EIP712":[3095],"ERC20":[826],"ERC20Permit":[1076],"IERC20":[904],"IERC20Metadata":[1835],"IERC20Permit":[1871],"IERC5267":[215],"Math":[3961],"ShortString":[1975],"ShortStrings":[2186],"SignedMath":[5607],"StorageSlot":[2296],"Strings":[2525]},"id":1077,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":906,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"122:23:7"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol","file":"./IERC20Permit.sol","id":907,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1077,"sourceUnit":1872,"src":"147:28:7","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"../ERC20.sol","id":908,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1077,"sourceUnit":827,"src":"176:22:7","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","file":"../../../utils/cryptography/ECDSA.sol","id":909,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1077,"sourceUnit":2892,"src":"199:47:7","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/EIP712.sol","file":"../../../utils/cryptography/EIP712.sol","id":910,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1077,"sourceUnit":3096,"src":"247:48:7","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Counters.sol","file":"../../../utils/Counters.sol","id":911,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1077,"sourceUnit":1971,"src":"296:37:7","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":913,"name":"ERC20","nameLocations":["886:5:7"],"nodeType":"IdentifierPath","referencedDeclaration":826,"src":"886:5:7"},"id":914,"nodeType":"InheritanceSpecifier","src":"886:5:7"},{"baseName":{"id":915,"name":"IERC20Permit","nameLocations":["893:12:7"],"nodeType":"IdentifierPath","referencedDeclaration":1871,"src":"893:12:7"},"id":916,"nodeType":"InheritanceSpecifier","src":"893:12:7"},{"baseName":{"id":917,"name":"EIP712","nameLocations":["907:6:7"],"nodeType":"IdentifierPath","referencedDeclaration":3095,"src":"907:6:7"},"id":918,"nodeType":"InheritanceSpecifier","src":"907:6:7"}],"canonicalName":"ERC20Permit","contractDependencies":[],"contractKind":"contract","documentation":{"id":912,"nodeType":"StructuredDocumentation","src":"335:517:7","text":" @dev Implementation of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all.\n _Available since v3.4._"},"fullyImplemented":true,"id":1076,"linearizedBaseContracts":[1076,3095,215,1871,826,1835,904,1896],"name":"ERC20Permit","nameLocation":"871:11:7","nodeType":"ContractDefinition","nodes":[{"global":false,"id":922,"libraryName":{"id":919,"name":"Counters","nameLocations":["926:8:7"],"nodeType":"IdentifierPath","referencedDeclaration":1970,"src":"926:8:7"},"nodeType":"UsingForDirective","src":"920:36:7","typeName":{"id":921,"nodeType":"UserDefinedTypeName","pathNode":{"id":920,"name":"Counters.Counter","nameLocations":["939:8:7","948:7:7"],"nodeType":"IdentifierPath","referencedDeclaration":1902,"src":"939:16:7"},"referencedDeclaration":1902,"src":"939:16:7","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1902_storage_ptr","typeString":"struct Counters.Counter"}}},{"constant":false,"id":927,"mutability":"mutable","name":"_nonces","nameLocation":"1007:7:7","nodeType":"VariableDeclaration","scope":1076,"src":"962:52:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Counter_$1902_storage_$","typeString":"mapping(address => struct Counters.Counter)"},"typeName":{"id":926,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":923,"name":"address","nodeType":"ElementaryTypeName","src":"970:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"962:36:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Counter_$1902_storage_$","typeString":"mapping(address => struct Counters.Counter)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":925,"nodeType":"UserDefinedTypeName","pathNode":{"id":924,"name":"Counters.Counter","nameLocations":["981:8:7","990:7:7"],"nodeType":"IdentifierPath","referencedDeclaration":1902,"src":"981:16:7"},"referencedDeclaration":1902,"src":"981:16:7","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1902_storage_ptr","typeString":"struct Counters.Counter"}}},"visibility":"private"},{"constant":true,"id":932,"mutability":"constant","name":"_PERMIT_TYPEHASH","nameLocation":"1098:16:7","nodeType":"VariableDeclaration","scope":1076,"src":"1073:147:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":928,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1073:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"5065726d69742861646472657373206f776e65722c61646472657373207370656e6465722c75696e743235362076616c75652c75696e74323536206e6f6e63652c75696e7432353620646561646c696e6529","id":930,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1135:84:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9","typeString":"literal_string \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\""},"value":"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9","typeString":"literal_string \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\""}],"id":929,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1125:9:7","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":931,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1125:95:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"documentation":{"id":933,"nodeType":"StructuredDocumentation","src":"1226:254:7","text":" @dev In previous versions `_PERMIT_TYPEHASH` was declared as `immutable`.\n However, to ensure consistency with the upgradeable transpiler, we will continue\n to reserve a slot.\n @custom:oz-renamed-from _PERMIT_TYPEHASH"},"id":935,"mutability":"mutable","name":"_PERMIT_TYPEHASH_DEPRECATED_SLOT","nameLocation":"1553:32:7","nodeType":"VariableDeclaration","scope":1076,"src":"1537:48:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":934,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1537:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"body":{"id":945,"nodeType":"Block","src":"1867:2:7","statements":[]},"documentation":{"id":936,"nodeType":"StructuredDocumentation","src":"1592:220:7","text":" @dev Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\"1\"`.\n It's a good idea to use the same `name` that is defined as the ERC20 token name."},"id":946,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":941,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":938,"src":"1856:4:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"31","id":942,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1862:3:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6","typeString":"literal_string \"1\""},"value":"1"}],"id":943,"kind":"baseConstructorSpecifier","modifierName":{"id":940,"name":"EIP712","nameLocations":["1849:6:7"],"nodeType":"IdentifierPath","referencedDeclaration":3095,"src":"1849:6:7"},"nodeType":"ModifierInvocation","src":"1849:17:7"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":939,"nodeType":"ParameterList","parameters":[{"constant":false,"id":938,"mutability":"mutable","name":"name","nameLocation":"1843:4:7","nodeType":"VariableDeclaration","scope":946,"src":"1829:18:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":937,"name":"string","nodeType":"ElementaryTypeName","src":"1829:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1828:20:7"},"returnParameters":{"id":944,"nodeType":"ParameterList","parameters":[],"src":"1867:0:7"},"scope":1076,"src":"1817:52:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[1856],"body":{"id":1018,"nodeType":"Block","src":"2128:428:7","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":969,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":966,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"2146:5:7","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":967,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2152:9:7","memberName":"timestamp","nodeType":"MemberAccess","src":"2146:15:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":968,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":955,"src":"2165:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2146:27:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332305065726d69743a206578706972656420646561646c696e65","id":970,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2175:31:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_3e89525a63fb9c966b61cf8f5305156de8420bc773a2b60828a2f32c3c5797bd","typeString":"literal_string \"ERC20Permit: expired deadline\""},"value":"ERC20Permit: expired deadline"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3e89525a63fb9c966b61cf8f5305156de8420bc773a2b60828a2f32c3c5797bd","typeString":"literal_string \"ERC20Permit: expired deadline\""}],"id":965,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2138:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":971,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2138:69:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":972,"nodeType":"ExpressionStatement","src":"2138:69:7"},{"assignments":[974],"declarations":[{"constant":false,"id":974,"mutability":"mutable","name":"structHash","nameLocation":"2226:10:7","nodeType":"VariableDeclaration","scope":1018,"src":"2218:18:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":973,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2218:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":988,"initialValue":{"arguments":[{"arguments":[{"id":978,"name":"_PERMIT_TYPEHASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":932,"src":"2260:16:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":979,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":949,"src":"2278:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":980,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":951,"src":"2285:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":981,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":953,"src":"2294:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":983,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":949,"src":"2311:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":982,"name":"_useNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1075,"src":"2301:9:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$_t_uint256_$","typeString":"function (address) returns (uint256)"}},"id":984,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2301:16:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":985,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":955,"src":"2319:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":976,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2249:3:7","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":977,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2253:6:7","memberName":"encode","nodeType":"MemberAccess","src":"2249:10:7","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":986,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2249:79:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":975,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2239:9:7","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":987,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2239:90:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2218:111:7"},{"assignments":[990],"declarations":[{"constant":false,"id":990,"mutability":"mutable","name":"hash","nameLocation":"2348:4:7","nodeType":"VariableDeclaration","scope":1018,"src":"2340:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":989,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2340:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":994,"initialValue":{"arguments":[{"id":992,"name":"structHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":974,"src":"2372:10:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":991,"name":"_hashTypedDataV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3047,"src":"2355:16:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":993,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2355:28:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2340:43:7"},{"assignments":[996],"declarations":[{"constant":false,"id":996,"mutability":"mutable","name":"signer","nameLocation":"2402:6:7","nodeType":"VariableDeclaration","scope":1018,"src":"2394:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":995,"name":"address","nodeType":"ElementaryTypeName","src":"2394:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1004,"initialValue":{"arguments":[{"id":999,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":990,"src":"2425:4:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1000,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":957,"src":"2431:1:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":1001,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":959,"src":"2434:1:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1002,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":961,"src":"2437:1:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":997,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2891,"src":"2411:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ECDSA_$2891_$","typeString":"type(library ECDSA)"}},"id":998,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2417:7:7","memberName":"recover","nodeType":"MemberAccess","referencedDeclaration":2826,"src":"2411:13:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":1003,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2411:28:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2394:45:7"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1008,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1006,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":996,"src":"2457:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1007,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":949,"src":"2467:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2457:15:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332305065726d69743a20696e76616c6964207369676e6174757265","id":1009,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2474:32:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_94ca1ab58dfda790a1782ffbb0c0a140ec51d4148dbeecc6c39e37b25ff4b124","typeString":"literal_string \"ERC20Permit: invalid signature\""},"value":"ERC20Permit: invalid signature"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_94ca1ab58dfda790a1782ffbb0c0a140ec51d4148dbeecc6c39e37b25ff4b124","typeString":"literal_string \"ERC20Permit: invalid signature\""}],"id":1005,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2449:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1010,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2449:58:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1011,"nodeType":"ExpressionStatement","src":"2449:58:7"},{"expression":{"arguments":[{"id":1013,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":949,"src":"2527:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1014,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":951,"src":"2534:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1015,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":953,"src":"2543:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1012,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":760,"src":"2518:8:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1016,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2518:31:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1017,"nodeType":"ExpressionStatement","src":"2518:31:7"}]},"documentation":{"id":947,"nodeType":"StructuredDocumentation","src":"1875:50:7","text":" @dev See {IERC20Permit-permit}."},"functionSelector":"d505accf","id":1019,"implemented":true,"kind":"function","modifiers":[],"name":"permit","nameLocation":"1939:6:7","nodeType":"FunctionDefinition","overrides":{"id":963,"nodeType":"OverrideSpecifier","overrides":[],"src":"2119:8:7"},"parameters":{"id":962,"nodeType":"ParameterList","parameters":[{"constant":false,"id":949,"mutability":"mutable","name":"owner","nameLocation":"1963:5:7","nodeType":"VariableDeclaration","scope":1019,"src":"1955:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":948,"name":"address","nodeType":"ElementaryTypeName","src":"1955:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":951,"mutability":"mutable","name":"spender","nameLocation":"1986:7:7","nodeType":"VariableDeclaration","scope":1019,"src":"1978:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":950,"name":"address","nodeType":"ElementaryTypeName","src":"1978:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":953,"mutability":"mutable","name":"value","nameLocation":"2011:5:7","nodeType":"VariableDeclaration","scope":1019,"src":"2003:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":952,"name":"uint256","nodeType":"ElementaryTypeName","src":"2003:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":955,"mutability":"mutable","name":"deadline","nameLocation":"2034:8:7","nodeType":"VariableDeclaration","scope":1019,"src":"2026:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":954,"name":"uint256","nodeType":"ElementaryTypeName","src":"2026:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":957,"mutability":"mutable","name":"v","nameLocation":"2058:1:7","nodeType":"VariableDeclaration","scope":1019,"src":"2052:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":956,"name":"uint8","nodeType":"ElementaryTypeName","src":"2052:5:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":959,"mutability":"mutable","name":"r","nameLocation":"2077:1:7","nodeType":"VariableDeclaration","scope":1019,"src":"2069:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":958,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2069:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":961,"mutability":"mutable","name":"s","nameLocation":"2096:1:7","nodeType":"VariableDeclaration","scope":1019,"src":"2088:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":960,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2088:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1945:158:7"},"returnParameters":{"id":964,"nodeType":"ParameterList","parameters":[],"src":"2128:0:7"},"scope":1076,"src":"1930:626:7","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1864],"body":{"id":1034,"nodeType":"Block","src":"2695:48:7","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"baseExpression":{"id":1028,"name":"_nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":927,"src":"2712:7:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Counter_$1902_storage_$","typeString":"mapping(address => struct Counters.Counter storage ref)"}},"id":1030,"indexExpression":{"id":1029,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1022,"src":"2720:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2712:14:7","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1902_storage","typeString":"struct Counters.Counter storage ref"}},"id":1031,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2727:7:7","memberName":"current","nodeType":"MemberAccess","referencedDeclaration":1914,"src":"2712:22:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Counter_$1902_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Counter_$1902_storage_ptr_$","typeString":"function (struct Counters.Counter storage pointer) view returns (uint256)"}},"id":1032,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2712:24:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1027,"id":1033,"nodeType":"Return","src":"2705:31:7"}]},"documentation":{"id":1020,"nodeType":"StructuredDocumentation","src":"2562:50:7","text":" @dev See {IERC20Permit-nonces}."},"functionSelector":"7ecebe00","id":1035,"implemented":true,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"2626:6:7","nodeType":"FunctionDefinition","overrides":{"id":1024,"nodeType":"OverrideSpecifier","overrides":[],"src":"2668:8:7"},"parameters":{"id":1023,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1022,"mutability":"mutable","name":"owner","nameLocation":"2641:5:7","nodeType":"VariableDeclaration","scope":1035,"src":"2633:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1021,"name":"address","nodeType":"ElementaryTypeName","src":"2633:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2632:15:7"},"returnParameters":{"id":1027,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1026,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1035,"src":"2686:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1025,"name":"uint256","nodeType":"ElementaryTypeName","src":"2686:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2685:9:7"},"scope":1076,"src":"2617:126:7","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1870],"body":{"id":1045,"nodeType":"Block","src":"2936:44:7","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1042,"name":"_domainSeparatorV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3010,"src":"2953:18:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":1043,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2953:20:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1041,"id":1044,"nodeType":"Return","src":"2946:27:7"}]},"documentation":{"id":1036,"nodeType":"StructuredDocumentation","src":"2749:60:7","text":" @dev See {IERC20Permit-DOMAIN_SEPARATOR}."},"functionSelector":"3644e515","id":1046,"implemented":true,"kind":"function","modifiers":[],"name":"DOMAIN_SEPARATOR","nameLocation":"2876:16:7","nodeType":"FunctionDefinition","overrides":{"id":1038,"nodeType":"OverrideSpecifier","overrides":[],"src":"2909:8:7"},"parameters":{"id":1037,"nodeType":"ParameterList","parameters":[],"src":"2892:2:7"},"returnParameters":{"id":1041,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1040,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1046,"src":"2927:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1039,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2927:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2926:9:7"},"scope":1076,"src":"2867:113:7","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":1074,"nodeType":"Block","src":"3188:126:7","statements":[{"assignments":[1058],"declarations":[{"constant":false,"id":1058,"mutability":"mutable","name":"nonce","nameLocation":"3223:5:7","nodeType":"VariableDeclaration","scope":1074,"src":"3198:30:7","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1902_storage_ptr","typeString":"struct Counters.Counter"},"typeName":{"id":1057,"nodeType":"UserDefinedTypeName","pathNode":{"id":1056,"name":"Counters.Counter","nameLocations":["3198:8:7","3207:7:7"],"nodeType":"IdentifierPath","referencedDeclaration":1902,"src":"3198:16:7"},"referencedDeclaration":1902,"src":"3198:16:7","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1902_storage_ptr","typeString":"struct Counters.Counter"}},"visibility":"internal"}],"id":1062,"initialValue":{"baseExpression":{"id":1059,"name":"_nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":927,"src":"3231:7:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Counter_$1902_storage_$","typeString":"mapping(address => struct Counters.Counter storage ref)"}},"id":1061,"indexExpression":{"id":1060,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1049,"src":"3239:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3231:14:7","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1902_storage","typeString":"struct Counters.Counter storage ref"}},"nodeType":"VariableDeclarationStatement","src":"3198:47:7"},{"expression":{"id":1067,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1063,"name":"current","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1052,"src":"3255:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1064,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1058,"src":"3265:5:7","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1902_storage_ptr","typeString":"struct Counters.Counter storage pointer"}},"id":1065,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3271:7:7","memberName":"current","nodeType":"MemberAccess","referencedDeclaration":1914,"src":"3265:13:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Counter_$1902_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Counter_$1902_storage_ptr_$","typeString":"function (struct Counters.Counter storage pointer) view returns (uint256)"}},"id":1066,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3265:15:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3255:25:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1068,"nodeType":"ExpressionStatement","src":"3255:25:7"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1069,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1058,"src":"3290:5:7","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1902_storage_ptr","typeString":"struct Counters.Counter storage pointer"}},"id":1071,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3296:9:7","memberName":"increment","nodeType":"MemberAccess","referencedDeclaration":1928,"src":"3290:15:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Counter_$1902_storage_ptr_$returns$__$attached_to$_t_struct$_Counter_$1902_storage_ptr_$","typeString":"function (struct Counters.Counter storage pointer)"}},"id":1072,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3290:17:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1073,"nodeType":"ExpressionStatement","src":"3290:17:7"}]},"documentation":{"id":1047,"nodeType":"StructuredDocumentation","src":"2986:120:7","text":" @dev \"Consume a nonce\": return the current value and increment.\n _Available since v4.1._"},"id":1075,"implemented":true,"kind":"function","modifiers":[],"name":"_useNonce","nameLocation":"3120:9:7","nodeType":"FunctionDefinition","parameters":{"id":1050,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1049,"mutability":"mutable","name":"owner","nameLocation":"3138:5:7","nodeType":"VariableDeclaration","scope":1075,"src":"3130:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1048,"name":"address","nodeType":"ElementaryTypeName","src":"3130:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3129:15:7"},"returnParameters":{"id":1053,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1052,"mutability":"mutable","name":"current","nameLocation":"3179:7:7","nodeType":"VariableDeclaration","scope":1075,"src":"3171:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1051,"name":"uint256","nodeType":"ElementaryTypeName","src":"3171:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3170:17:7"},"scope":1076,"src":"3111:203:7","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":1077,"src":"853:2463:7","usedErrors":[1983,1985]}],"src":"122:3195:7"},"id":7},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol","exportedSymbols":{"Context":[1896],"Counters":[1970],"ECDSA":[2891],"EIP712":[3095],"ERC20":[826],"ERC20Permit":[1076],"ERC20Votes":[1810],"IERC20":[904],"IERC20Metadata":[1835],"IERC20Permit":[1871],"IERC5267":[215],"IERC5805":[224],"IERC6372":[239],"IVotes":[190],"Math":[3961],"SafeCast":[5502],"ShortString":[1975],"ShortStrings":[2186],"SignedMath":[5607],"StorageSlot":[2296],"Strings":[2525]},"id":1811,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1078,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"121:23:8"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol","file":"./ERC20Permit.sol","id":1079,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1811,"sourceUnit":1077,"src":"146:27:8","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC5805.sol","file":"../../../interfaces/IERC5805.sol","id":1080,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1811,"sourceUnit":225,"src":"174:42:8","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"../../../utils/math/Math.sol","id":1081,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1811,"sourceUnit":3962,"src":"217:38:8","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"../../../utils/math/SafeCast.sol","id":1082,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1811,"sourceUnit":5503,"src":"256:42:8","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","file":"../../../utils/cryptography/ECDSA.sol","id":1083,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1811,"sourceUnit":2892,"src":"299:47:8","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1085,"name":"ERC20Permit","nameLocations":["1275:11:8"],"nodeType":"IdentifierPath","referencedDeclaration":1076,"src":"1275:11:8"},"id":1086,"nodeType":"InheritanceSpecifier","src":"1275:11:8"},{"baseName":{"id":1087,"name":"IERC5805","nameLocations":["1288:8:8"],"nodeType":"IdentifierPath","referencedDeclaration":224,"src":"1288:8:8"},"id":1088,"nodeType":"InheritanceSpecifier","src":"1288:8:8"}],"canonicalName":"ERC20Votes","contractDependencies":[],"contractKind":"contract","documentation":{"id":1084,"nodeType":"StructuredDocumentation","src":"348:894:8","text":" @dev Extension of ERC20 to support Compound-like voting and delegation. This version is more generic than Compound's,\n and supports token supply up to 2^224^ - 1, while COMP is limited to 2^96^ - 1.\n NOTE: If exact COMP compatibility is required, use the {ERC20VotesComp} variant of this module.\n This extension keeps a history (checkpoints) of each account's vote power. Vote power can be delegated either\n by calling the {delegate} function directly, or by providing a signature to be used with {delegateBySig}. Voting\n power can be queried through the public accessors {getVotes} and {getPastVotes}.\n By default, token balance does not account for voting power. This makes transfers cheaper. The downside is that it\n requires users to delegate to themselves in order to activate checkpoints and have their voting power tracked.\n _Available since v4.2._"},"fullyImplemented":true,"id":1810,"linearizedBaseContracts":[1810,224,190,239,1076,3095,215,1871,826,1835,904,1896],"name":"ERC20Votes","nameLocation":"1261:10:8","nodeType":"ContractDefinition","nodes":[{"canonicalName":"ERC20Votes.Checkpoint","id":1093,"members":[{"constant":false,"id":1090,"mutability":"mutable","name":"fromBlock","nameLocation":"1338:9:8","nodeType":"VariableDeclaration","scope":1093,"src":"1331:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":1089,"name":"uint32","nodeType":"ElementaryTypeName","src":"1331:6:8","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":1092,"mutability":"mutable","name":"votes","nameLocation":"1365:5:8","nodeType":"VariableDeclaration","scope":1093,"src":"1357:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":1091,"name":"uint224","nodeType":"ElementaryTypeName","src":"1357:7:8","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"name":"Checkpoint","nameLocation":"1310:10:8","nodeType":"StructDefinition","scope":1810,"src":"1303:74:8","visibility":"public"},{"constant":true,"id":1098,"mutability":"constant","name":"_DELEGATION_TYPEHASH","nameLocation":"1408:20:8","nodeType":"VariableDeclaration","scope":1810,"src":"1383:127:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1094,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1383:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"44656c65676174696f6e28616464726573732064656c6567617465652c75696e74323536206e6f6e63652c75696e743235362065787069727929","id":1096,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1449:60:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_e48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf","typeString":"literal_string \"Delegation(address delegatee,uint256 nonce,uint256 expiry)\""},"value":"Delegation(address delegatee,uint256 nonce,uint256 expiry)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_e48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf","typeString":"literal_string \"Delegation(address delegatee,uint256 nonce,uint256 expiry)\""}],"id":1095,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1439:9:8","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1097,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1439:71:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":1102,"mutability":"mutable","name":"_delegates","nameLocation":"1553:10:8","nodeType":"VariableDeclaration","scope":1810,"src":"1517:46:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"},"typeName":{"id":1101,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":1099,"name":"address","nodeType":"ElementaryTypeName","src":"1525:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1517:27:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1100,"name":"address","nodeType":"ElementaryTypeName","src":"1536:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"private"},{"constant":false,"id":1108,"mutability":"mutable","name":"_checkpoints","nameLocation":"1610:12:8","nodeType":"VariableDeclaration","scope":1810,"src":"1569:53:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_Checkpoint_$1093_storage_$dyn_storage_$","typeString":"mapping(address => struct ERC20Votes.Checkpoint[])"},"typeName":{"id":1107,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":1103,"name":"address","nodeType":"ElementaryTypeName","src":"1577:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1569:32:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_Checkpoint_$1093_storage_$dyn_storage_$","typeString":"mapping(address => struct ERC20Votes.Checkpoint[])"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"baseType":{"id":1105,"nodeType":"UserDefinedTypeName","pathNode":{"id":1104,"name":"Checkpoint","nameLocations":["1588:10:8"],"nodeType":"IdentifierPath","referencedDeclaration":1093,"src":"1588:10:8"},"referencedDeclaration":1093,"src":"1588:10:8","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$1093_storage_ptr","typeString":"struct ERC20Votes.Checkpoint"}},"id":1106,"nodeType":"ArrayTypeName","src":"1588:12:8","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1093_storage_$dyn_storage_ptr","typeString":"struct ERC20Votes.Checkpoint[]"}}},"visibility":"private"},{"constant":false,"id":1112,"mutability":"mutable","name":"_totalSupplyCheckpoints","nameLocation":"1649:23:8","nodeType":"VariableDeclaration","scope":1810,"src":"1628:44:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1093_storage_$dyn_storage","typeString":"struct ERC20Votes.Checkpoint[]"},"typeName":{"baseType":{"id":1110,"nodeType":"UserDefinedTypeName","pathNode":{"id":1109,"name":"Checkpoint","nameLocations":["1628:10:8"],"nodeType":"IdentifierPath","referencedDeclaration":1093,"src":"1628:10:8"},"referencedDeclaration":1093,"src":"1628:10:8","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$1093_storage_ptr","typeString":"struct ERC20Votes.Checkpoint"}},"id":1111,"nodeType":"ArrayTypeName","src":"1628:12:8","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1093_storage_$dyn_storage_ptr","typeString":"struct ERC20Votes.Checkpoint[]"}},"visibility":"private"},{"baseFunctions":[232],"body":{"id":1125,"nodeType":"Block","src":"1880:55:8","statements":[{"expression":{"arguments":[{"expression":{"id":1121,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"1915:5:8","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1122,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1921:6:8","memberName":"number","nodeType":"MemberAccess","src":"1915:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1119,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5502,"src":"1897:8:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5502_$","typeString":"type(library SafeCast)"}},"id":1120,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1906:8:8","memberName":"toUint48","nodeType":"MemberAccess","referencedDeclaration":4614,"src":"1897:17:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint48_$","typeString":"function (uint256) pure returns (uint48)"}},"id":1123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1897:31:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"functionReturnParameters":1118,"id":1124,"nodeType":"Return","src":"1890:38:8"}]},"documentation":{"id":1113,"nodeType":"StructuredDocumentation","src":"1679:133:8","text":" @dev Clock used for flagging checkpoints. Can be overridden to implement timestamp based checkpoints (and voting)."},"functionSelector":"91ddadf4","id":1126,"implemented":true,"kind":"function","modifiers":[],"name":"clock","nameLocation":"1826:5:8","nodeType":"FunctionDefinition","overrides":{"id":1115,"nodeType":"OverrideSpecifier","overrides":[],"src":"1854:8:8"},"parameters":{"id":1114,"nodeType":"ParameterList","parameters":[],"src":"1831:2:8"},"returnParameters":{"id":1118,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1117,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1126,"src":"1872:6:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":1116,"name":"uint48","nodeType":"ElementaryTypeName","src":"1872:6:8","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"1871:8:8"},"scope":1810,"src":"1817:118:8","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[238],"body":{"id":1144,"nodeType":"Block","src":"2122:179:8","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1134,"name":"clock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1126,"src":"2189:5:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint48_$","typeString":"function () view returns (uint48)"}},"id":1135,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2189:7:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1136,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"2200:5:8","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1137,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2206:6:8","memberName":"number","nodeType":"MemberAccess","src":"2200:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2189:23:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433230566f7465733a2062726f6b656e20636c6f636b206d6f6465","id":1139,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2214:31:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_d8b645ec611d4ec3e2023618b4603d577ce189d5bc833b5325ebd41cfe74f8df","typeString":"literal_string \"ERC20Votes: broken clock mode\""},"value":"ERC20Votes: broken clock mode"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d8b645ec611d4ec3e2023618b4603d577ce189d5bc833b5325ebd41cfe74f8df","typeString":"literal_string \"ERC20Votes: broken clock mode\""}],"id":1133,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2181:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1140,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2181:65:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1141,"nodeType":"ExpressionStatement","src":"2181:65:8"},{"expression":{"hexValue":"6d6f64653d626c6f636b6e756d6265722666726f6d3d64656661756c74","id":1142,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2263:31:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_9f79d44e499ce83a99049e0b7ebf2d6f56e249303be3c14798235137af5ea536","typeString":"literal_string \"mode=blocknumber&from=default\""},"value":"mode=blocknumber&from=default"},"functionReturnParameters":1132,"id":1143,"nodeType":"Return","src":"2256:38:8"}]},"documentation":{"id":1127,"nodeType":"StructuredDocumentation","src":"1941:48:8","text":" @dev Description of the clock"},"functionSelector":"4bf5d7e9","id":1145,"implemented":true,"kind":"function","modifiers":[],"name":"CLOCK_MODE","nameLocation":"2056:10:8","nodeType":"FunctionDefinition","overrides":{"id":1129,"nodeType":"OverrideSpecifier","overrides":[],"src":"2089:8:8"},"parameters":{"id":1128,"nodeType":"ParameterList","parameters":[],"src":"2066:2:8"},"returnParameters":{"id":1132,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1131,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1145,"src":"2107:13:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1130,"name":"string","nodeType":"ElementaryTypeName","src":"2107:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2106:15:8"},"scope":1810,"src":"2047:254:8","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":1162,"nodeType":"Block","src":"2476:50:8","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":1156,"name":"_checkpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1108,"src":"2493:12:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_Checkpoint_$1093_storage_$dyn_storage_$","typeString":"mapping(address => struct ERC20Votes.Checkpoint storage ref[] storage ref)"}},"id":1158,"indexExpression":{"id":1157,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1148,"src":"2506:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2493:21:8","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1093_storage_$dyn_storage","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage ref"}},"id":1160,"indexExpression":{"id":1159,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1150,"src":"2515:3:8","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2493:26:8","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$1093_storage","typeString":"struct ERC20Votes.Checkpoint storage ref"}},"functionReturnParameters":1155,"id":1161,"nodeType":"Return","src":"2486:33:8"}]},"documentation":{"id":1146,"nodeType":"StructuredDocumentation","src":"2307:66:8","text":" @dev Get the `pos`-th checkpoint for `account`."},"functionSelector":"f1127ed8","id":1163,"implemented":true,"kind":"function","modifiers":[],"name":"checkpoints","nameLocation":"2387:11:8","nodeType":"FunctionDefinition","parameters":{"id":1151,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1148,"mutability":"mutable","name":"account","nameLocation":"2407:7:8","nodeType":"VariableDeclaration","scope":1163,"src":"2399:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1147,"name":"address","nodeType":"ElementaryTypeName","src":"2399:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1150,"mutability":"mutable","name":"pos","nameLocation":"2423:3:8","nodeType":"VariableDeclaration","scope":1163,"src":"2416:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":1149,"name":"uint32","nodeType":"ElementaryTypeName","src":"2416:6:8","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"2398:29:8"},"returnParameters":{"id":1155,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1154,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1163,"src":"2457:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$1093_memory_ptr","typeString":"struct ERC20Votes.Checkpoint"},"typeName":{"id":1153,"nodeType":"UserDefinedTypeName","pathNode":{"id":1152,"name":"Checkpoint","nameLocations":["2457:10:8"],"nodeType":"IdentifierPath","referencedDeclaration":1093,"src":"2457:10:8"},"referencedDeclaration":1093,"src":"2457:10:8","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$1093_storage_ptr","typeString":"struct ERC20Votes.Checkpoint"}},"visibility":"internal"}],"src":"2456:19:8"},"scope":1810,"src":"2378:148:8","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":1179,"nodeType":"Block","src":"2679:71:8","statements":[{"expression":{"arguments":[{"expression":{"baseExpression":{"id":1173,"name":"_checkpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1108,"src":"2714:12:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_Checkpoint_$1093_storage_$dyn_storage_$","typeString":"mapping(address => struct ERC20Votes.Checkpoint storage ref[] storage ref)"}},"id":1175,"indexExpression":{"id":1174,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1166,"src":"2727:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2714:21:8","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1093_storage_$dyn_storage","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage ref"}},"id":1176,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2736:6:8","memberName":"length","nodeType":"MemberAccess","src":"2714:28:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1171,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5502,"src":"2696:8:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5502_$","typeString":"type(library SafeCast)"}},"id":1172,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2705:8:8","memberName":"toUint32","nodeType":"MemberAccess","referencedDeclaration":4664,"src":"2696:17:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint32_$","typeString":"function (uint256) pure returns (uint32)"}},"id":1177,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2696:47:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":1170,"id":1178,"nodeType":"Return","src":"2689:54:8"}]},"documentation":{"id":1164,"nodeType":"StructuredDocumentation","src":"2532:64:8","text":" @dev Get number of checkpoints for `account`."},"functionSelector":"6fcfff45","id":1180,"implemented":true,"kind":"function","modifiers":[],"name":"numCheckpoints","nameLocation":"2610:14:8","nodeType":"FunctionDefinition","parameters":{"id":1167,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1166,"mutability":"mutable","name":"account","nameLocation":"2633:7:8","nodeType":"VariableDeclaration","scope":1180,"src":"2625:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1165,"name":"address","nodeType":"ElementaryTypeName","src":"2625:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2624:17:8"},"returnParameters":{"id":1170,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1169,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1180,"src":"2671:6:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":1168,"name":"uint32","nodeType":"ElementaryTypeName","src":"2671:6:8","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"2670:8:8"},"scope":1810,"src":"2601:149:8","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[167],"body":{"id":1193,"nodeType":"Block","src":"2921:43:8","statements":[{"expression":{"baseExpression":{"id":1189,"name":"_delegates","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1102,"src":"2938:10:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"}},"id":1191,"indexExpression":{"id":1190,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1183,"src":"2949:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2938:19:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1188,"id":1192,"nodeType":"Return","src":"2931:26:8"}]},"documentation":{"id":1181,"nodeType":"StructuredDocumentation","src":"2756:77:8","text":" @dev Get the address `account` is currently delegating to."},"functionSelector":"587cde1e","id":1194,"implemented":true,"kind":"function","modifiers":[],"name":"delegates","nameLocation":"2847:9:8","nodeType":"FunctionDefinition","overrides":{"id":1185,"nodeType":"OverrideSpecifier","overrides":[],"src":"2894:8:8"},"parameters":{"id":1184,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1183,"mutability":"mutable","name":"account","nameLocation":"2865:7:8","nodeType":"VariableDeclaration","scope":1194,"src":"2857:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1182,"name":"address","nodeType":"ElementaryTypeName","src":"2857:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2856:17:8"},"returnParameters":{"id":1188,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1187,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1194,"src":"2912:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1186,"name":"address","nodeType":"ElementaryTypeName","src":"2912:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2911:9:8"},"scope":1810,"src":"2838:126:8","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[141],"body":{"id":1225,"nodeType":"Block","src":"3125:161:8","statements":[{"assignments":[1204],"declarations":[{"constant":false,"id":1204,"mutability":"mutable","name":"pos","nameLocation":"3143:3:8","nodeType":"VariableDeclaration","scope":1225,"src":"3135:11:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1203,"name":"uint256","nodeType":"ElementaryTypeName","src":"3135:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1209,"initialValue":{"expression":{"baseExpression":{"id":1205,"name":"_checkpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1108,"src":"3149:12:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_Checkpoint_$1093_storage_$dyn_storage_$","typeString":"mapping(address => struct ERC20Votes.Checkpoint storage ref[] storage ref)"}},"id":1207,"indexExpression":{"id":1206,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1197,"src":"3162:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3149:21:8","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1093_storage_$dyn_storage","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage ref"}},"id":1208,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3171:6:8","memberName":"length","nodeType":"MemberAccess","src":"3149:28:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3135:42:8"},{"id":1224,"nodeType":"UncheckedBlock","src":"3187:93:8","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1212,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1210,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1204,"src":"3218:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1211,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3225:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3218:8:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"baseExpression":{"baseExpression":{"id":1214,"name":"_checkpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1108,"src":"3233:12:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_Checkpoint_$1093_storage_$dyn_storage_$","typeString":"mapping(address => struct ERC20Votes.Checkpoint storage ref[] storage ref)"}},"id":1216,"indexExpression":{"id":1215,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1197,"src":"3246:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3233:21:8","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1093_storage_$dyn_storage","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage ref"}},"id":1220,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1219,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1217,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1204,"src":"3255:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1218,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3261:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3255:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3233:30:8","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$1093_storage","typeString":"struct ERC20Votes.Checkpoint storage ref"}},"id":1221,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3264:5:8","memberName":"votes","nodeType":"MemberAccess","referencedDeclaration":1092,"src":"3233:36:8","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"id":1222,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"3218:51:8","trueExpression":{"hexValue":"30","id":1213,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3229:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":1202,"id":1223,"nodeType":"Return","src":"3211:58:8"}]}]},"documentation":{"id":1195,"nodeType":"StructuredDocumentation","src":"2970:68:8","text":" @dev Gets the current votes balance for `account`"},"functionSelector":"9ab24eb0","id":1226,"implemented":true,"kind":"function","modifiers":[],"name":"getVotes","nameLocation":"3052:8:8","nodeType":"FunctionDefinition","overrides":{"id":1199,"nodeType":"OverrideSpecifier","overrides":[],"src":"3098:8:8"},"parameters":{"id":1198,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1197,"mutability":"mutable","name":"account","nameLocation":"3069:7:8","nodeType":"VariableDeclaration","scope":1226,"src":"3061:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1196,"name":"address","nodeType":"ElementaryTypeName","src":"3061:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3060:17:8"},"returnParameters":{"id":1202,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1201,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1226,"src":"3116:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1200,"name":"uint256","nodeType":"ElementaryTypeName","src":"3116:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3115:9:8"},"scope":1810,"src":"3043:243:8","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[151],"body":{"id":1252,"nodeType":"Block","src":"3571:143:8","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1241,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1238,"name":"timepoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1231,"src":"3589:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1239,"name":"clock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1126,"src":"3601:5:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint48_$","typeString":"function () view returns (uint48)"}},"id":1240,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3601:7:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"3589:19:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433230566f7465733a20667574757265206c6f6f6b7570","id":1242,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3610:27:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_9fb4d8462c9084391e0cf06f1b2a0a5b1a23dc8fede26e3b7b37154948e87a72","typeString":"literal_string \"ERC20Votes: future lookup\""},"value":"ERC20Votes: future lookup"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9fb4d8462c9084391e0cf06f1b2a0a5b1a23dc8fede26e3b7b37154948e87a72","typeString":"literal_string \"ERC20Votes: future lookup\""}],"id":1237,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3581:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1243,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3581:57:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1244,"nodeType":"ExpressionStatement","src":"3581:57:8"},{"expression":{"arguments":[{"baseExpression":{"id":1246,"name":"_checkpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1108,"src":"3674:12:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_Checkpoint_$1093_storage_$dyn_storage_$","typeString":"mapping(address => struct ERC20Votes.Checkpoint storage ref[] storage ref)"}},"id":1248,"indexExpression":{"id":1247,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1229,"src":"3687:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3674:21:8","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1093_storage_$dyn_storage","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage ref"}},{"id":1249,"name":"timepoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1231,"src":"3697:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1093_storage_$dyn_storage","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1245,"name":"_checkpointsLookup","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1383,"src":"3655:18:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_struct$_Checkpoint_$1093_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_uint256_$","typeString":"function (struct ERC20Votes.Checkpoint storage ref[] storage pointer,uint256) view returns (uint256)"}},"id":1250,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3655:52:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1236,"id":1251,"nodeType":"Return","src":"3648:59:8"}]},"documentation":{"id":1227,"nodeType":"StructuredDocumentation","src":"3292:169:8","text":" @dev Retrieve the number of votes for `account` at the end of `timepoint`.\n Requirements:\n - `timepoint` must be in the past"},"functionSelector":"3a46b1a8","id":1253,"implemented":true,"kind":"function","modifiers":[],"name":"getPastVotes","nameLocation":"3475:12:8","nodeType":"FunctionDefinition","overrides":{"id":1233,"nodeType":"OverrideSpecifier","overrides":[],"src":"3544:8:8"},"parameters":{"id":1232,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1229,"mutability":"mutable","name":"account","nameLocation":"3496:7:8","nodeType":"VariableDeclaration","scope":1253,"src":"3488:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1228,"name":"address","nodeType":"ElementaryTypeName","src":"3488:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1231,"mutability":"mutable","name":"timepoint","nameLocation":"3513:9:8","nodeType":"VariableDeclaration","scope":1253,"src":"3505:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1230,"name":"uint256","nodeType":"ElementaryTypeName","src":"3505:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3487:36:8"},"returnParameters":{"id":1236,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1235,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1253,"src":"3562:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1234,"name":"uint256","nodeType":"ElementaryTypeName","src":"3562:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3561:9:8"},"scope":1810,"src":"3466:248:8","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[159],"body":{"id":1275,"nodeType":"Block","src":"4070:145:8","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1266,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1263,"name":"timepoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1256,"src":"4088:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1264,"name":"clock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1126,"src":"4100:5:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint48_$","typeString":"function () view returns (uint48)"}},"id":1265,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4100:7:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"4088:19:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433230566f7465733a20667574757265206c6f6f6b7570","id":1267,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4109:27:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_9fb4d8462c9084391e0cf06f1b2a0a5b1a23dc8fede26e3b7b37154948e87a72","typeString":"literal_string \"ERC20Votes: future lookup\""},"value":"ERC20Votes: future lookup"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9fb4d8462c9084391e0cf06f1b2a0a5b1a23dc8fede26e3b7b37154948e87a72","typeString":"literal_string \"ERC20Votes: future lookup\""}],"id":1262,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4080:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1268,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4080:57:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1269,"nodeType":"ExpressionStatement","src":"4080:57:8"},{"expression":{"arguments":[{"id":1271,"name":"_totalSupplyCheckpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1112,"src":"4173:23:8","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1093_storage_$dyn_storage","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage ref"}},{"id":1272,"name":"timepoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1256,"src":"4198:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1093_storage_$dyn_storage","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1270,"name":"_checkpointsLookup","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1383,"src":"4154:18:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_struct$_Checkpoint_$1093_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_uint256_$","typeString":"function (struct ERC20Votes.Checkpoint storage ref[] storage pointer,uint256) view returns (uint256)"}},"id":1273,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4154:54:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1261,"id":1274,"nodeType":"Return","src":"4147:61:8"}]},"documentation":{"id":1254,"nodeType":"StructuredDocumentation","src":"3720:251:8","text":" @dev Retrieve the `totalSupply` at the end of `timepoint`. Note, this value is the sum of all balances.\n It is NOT the sum of all the delegated votes!\n Requirements:\n - `timepoint` must be in the past"},"functionSelector":"8e539e8c","id":1276,"implemented":true,"kind":"function","modifiers":[],"name":"getPastTotalSupply","nameLocation":"3985:18:8","nodeType":"FunctionDefinition","overrides":{"id":1258,"nodeType":"OverrideSpecifier","overrides":[],"src":"4043:8:8"},"parameters":{"id":1257,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1256,"mutability":"mutable","name":"timepoint","nameLocation":"4012:9:8","nodeType":"VariableDeclaration","scope":1276,"src":"4004:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1255,"name":"uint256","nodeType":"ElementaryTypeName","src":"4004:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4003:19:8"},"returnParameters":{"id":1261,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1260,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1276,"src":"4061:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1259,"name":"uint256","nodeType":"ElementaryTypeName","src":"4061:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4060:9:8"},"scope":1810,"src":"3976:239:8","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":1382,"nodeType":"Block","src":"4405:1789:8","statements":[{"assignments":[1289],"declarations":[{"constant":false,"id":1289,"mutability":"mutable","name":"length","nameLocation":"5501:6:8","nodeType":"VariableDeclaration","scope":1382,"src":"5493:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1288,"name":"uint256","nodeType":"ElementaryTypeName","src":"5493:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1292,"initialValue":{"expression":{"id":1290,"name":"ckpts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1281,"src":"5510:5:8","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1093_storage_$dyn_storage_ptr","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage pointer"}},"id":1291,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5516:6:8","memberName":"length","nodeType":"MemberAccess","src":"5510:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5493:29:8"},{"assignments":[1294],"declarations":[{"constant":false,"id":1294,"mutability":"mutable","name":"low","nameLocation":"5541:3:8","nodeType":"VariableDeclaration","scope":1382,"src":"5533:11:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1293,"name":"uint256","nodeType":"ElementaryTypeName","src":"5533:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1296,"initialValue":{"hexValue":"30","id":1295,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5547:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5533:15:8"},{"assignments":[1298],"declarations":[{"constant":false,"id":1298,"mutability":"mutable","name":"high","nameLocation":"5566:4:8","nodeType":"VariableDeclaration","scope":1382,"src":"5558:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1297,"name":"uint256","nodeType":"ElementaryTypeName","src":"5558:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1300,"initialValue":{"id":1299,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1289,"src":"5573:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5558:21:8"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1303,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1301,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1289,"src":"5594:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"35","id":1302,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5603:1:8","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"5594:10:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1334,"nodeType":"IfStatement","src":"5590:242:8","trueBody":{"id":1333,"nodeType":"Block","src":"5606:226:8","statements":[{"assignments":[1305],"declarations":[{"constant":false,"id":1305,"mutability":"mutable","name":"mid","nameLocation":"5628:3:8","nodeType":"VariableDeclaration","scope":1333,"src":"5620:11:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1304,"name":"uint256","nodeType":"ElementaryTypeName","src":"5620:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1312,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1311,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1306,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1289,"src":"5634:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"id":1309,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1289,"src":"5653:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1307,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3961,"src":"5643:4:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$3961_$","typeString":"type(library Math)"}},"id":1308,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5648:4:8","memberName":"sqrt","nodeType":"MemberAccess","referencedDeclaration":3465,"src":"5643:9:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1310,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5643:17:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5634:26:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5620:40:8"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1319,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1314,"name":"ckpts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1281,"src":"5692:5:8","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1093_storage_$dyn_storage_ptr","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage pointer"}},{"id":1315,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1305,"src":"5699:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1093_storage_$dyn_storage_ptr","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1313,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1809,"src":"5678:13:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint_$1093_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint_$1093_storage_ptr_$","typeString":"function (struct ERC20Votes.Checkpoint storage ref[] storage pointer,uint256) pure returns (struct ERC20Votes.Checkpoint storage pointer)"}},"id":1316,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5678:25:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$1093_storage_ptr","typeString":"struct ERC20Votes.Checkpoint storage pointer"}},"id":1317,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5704:9:8","memberName":"fromBlock","nodeType":"MemberAccess","referencedDeclaration":1090,"src":"5678:35:8","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1318,"name":"timepoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1283,"src":"5716:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5678:47:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1331,"nodeType":"Block","src":"5776:46:8","statements":[{"expression":{"id":1329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1325,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1294,"src":"5794:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1328,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1326,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1305,"src":"5800:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1327,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5806:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"5800:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5794:13:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1330,"nodeType":"ExpressionStatement","src":"5794:13:8"}]},"id":1332,"nodeType":"IfStatement","src":"5674:148:8","trueBody":{"id":1324,"nodeType":"Block","src":"5727:43:8","statements":[{"expression":{"id":1322,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1320,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1298,"src":"5745:4:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1321,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1305,"src":"5752:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5745:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1323,"nodeType":"ExpressionStatement","src":"5745:10:8"}]}}]}},{"body":{"id":1366,"nodeType":"Block","src":"5861:223:8","statements":[{"assignments":[1339],"declarations":[{"constant":false,"id":1339,"mutability":"mutable","name":"mid","nameLocation":"5883:3:8","nodeType":"VariableDeclaration","scope":1366,"src":"5875:11:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1338,"name":"uint256","nodeType":"ElementaryTypeName","src":"5875:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1345,"initialValue":{"arguments":[{"id":1342,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1294,"src":"5902:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1343,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1298,"src":"5907:4:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1340,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3961,"src":"5889:4:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$3961_$","typeString":"type(library Math)"}},"id":1341,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5894:7:8","memberName":"average","nodeType":"MemberAccess","referencedDeclaration":3161,"src":"5889:12:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1344,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5889:23:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5875:37:8"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1352,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1347,"name":"ckpts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1281,"src":"5944:5:8","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1093_storage_$dyn_storage_ptr","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage pointer"}},{"id":1348,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1339,"src":"5951:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1093_storage_$dyn_storage_ptr","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1346,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1809,"src":"5930:13:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint_$1093_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint_$1093_storage_ptr_$","typeString":"function (struct ERC20Votes.Checkpoint storage ref[] storage pointer,uint256) pure returns (struct ERC20Votes.Checkpoint storage pointer)"}},"id":1349,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5930:25:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$1093_storage_ptr","typeString":"struct ERC20Votes.Checkpoint storage pointer"}},"id":1350,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5956:9:8","memberName":"fromBlock","nodeType":"MemberAccess","referencedDeclaration":1090,"src":"5930:35:8","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1351,"name":"timepoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1283,"src":"5968:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5930:47:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1364,"nodeType":"Block","src":"6028:46:8","statements":[{"expression":{"id":1362,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1358,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1294,"src":"6046:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1361,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1359,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1339,"src":"6052:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1360,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6058:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6052:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6046:13:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1363,"nodeType":"ExpressionStatement","src":"6046:13:8"}]},"id":1365,"nodeType":"IfStatement","src":"5926:148:8","trueBody":{"id":1357,"nodeType":"Block","src":"5979:43:8","statements":[{"expression":{"id":1355,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1353,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1298,"src":"5997:4:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1354,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1339,"src":"6004:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5997:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1356,"nodeType":"ExpressionStatement","src":"5997:10:8"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1337,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1335,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1294,"src":"5849:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1336,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1298,"src":"5855:4:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5849:10:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1367,"nodeType":"WhileStatement","src":"5842:242:8"},{"id":1381,"nodeType":"UncheckedBlock","src":"6094:94:8","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1370,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1368,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1298,"src":"6125:4:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1369,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6133:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6125:9:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"arguments":[{"id":1373,"name":"ckpts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1281,"src":"6155:5:8","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1093_storage_$dyn_storage_ptr","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage pointer"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1376,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1374,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1298,"src":"6162:4:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1375,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6169:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6162:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1093_storage_$dyn_storage_ptr","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1372,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1809,"src":"6141:13:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint_$1093_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint_$1093_storage_ptr_$","typeString":"function (struct ERC20Votes.Checkpoint storage ref[] storage pointer,uint256) pure returns (struct ERC20Votes.Checkpoint storage pointer)"}},"id":1377,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6141:30:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$1093_storage_ptr","typeString":"struct ERC20Votes.Checkpoint storage pointer"}},"id":1378,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6172:5:8","memberName":"votes","nodeType":"MemberAccess","referencedDeclaration":1092,"src":"6141:36:8","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"id":1379,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"6125:52:8","trueExpression":{"hexValue":"30","id":1371,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6137:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":1287,"id":1380,"nodeType":"Return","src":"6118:59:8"}]}]},"documentation":{"id":1277,"nodeType":"StructuredDocumentation","src":"4221:73:8","text":" @dev Lookup a value in a list of (sorted) checkpoints."},"id":1383,"implemented":true,"kind":"function","modifiers":[],"name":"_checkpointsLookup","nameLocation":"4308:18:8","nodeType":"FunctionDefinition","parameters":{"id":1284,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1281,"mutability":"mutable","name":"ckpts","nameLocation":"4348:5:8","nodeType":"VariableDeclaration","scope":1383,"src":"4327:26:8","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1093_storage_$dyn_storage_ptr","typeString":"struct ERC20Votes.Checkpoint[]"},"typeName":{"baseType":{"id":1279,"nodeType":"UserDefinedTypeName","pathNode":{"id":1278,"name":"Checkpoint","nameLocations":["4327:10:8"],"nodeType":"IdentifierPath","referencedDeclaration":1093,"src":"4327:10:8"},"referencedDeclaration":1093,"src":"4327:10:8","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$1093_storage_ptr","typeString":"struct ERC20Votes.Checkpoint"}},"id":1280,"nodeType":"ArrayTypeName","src":"4327:12:8","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1093_storage_$dyn_storage_ptr","typeString":"struct ERC20Votes.Checkpoint[]"}},"visibility":"internal"},{"constant":false,"id":1283,"mutability":"mutable","name":"timepoint","nameLocation":"4363:9:8","nodeType":"VariableDeclaration","scope":1383,"src":"4355:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1282,"name":"uint256","nodeType":"ElementaryTypeName","src":"4355:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4326:47:8"},"returnParameters":{"id":1287,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1286,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1383,"src":"4396:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1285,"name":"uint256","nodeType":"ElementaryTypeName","src":"4396:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4395:9:8"},"scope":1810,"src":"4299:1895:8","stateMutability":"view","virtual":false,"visibility":"private"},{"baseFunctions":[173],"body":{"id":1396,"nodeType":"Block","src":"6336:51:8","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1391,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1886,"src":"6356:10:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1392,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6356:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1393,"name":"delegatee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1386,"src":"6370:9:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1390,"name":"_delegate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1594,"src":"6346:9:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":1394,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6346:34:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1395,"nodeType":"ExpressionStatement","src":"6346:34:8"}]},"documentation":{"id":1384,"nodeType":"StructuredDocumentation","src":"6200:70:8","text":" @dev Delegate votes from the sender to `delegatee`."},"functionSelector":"5c19a95c","id":1397,"implemented":true,"kind":"function","modifiers":[],"name":"delegate","nameLocation":"6284:8:8","nodeType":"FunctionDefinition","overrides":{"id":1388,"nodeType":"OverrideSpecifier","overrides":[],"src":"6327:8:8"},"parameters":{"id":1387,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1386,"mutability":"mutable","name":"delegatee","nameLocation":"6301:9:8","nodeType":"VariableDeclaration","scope":1397,"src":"6293:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1385,"name":"address","nodeType":"ElementaryTypeName","src":"6293:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6292:19:8"},"returnParameters":{"id":1389,"nodeType":"ParameterList","parameters":[],"src":"6336:0:8"},"scope":1810,"src":"6275:112:8","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[189],"body":{"id":1456,"nodeType":"Block","src":"6646:392:8","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1418,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1415,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"6664:5:8","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1416,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6670:9:8","memberName":"timestamp","nodeType":"MemberAccess","src":"6664:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":1417,"name":"expiry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1404,"src":"6683:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6664:25:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433230566f7465733a207369676e61747572652065787069726564","id":1419,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6691:31:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_136d0f69bc85a5c125b5cc368e2880ebdb3c89d4d9828f6476431c386ea60257","typeString":"literal_string \"ERC20Votes: signature expired\""},"value":"ERC20Votes: signature expired"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_136d0f69bc85a5c125b5cc368e2880ebdb3c89d4d9828f6476431c386ea60257","typeString":"literal_string \"ERC20Votes: signature expired\""}],"id":1414,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6656:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1420,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6656:67:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1421,"nodeType":"ExpressionStatement","src":"6656:67:8"},{"assignments":[1423],"declarations":[{"constant":false,"id":1423,"mutability":"mutable","name":"signer","nameLocation":"6741:6:8","nodeType":"VariableDeclaration","scope":1456,"src":"6733:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1422,"name":"address","nodeType":"ElementaryTypeName","src":"6733:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1441,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"id":1430,"name":"_DELEGATION_TYPEHASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1098,"src":"6815:20:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1431,"name":"delegatee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1400,"src":"6837:9:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1432,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1402,"src":"6848:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1433,"name":"expiry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1404,"src":"6855:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1428,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"6804:3:8","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1429,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6808:6:8","memberName":"encode","nodeType":"MemberAccess","src":"6804:10:8","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1434,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6804:58:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1427,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"6794:9:8","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1435,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6794:69:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1426,"name":"_hashTypedDataV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3047,"src":"6777:16:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":1436,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6777:87:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1437,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1406,"src":"6878:1:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":1438,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1408,"src":"6893:1:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1439,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1410,"src":"6908:1:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1424,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2891,"src":"6750:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ECDSA_$2891_$","typeString":"type(library ECDSA)"}},"id":1425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6756:7:8","memberName":"recover","nodeType":"MemberAccess","referencedDeclaration":2826,"src":"6750:13:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":1440,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6750:169:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6733:186:8"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1447,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1443,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1402,"src":"6937:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"id":1445,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1423,"src":"6956:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1444,"name":"_useNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1075,"src":"6946:9:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$_t_uint256_$","typeString":"function (address) returns (uint256)"}},"id":1446,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6946:17:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6937:26:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433230566f7465733a20696e76616c6964206e6f6e6365","id":1448,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6965:27:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_1a23b43d95073d55a7380117ca03cace60cd22fee15d5cb140d51e46236e6872","typeString":"literal_string \"ERC20Votes: invalid nonce\""},"value":"ERC20Votes: invalid nonce"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1a23b43d95073d55a7380117ca03cace60cd22fee15d5cb140d51e46236e6872","typeString":"literal_string \"ERC20Votes: invalid nonce\""}],"id":1442,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6929:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1449,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6929:64:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1450,"nodeType":"ExpressionStatement","src":"6929:64:8"},{"expression":{"arguments":[{"id":1452,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1423,"src":"7013:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1453,"name":"delegatee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1400,"src":"7021:9:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1451,"name":"_delegate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1594,"src":"7003:9:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":1454,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7003:28:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1455,"nodeType":"ExpressionStatement","src":"7003:28:8"}]},"documentation":{"id":1398,"nodeType":"StructuredDocumentation","src":"6393:66:8","text":" @dev Delegates votes from signer to `delegatee`"},"functionSelector":"c3cda520","id":1457,"implemented":true,"kind":"function","modifiers":[],"name":"delegateBySig","nameLocation":"6473:13:8","nodeType":"FunctionDefinition","overrides":{"id":1412,"nodeType":"OverrideSpecifier","overrides":[],"src":"6637:8:8"},"parameters":{"id":1411,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1400,"mutability":"mutable","name":"delegatee","nameLocation":"6504:9:8","nodeType":"VariableDeclaration","scope":1457,"src":"6496:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1399,"name":"address","nodeType":"ElementaryTypeName","src":"6496:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1402,"mutability":"mutable","name":"nonce","nameLocation":"6531:5:8","nodeType":"VariableDeclaration","scope":1457,"src":"6523:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1401,"name":"uint256","nodeType":"ElementaryTypeName","src":"6523:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1404,"mutability":"mutable","name":"expiry","nameLocation":"6554:6:8","nodeType":"VariableDeclaration","scope":1457,"src":"6546:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1403,"name":"uint256","nodeType":"ElementaryTypeName","src":"6546:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1406,"mutability":"mutable","name":"v","nameLocation":"6576:1:8","nodeType":"VariableDeclaration","scope":1457,"src":"6570:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1405,"name":"uint8","nodeType":"ElementaryTypeName","src":"6570:5:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1408,"mutability":"mutable","name":"r","nameLocation":"6595:1:8","nodeType":"VariableDeclaration","scope":1457,"src":"6587:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1407,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6587:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1410,"mutability":"mutable","name":"s","nameLocation":"6614:1:8","nodeType":"VariableDeclaration","scope":1457,"src":"6606:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1409,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6606:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6486:135:8"},"returnParameters":{"id":1413,"nodeType":"ParameterList","parameters":[],"src":"6646:0:8"},"scope":1810,"src":"6464:574:8","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":1469,"nodeType":"Block","src":"7202:41:8","statements":[{"expression":{"expression":{"arguments":[{"id":1465,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7224:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":1464,"name":"uint224","nodeType":"ElementaryTypeName","src":"7224:7:8","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"}],"id":1463,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7219:4:8","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1466,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7219:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint224","typeString":"type(uint224)"}},"id":1467,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7233:3:8","memberName":"max","nodeType":"MemberAccess","src":"7219:17:8","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":1462,"id":1468,"nodeType":"Return","src":"7212:24:8"}]},"documentation":{"id":1458,"nodeType":"StructuredDocumentation","src":"7044:91:8","text":" @dev Maximum token supply. Defaults to `type(uint224).max` (2^224^ - 1)."},"id":1470,"implemented":true,"kind":"function","modifiers":[],"name":"_maxSupply","nameLocation":"7149:10:8","nodeType":"FunctionDefinition","parameters":{"id":1459,"nodeType":"ParameterList","parameters":[],"src":"7159:2:8"},"returnParameters":{"id":1462,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1461,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1470,"src":"7193:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":1460,"name":"uint224","nodeType":"ElementaryTypeName","src":"7193:7:8","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"7192:9:8"},"scope":1810,"src":"7140:103:8","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[643],"body":{"id":1501,"nodeType":"Block","src":"7406:211:8","statements":[{"expression":{"arguments":[{"id":1482,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1473,"src":"7428:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1483,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1475,"src":"7437:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1479,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"7416:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC20Votes_$1810_$","typeString":"type(contract super ERC20Votes)"}},"id":1481,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7422:5:8","memberName":"_mint","nodeType":"MemberAccess","referencedDeclaration":643,"src":"7416:11:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1484,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7416:28:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1485,"nodeType":"ExpressionStatement","src":"7416:28:8"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1491,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1487,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":324,"src":"7462:11:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":1488,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7462:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1489,"name":"_maxSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1470,"src":"7479:10:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint224_$","typeString":"function () view returns (uint224)"}},"id":1490,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7479:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"7462:29:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433230566f7465733a20746f74616c20737570706c79207269736b73206f766572666c6f77696e6720766f746573","id":1492,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7493:50:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_97859f657b3d95198b68f29ae96ee966779795bec3ef1e76700d2d39fefd7699","typeString":"literal_string \"ERC20Votes: total supply risks overflowing votes\""},"value":"ERC20Votes: total supply risks overflowing votes"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_97859f657b3d95198b68f29ae96ee966779795bec3ef1e76700d2d39fefd7699","typeString":"literal_string \"ERC20Votes: total supply risks overflowing votes\""}],"id":1486,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7454:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1493,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7454:90:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1494,"nodeType":"ExpressionStatement","src":"7454:90:8"},{"expression":{"arguments":[{"id":1496,"name":"_totalSupplyCheckpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1112,"src":"7572:23:8","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1093_storage_$dyn_storage","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage ref"}},{"id":1497,"name":"_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1780,"src":"7597:4:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},{"id":1498,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1475,"src":"7603:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1093_storage_$dyn_storage","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage ref"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1495,"name":"_writeCheckpoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1766,"src":"7555:16:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_array$_t_struct$_Checkpoint_$1093_storage_$dyn_storage_ptr_$_t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (struct ERC20Votes.Checkpoint storage ref[] storage pointer,function (uint256,uint256) view returns (uint256),uint256) returns (uint256,uint256)"}},"id":1499,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7555:55:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"id":1500,"nodeType":"ExpressionStatement","src":"7555:55:8"}]},"documentation":{"id":1471,"nodeType":"StructuredDocumentation","src":"7249:78:8","text":" @dev Snapshots the totalSupply after it has been increased."},"id":1502,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"7341:5:8","nodeType":"FunctionDefinition","overrides":{"id":1477,"nodeType":"OverrideSpecifier","overrides":[],"src":"7397:8:8"},"parameters":{"id":1476,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1473,"mutability":"mutable","name":"account","nameLocation":"7355:7:8","nodeType":"VariableDeclaration","scope":1502,"src":"7347:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1472,"name":"address","nodeType":"ElementaryTypeName","src":"7347:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1475,"mutability":"mutable","name":"amount","nameLocation":"7372:6:8","nodeType":"VariableDeclaration","scope":1502,"src":"7364:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1474,"name":"uint256","nodeType":"ElementaryTypeName","src":"7364:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7346:33:8"},"returnParameters":{"id":1478,"nodeType":"ParameterList","parameters":[],"src":"7406:0:8"},"scope":1810,"src":"7332:285:8","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"baseFunctions":[715],"body":{"id":1524,"nodeType":"Block","src":"7780:116:8","statements":[{"expression":{"arguments":[{"id":1514,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1505,"src":"7802:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1515,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1507,"src":"7811:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1511,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"7790:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC20Votes_$1810_$","typeString":"type(contract super ERC20Votes)"}},"id":1513,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7796:5:8","memberName":"_burn","nodeType":"MemberAccess","referencedDeclaration":715,"src":"7790:11:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1516,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7790:28:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1517,"nodeType":"ExpressionStatement","src":"7790:28:8"},{"expression":{"arguments":[{"id":1519,"name":"_totalSupplyCheckpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1112,"src":"7846:23:8","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1093_storage_$dyn_storage","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage ref"}},{"id":1520,"name":"_subtract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1794,"src":"7871:9:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},{"id":1521,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1507,"src":"7882:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1093_storage_$dyn_storage","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage ref"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1518,"name":"_writeCheckpoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1766,"src":"7829:16:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_array$_t_struct$_Checkpoint_$1093_storage_$dyn_storage_ptr_$_t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (struct ERC20Votes.Checkpoint storage ref[] storage pointer,function (uint256,uint256) view returns (uint256),uint256) returns (uint256,uint256)"}},"id":1522,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7829:60:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"id":1523,"nodeType":"ExpressionStatement","src":"7829:60:8"}]},"documentation":{"id":1503,"nodeType":"StructuredDocumentation","src":"7623:78:8","text":" @dev Snapshots the totalSupply after it has been decreased."},"id":1525,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"7715:5:8","nodeType":"FunctionDefinition","overrides":{"id":1509,"nodeType":"OverrideSpecifier","overrides":[],"src":"7771:8:8"},"parameters":{"id":1508,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1505,"mutability":"mutable","name":"account","nameLocation":"7729:7:8","nodeType":"VariableDeclaration","scope":1525,"src":"7721:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1504,"name":"address","nodeType":"ElementaryTypeName","src":"7721:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1507,"mutability":"mutable","name":"amount","nameLocation":"7746:6:8","nodeType":"VariableDeclaration","scope":1525,"src":"7738:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1506,"name":"uint256","nodeType":"ElementaryTypeName","src":"7738:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7720:33:8"},"returnParameters":{"id":1510,"nodeType":"ParameterList","parameters":[],"src":"7780:0:8"},"scope":1810,"src":"7706:190:8","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"baseFunctions":[825],"body":{"id":1554,"nodeType":"Block","src":"8133:127:8","statements":[{"expression":{"arguments":[{"id":1539,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1528,"src":"8169:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1540,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1530,"src":"8175:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1541,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1532,"src":"8179:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1536,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"8143:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC20Votes_$1810_$","typeString":"type(contract super ERC20Votes)"}},"id":1538,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8149:19:8","memberName":"_afterTokenTransfer","nodeType":"MemberAccess","referencedDeclaration":825,"src":"8143:25:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1542,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8143:43:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1543,"nodeType":"ExpressionStatement","src":"8143:43:8"},{"expression":{"arguments":[{"arguments":[{"id":1546,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1528,"src":"8224:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1545,"name":"delegates","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1194,"src":"8214:9:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_address_$","typeString":"function (address) view returns (address)"}},"id":1547,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8214:15:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":1549,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1530,"src":"8241:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1548,"name":"delegates","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1194,"src":"8231:9:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_address_$","typeString":"function (address) view returns (address)"}},"id":1550,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8231:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1551,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1532,"src":"8246:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1544,"name":"_moveVotingPower","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1665,"src":"8197:16:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1552,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8197:56:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1553,"nodeType":"ExpressionStatement","src":"8197:56:8"}]},"documentation":{"id":1526,"nodeType":"StructuredDocumentation","src":"7902:129:8","text":" @dev Move voting power when tokens are transferred.\n Emits a {IVotes-DelegateVotesChanged} event."},"id":1555,"implemented":true,"kind":"function","modifiers":[],"name":"_afterTokenTransfer","nameLocation":"8045:19:8","nodeType":"FunctionDefinition","overrides":{"id":1534,"nodeType":"OverrideSpecifier","overrides":[],"src":"8124:8:8"},"parameters":{"id":1533,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1528,"mutability":"mutable","name":"from","nameLocation":"8073:4:8","nodeType":"VariableDeclaration","scope":1555,"src":"8065:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1527,"name":"address","nodeType":"ElementaryTypeName","src":"8065:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1530,"mutability":"mutable","name":"to","nameLocation":"8087:2:8","nodeType":"VariableDeclaration","scope":1555,"src":"8079:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1529,"name":"address","nodeType":"ElementaryTypeName","src":"8079:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1532,"mutability":"mutable","name":"amount","nameLocation":"8099:6:8","nodeType":"VariableDeclaration","scope":1555,"src":"8091:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1531,"name":"uint256","nodeType":"ElementaryTypeName","src":"8091:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8064:42:8"},"returnParameters":{"id":1535,"nodeType":"ParameterList","parameters":[],"src":"8133:0:8"},"scope":1810,"src":"8036:224:8","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1593,"nodeType":"Block","src":"8505:306:8","statements":[{"assignments":[1564],"declarations":[{"constant":false,"id":1564,"mutability":"mutable","name":"currentDelegate","nameLocation":"8523:15:8","nodeType":"VariableDeclaration","scope":1593,"src":"8515:23:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1563,"name":"address","nodeType":"ElementaryTypeName","src":"8515:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1568,"initialValue":{"arguments":[{"id":1566,"name":"delegator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1558,"src":"8551:9:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1565,"name":"delegates","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1194,"src":"8541:9:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_address_$","typeString":"function (address) view returns (address)"}},"id":1567,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8541:20:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"8515:46:8"},{"assignments":[1570],"declarations":[{"constant":false,"id":1570,"mutability":"mutable","name":"delegatorBalance","nameLocation":"8579:16:8","nodeType":"VariableDeclaration","scope":1593,"src":"8571:24:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1569,"name":"uint256","nodeType":"ElementaryTypeName","src":"8571:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1574,"initialValue":{"arguments":[{"id":1572,"name":"delegator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1558,"src":"8608:9:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1571,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":338,"src":"8598:9:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":1573,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8598:20:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8571:47:8"},{"expression":{"id":1579,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1575,"name":"_delegates","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1102,"src":"8628:10:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"}},"id":1577,"indexExpression":{"id":1576,"name":"delegator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1558,"src":"8639:9:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8628:21:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1578,"name":"delegatee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1560,"src":"8652:9:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8628:33:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1580,"nodeType":"ExpressionStatement","src":"8628:33:8"},{"eventCall":{"arguments":[{"id":1582,"name":"delegator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1558,"src":"8693:9:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1583,"name":"currentDelegate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1564,"src":"8704:15:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1584,"name":"delegatee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1560,"src":"8721:9:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1581,"name":"DelegateChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":124,"src":"8677:15:8","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$returns$__$","typeString":"function (address,address,address)"}},"id":1585,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8677:54:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1586,"nodeType":"EmitStatement","src":"8672:59:8"},{"expression":{"arguments":[{"id":1588,"name":"currentDelegate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1564,"src":"8759:15:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1589,"name":"delegatee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1560,"src":"8776:9:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1590,"name":"delegatorBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1570,"src":"8787:16:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1587,"name":"_moveVotingPower","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1665,"src":"8742:16:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1591,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8742:62:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1592,"nodeType":"ExpressionStatement","src":"8742:62:8"}]},"documentation":{"id":1556,"nodeType":"StructuredDocumentation","src":"8266:160:8","text":" @dev Change delegation for `delegator` to `delegatee`.\n Emits events {IVotes-DelegateChanged} and {IVotes-DelegateVotesChanged}."},"id":1594,"implemented":true,"kind":"function","modifiers":[],"name":"_delegate","nameLocation":"8440:9:8","nodeType":"FunctionDefinition","parameters":{"id":1561,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1558,"mutability":"mutable","name":"delegator","nameLocation":"8458:9:8","nodeType":"VariableDeclaration","scope":1594,"src":"8450:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1557,"name":"address","nodeType":"ElementaryTypeName","src":"8450:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1560,"mutability":"mutable","name":"delegatee","nameLocation":"8477:9:8","nodeType":"VariableDeclaration","scope":1594,"src":"8469:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1559,"name":"address","nodeType":"ElementaryTypeName","src":"8469:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8449:38:8"},"returnParameters":{"id":1562,"nodeType":"ParameterList","parameters":[],"src":"8505:0:8"},"scope":1810,"src":"8431:380:8","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1664,"nodeType":"Block","src":"8893:521:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1609,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1605,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1603,"name":"src","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1596,"src":"8907:3:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1604,"name":"dst","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1598,"src":"8914:3:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8907:10:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1608,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1606,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1600,"src":"8921:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1607,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8930:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8921:10:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8907:24:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1663,"nodeType":"IfStatement","src":"8903:505:8","trueBody":{"id":1662,"nodeType":"Block","src":"8933:475:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1615,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1610,"name":"src","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1596,"src":"8951:3:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1613,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8966:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1612,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8958:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1611,"name":"address","nodeType":"ElementaryTypeName","src":"8958:7:8","typeDescriptions":{}}},"id":1614,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8958:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8951:17:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1635,"nodeType":"IfStatement","src":"8947:221:8","trueBody":{"id":1634,"nodeType":"Block","src":"8970:198:8","statements":[{"assignments":[1617,1619],"declarations":[{"constant":false,"id":1617,"mutability":"mutable","name":"oldWeight","nameLocation":"8997:9:8","nodeType":"VariableDeclaration","scope":1634,"src":"8989:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1616,"name":"uint256","nodeType":"ElementaryTypeName","src":"8989:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1619,"mutability":"mutable","name":"newWeight","nameLocation":"9016:9:8","nodeType":"VariableDeclaration","scope":1634,"src":"9008:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1618,"name":"uint256","nodeType":"ElementaryTypeName","src":"9008:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1627,"initialValue":{"arguments":[{"baseExpression":{"id":1621,"name":"_checkpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1108,"src":"9046:12:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_Checkpoint_$1093_storage_$dyn_storage_$","typeString":"mapping(address => struct ERC20Votes.Checkpoint storage ref[] storage ref)"}},"id":1623,"indexExpression":{"id":1622,"name":"src","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1596,"src":"9059:3:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9046:17:8","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1093_storage_$dyn_storage","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage ref"}},{"id":1624,"name":"_subtract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1794,"src":"9065:9:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},{"id":1625,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1600,"src":"9076:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1093_storage_$dyn_storage","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage ref"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1620,"name":"_writeCheckpoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1766,"src":"9029:16:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_array$_t_struct$_Checkpoint_$1093_storage_$dyn_storage_ptr_$_t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (struct ERC20Votes.Checkpoint storage ref[] storage pointer,function (uint256,uint256) view returns (uint256),uint256) returns (uint256,uint256)"}},"id":1626,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9029:54:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"8988:95:8"},{"eventCall":{"arguments":[{"id":1629,"name":"src","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1596,"src":"9127:3:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1630,"name":"oldWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1617,"src":"9132:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1631,"name":"newWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1619,"src":"9143:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1628,"name":"DelegateVotesChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":133,"src":"9106:20:8","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256)"}},"id":1632,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9106:47:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1633,"nodeType":"EmitStatement","src":"9101:52:8"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1641,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1636,"name":"dst","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1598,"src":"9186:3:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1639,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9201:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1638,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9193:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1637,"name":"address","nodeType":"ElementaryTypeName","src":"9193:7:8","typeDescriptions":{}}},"id":1640,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9193:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9186:17:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1661,"nodeType":"IfStatement","src":"9182:216:8","trueBody":{"id":1660,"nodeType":"Block","src":"9205:193:8","statements":[{"assignments":[1643,1645],"declarations":[{"constant":false,"id":1643,"mutability":"mutable","name":"oldWeight","nameLocation":"9232:9:8","nodeType":"VariableDeclaration","scope":1660,"src":"9224:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1642,"name":"uint256","nodeType":"ElementaryTypeName","src":"9224:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1645,"mutability":"mutable","name":"newWeight","nameLocation":"9251:9:8","nodeType":"VariableDeclaration","scope":1660,"src":"9243:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1644,"name":"uint256","nodeType":"ElementaryTypeName","src":"9243:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1653,"initialValue":{"arguments":[{"baseExpression":{"id":1647,"name":"_checkpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1108,"src":"9281:12:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_Checkpoint_$1093_storage_$dyn_storage_$","typeString":"mapping(address => struct ERC20Votes.Checkpoint storage ref[] storage ref)"}},"id":1649,"indexExpression":{"id":1648,"name":"dst","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1598,"src":"9294:3:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9281:17:8","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1093_storage_$dyn_storage","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage ref"}},{"id":1650,"name":"_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1780,"src":"9300:4:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},{"id":1651,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1600,"src":"9306:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1093_storage_$dyn_storage","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage ref"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1646,"name":"_writeCheckpoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1766,"src":"9264:16:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_array$_t_struct$_Checkpoint_$1093_storage_$dyn_storage_ptr_$_t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (struct ERC20Votes.Checkpoint storage ref[] storage pointer,function (uint256,uint256) view returns (uint256),uint256) returns (uint256,uint256)"}},"id":1652,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9264:49:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"9223:90:8"},{"eventCall":{"arguments":[{"id":1655,"name":"dst","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1598,"src":"9357:3:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1656,"name":"oldWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1643,"src":"9362:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1657,"name":"newWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1645,"src":"9373:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1654,"name":"DelegateVotesChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":133,"src":"9336:20:8","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256)"}},"id":1658,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9336:47:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1659,"nodeType":"EmitStatement","src":"9331:52:8"}]}}]}}]},"id":1665,"implemented":true,"kind":"function","modifiers":[],"name":"_moveVotingPower","nameLocation":"8826:16:8","nodeType":"FunctionDefinition","parameters":{"id":1601,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1596,"mutability":"mutable","name":"src","nameLocation":"8851:3:8","nodeType":"VariableDeclaration","scope":1665,"src":"8843:11:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1595,"name":"address","nodeType":"ElementaryTypeName","src":"8843:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1598,"mutability":"mutable","name":"dst","nameLocation":"8864:3:8","nodeType":"VariableDeclaration","scope":1665,"src":"8856:11:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1597,"name":"address","nodeType":"ElementaryTypeName","src":"8856:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1600,"mutability":"mutable","name":"amount","nameLocation":"8877:6:8","nodeType":"VariableDeclaration","scope":1665,"src":"8869:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1599,"name":"uint256","nodeType":"ElementaryTypeName","src":"8869:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8842:42:8"},"returnParameters":{"id":1602,"nodeType":"ParameterList","parameters":[],"src":"8893:0:8"},"scope":1810,"src":"8817:597:8","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1765,"nodeType":"Block","src":"9628:560:8","statements":[{"assignments":[1689],"declarations":[{"constant":false,"id":1689,"mutability":"mutable","name":"pos","nameLocation":"9646:3:8","nodeType":"VariableDeclaration","scope":1765,"src":"9638:11:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1688,"name":"uint256","nodeType":"ElementaryTypeName","src":"9638:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1692,"initialValue":{"expression":{"id":1690,"name":"ckpts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1669,"src":"9652:5:8","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1093_storage_$dyn_storage_ptr","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage pointer"}},"id":1691,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9658:6:8","memberName":"length","nodeType":"MemberAccess","src":"9652:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9638:26:8"},{"id":1764,"nodeType":"UncheckedBlock","src":"9675:507:8","statements":[{"assignments":[1695],"declarations":[{"constant":false,"id":1695,"mutability":"mutable","name":"oldCkpt","nameLocation":"9717:7:8","nodeType":"VariableDeclaration","scope":1764,"src":"9699:25:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$1093_memory_ptr","typeString":"struct ERC20Votes.Checkpoint"},"typeName":{"id":1694,"nodeType":"UserDefinedTypeName","pathNode":{"id":1693,"name":"Checkpoint","nameLocations":["9699:10:8"],"nodeType":"IdentifierPath","referencedDeclaration":1093,"src":"9699:10:8"},"referencedDeclaration":1093,"src":"9699:10:8","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$1093_storage_ptr","typeString":"struct ERC20Votes.Checkpoint"}},"visibility":"internal"}],"id":1710,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1698,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1696,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1689,"src":"9727:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1697,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9734:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9727:8:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"id":1704,"name":"ckpts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1669,"src":"9771:5:8","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1093_storage_$dyn_storage_ptr","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage pointer"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1707,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1705,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1689,"src":"9778:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1706,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9784:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9778:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1093_storage_$dyn_storage_ptr","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1703,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1809,"src":"9757:13:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint_$1093_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint_$1093_storage_ptr_$","typeString":"function (struct ERC20Votes.Checkpoint storage ref[] storage pointer,uint256) pure returns (struct ERC20Votes.Checkpoint storage pointer)"}},"id":1708,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9757:29:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$1093_storage_ptr","typeString":"struct ERC20Votes.Checkpoint storage pointer"}},"id":1709,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9727:59:8","trueExpression":{"arguments":[{"hexValue":"30","id":1700,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9749:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":1701,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9752:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1699,"name":"Checkpoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1093,"src":"9738:10:8","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Checkpoint_$1093_storage_ptr_$","typeString":"type(struct ERC20Votes.Checkpoint storage pointer)"}},"id":1702,"isConstant":false,"isLValue":false,"isPure":true,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9738:16:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$1093_memory_ptr","typeString":"struct ERC20Votes.Checkpoint memory"}},"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$1093_memory_ptr","typeString":"struct ERC20Votes.Checkpoint memory"}},"nodeType":"VariableDeclarationStatement","src":"9699:87:8"},{"expression":{"id":1714,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1711,"name":"oldWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1684,"src":"9801:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":1712,"name":"oldCkpt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1695,"src":"9813:7:8","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$1093_memory_ptr","typeString":"struct ERC20Votes.Checkpoint memory"}},"id":1713,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9821:5:8","memberName":"votes","nodeType":"MemberAccess","referencedDeclaration":1092,"src":"9813:13:8","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"9801:25:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1715,"nodeType":"ExpressionStatement","src":"9801:25:8"},{"expression":{"id":1721,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1716,"name":"newWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1686,"src":"9840:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1718,"name":"oldWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1684,"src":"9855:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1719,"name":"delta","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1681,"src":"9866:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1717,"name":"op","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1679,"src":"9852:2:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) view returns (uint256)"}},"id":1720,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9852:20:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9840:32:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1722,"nodeType":"ExpressionStatement","src":"9840:32:8"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1731,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1725,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1723,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1689,"src":"9891:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1724,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9897:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9891:7:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint48","typeString":"uint48"},"id":1730,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1726,"name":"oldCkpt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1695,"src":"9902:7:8","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$1093_memory_ptr","typeString":"struct ERC20Votes.Checkpoint memory"}},"id":1727,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9910:9:8","memberName":"fromBlock","nodeType":"MemberAccess","referencedDeclaration":1090,"src":"9902:17:8","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1728,"name":"clock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1126,"src":"9923:5:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint48_$","typeString":"function () view returns (uint48)"}},"id":1729,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9923:7:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"9902:28:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9891:39:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1762,"nodeType":"Block","src":"10038:134:8","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1752,"name":"clock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1126,"src":"10108:5:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint48_$","typeString":"function () view returns (uint48)"}},"id":1753,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10108:7:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint48","typeString":"uint48"}],"expression":{"id":1750,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5502,"src":"10090:8:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5502_$","typeString":"type(library SafeCast)"}},"id":1751,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10099:8:8","memberName":"toUint32","nodeType":"MemberAccess","referencedDeclaration":4664,"src":"10090:17:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint32_$","typeString":"function (uint256) pure returns (uint32)"}},"id":1754,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10090:26:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"arguments":[{"id":1757,"name":"newWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1686,"src":"10144:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1755,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5502,"src":"10125:8:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5502_$","typeString":"type(library SafeCast)"}},"id":1756,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10134:9:8","memberName":"toUint224","nodeType":"MemberAccess","referencedDeclaration":4064,"src":"10125:18:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint224_$","typeString":"function (uint256) pure returns (uint224)"}},"id":1758,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10125:29:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint224","typeString":"uint224"}],"id":1749,"name":"Checkpoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1093,"src":"10067:10:8","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Checkpoint_$1093_storage_ptr_$","typeString":"type(struct ERC20Votes.Checkpoint storage pointer)"}},"id":1759,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["10079:9:8","10118:5:8"],"names":["fromBlock","votes"],"nodeType":"FunctionCall","src":"10067:89:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$1093_memory_ptr","typeString":"struct ERC20Votes.Checkpoint memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Checkpoint_$1093_memory_ptr","typeString":"struct ERC20Votes.Checkpoint memory"}],"expression":{"id":1746,"name":"ckpts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1669,"src":"10056:5:8","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1093_storage_$dyn_storage_ptr","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage pointer"}},"id":1748,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10062:4:8","memberName":"push","nodeType":"MemberAccess","src":"10056:10:8","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_Checkpoint_$1093_storage_$dyn_storage_ptr_$_t_struct$_Checkpoint_$1093_storage_$returns$__$attached_to$_t_array$_t_struct$_Checkpoint_$1093_storage_$dyn_storage_ptr_$","typeString":"function (struct ERC20Votes.Checkpoint storage ref[] storage pointer,struct ERC20Votes.Checkpoint storage ref)"}},"id":1760,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10056:101:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1761,"nodeType":"ExpressionStatement","src":"10056:101:8"}]},"id":1763,"nodeType":"IfStatement","src":"9887:285:8","trueBody":{"id":1745,"nodeType":"Block","src":"9932:100:8","statements":[{"expression":{"id":1743,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":1733,"name":"ckpts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1669,"src":"9964:5:8","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1093_storage_$dyn_storage_ptr","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage pointer"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1736,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1734,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1689,"src":"9971:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1735,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9977:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9971:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1093_storage_$dyn_storage_ptr","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1732,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1809,"src":"9950:13:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint_$1093_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint_$1093_storage_ptr_$","typeString":"function (struct ERC20Votes.Checkpoint storage ref[] storage pointer,uint256) pure returns (struct ERC20Votes.Checkpoint storage pointer)"}},"id":1737,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9950:29:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$1093_storage_ptr","typeString":"struct ERC20Votes.Checkpoint storage pointer"}},"id":1738,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"9980:5:8","memberName":"votes","nodeType":"MemberAccess","referencedDeclaration":1092,"src":"9950:35:8","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1741,"name":"newWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1686,"src":"10007:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1739,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5502,"src":"9988:8:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5502_$","typeString":"type(library SafeCast)"}},"id":1740,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9997:9:8","memberName":"toUint224","nodeType":"MemberAccess","referencedDeclaration":4064,"src":"9988:18:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint224_$","typeString":"function (uint256) pure returns (uint224)"}},"id":1742,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9988:29:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"9950:67:8","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"id":1744,"nodeType":"ExpressionStatement","src":"9950:67:8"}]}}]}]},"id":1766,"implemented":true,"kind":"function","modifiers":[],"name":"_writeCheckpoint","nameLocation":"9429:16:8","nodeType":"FunctionDefinition","parameters":{"id":1682,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1669,"mutability":"mutable","name":"ckpts","nameLocation":"9476:5:8","nodeType":"VariableDeclaration","scope":1766,"src":"9455:26:8","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1093_storage_$dyn_storage_ptr","typeString":"struct ERC20Votes.Checkpoint[]"},"typeName":{"baseType":{"id":1667,"nodeType":"UserDefinedTypeName","pathNode":{"id":1666,"name":"Checkpoint","nameLocations":["9455:10:8"],"nodeType":"IdentifierPath","referencedDeclaration":1093,"src":"9455:10:8"},"referencedDeclaration":1093,"src":"9455:10:8","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$1093_storage_ptr","typeString":"struct ERC20Votes.Checkpoint"}},"id":1668,"nodeType":"ArrayTypeName","src":"9455:12:8","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1093_storage_$dyn_storage_ptr","typeString":"struct ERC20Votes.Checkpoint[]"}},"visibility":"internal"},{"constant":false,"id":1679,"mutability":"mutable","name":"op","nameLocation":"9541:2:8","nodeType":"VariableDeclaration","scope":1766,"src":"9491:52:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) view returns (uint256)"},"typeName":{"id":1678,"nodeType":"FunctionTypeName","parameterTypes":{"id":1674,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1671,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1678,"src":"9500:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1670,"name":"uint256","nodeType":"ElementaryTypeName","src":"9500:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1673,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1678,"src":"9509:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1672,"name":"uint256","nodeType":"ElementaryTypeName","src":"9509:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9499:18:8"},"returnParameterTypes":{"id":1677,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1676,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1678,"src":"9532:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1675,"name":"uint256","nodeType":"ElementaryTypeName","src":"9532:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9531:9:8"},"src":"9491:52:8","stateMutability":"view","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) view returns (uint256)"},"visibility":"internal"},"visibility":"internal"},{"constant":false,"id":1681,"mutability":"mutable","name":"delta","nameLocation":"9561:5:8","nodeType":"VariableDeclaration","scope":1766,"src":"9553:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1680,"name":"uint256","nodeType":"ElementaryTypeName","src":"9553:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9445:127:8"},"returnParameters":{"id":1687,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1684,"mutability":"mutable","name":"oldWeight","nameLocation":"9598:9:8","nodeType":"VariableDeclaration","scope":1766,"src":"9590:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1683,"name":"uint256","nodeType":"ElementaryTypeName","src":"9590:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1686,"mutability":"mutable","name":"newWeight","nameLocation":"9617:9:8","nodeType":"VariableDeclaration","scope":1766,"src":"9609:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1685,"name":"uint256","nodeType":"ElementaryTypeName","src":"9609:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9589:38:8"},"scope":1810,"src":"9420:768:8","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1779,"nodeType":"Block","src":"10261:29:8","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1777,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1775,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1768,"src":"10278:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1776,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1770,"src":"10282:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10278:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1774,"id":1778,"nodeType":"Return","src":"10271:12:8"}]},"id":1780,"implemented":true,"kind":"function","modifiers":[],"name":"_add","nameLocation":"10203:4:8","nodeType":"FunctionDefinition","parameters":{"id":1771,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1768,"mutability":"mutable","name":"a","nameLocation":"10216:1:8","nodeType":"VariableDeclaration","scope":1780,"src":"10208:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1767,"name":"uint256","nodeType":"ElementaryTypeName","src":"10208:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1770,"mutability":"mutable","name":"b","nameLocation":"10227:1:8","nodeType":"VariableDeclaration","scope":1780,"src":"10219:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1769,"name":"uint256","nodeType":"ElementaryTypeName","src":"10219:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10207:22:8"},"returnParameters":{"id":1774,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1773,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1780,"src":"10252:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1772,"name":"uint256","nodeType":"ElementaryTypeName","src":"10252:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10251:9:8"},"scope":1810,"src":"10194:96:8","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":1793,"nodeType":"Block","src":"10368:29:8","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1791,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1789,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1782,"src":"10385:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1790,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1784,"src":"10389:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10385:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1788,"id":1792,"nodeType":"Return","src":"10378:12:8"}]},"id":1794,"implemented":true,"kind":"function","modifiers":[],"name":"_subtract","nameLocation":"10305:9:8","nodeType":"FunctionDefinition","parameters":{"id":1785,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1782,"mutability":"mutable","name":"a","nameLocation":"10323:1:8","nodeType":"VariableDeclaration","scope":1794,"src":"10315:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1781,"name":"uint256","nodeType":"ElementaryTypeName","src":"10315:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1784,"mutability":"mutable","name":"b","nameLocation":"10334:1:8","nodeType":"VariableDeclaration","scope":1794,"src":"10326:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1783,"name":"uint256","nodeType":"ElementaryTypeName","src":"10326:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10314:22:8"},"returnParameters":{"id":1788,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1787,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1794,"src":"10359:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1786,"name":"uint256","nodeType":"ElementaryTypeName","src":"10359:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10358:9:8"},"scope":1810,"src":"10296:101:8","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":1808,"nodeType":"Block","src":"10653:126:8","statements":[{"AST":{"nodeType":"YulBlock","src":"10672:101:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10693:1:8","type":"","value":"0"},{"name":"ckpts.slot","nodeType":"YulIdentifier","src":"10696:10:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10686:6:8"},"nodeType":"YulFunctionCall","src":"10686:21:8"},"nodeType":"YulExpressionStatement","src":"10686:21:8"},{"nodeType":"YulAssignment","src":"10720:43:8","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10749:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10752:4:8","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"10739:9:8"},"nodeType":"YulFunctionCall","src":"10739:18:8"},{"name":"pos","nodeType":"YulIdentifier","src":"10759:3:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10735:3:8"},"nodeType":"YulFunctionCall","src":"10735:28:8"},"variableNames":[{"name":"result.slot","nodeType":"YulIdentifier","src":"10720:11:8"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1799,"isOffset":false,"isSlot":true,"src":"10696:10:8","suffix":"slot","valueSize":1},{"declaration":1801,"isOffset":false,"isSlot":false,"src":"10759:3:8","valueSize":1},{"declaration":1805,"isOffset":false,"isSlot":true,"src":"10720:11:8","suffix":"slot","valueSize":1}],"id":1807,"nodeType":"InlineAssembly","src":"10663:110:8"}]},"documentation":{"id":1795,"nodeType":"StructuredDocumentation","src":"10403:132:8","text":" @dev Access an element of the array without performing bounds check. The position is assumed to be within bounds."},"id":1809,"implemented":true,"kind":"function","modifiers":[],"name":"_unsafeAccess","nameLocation":"10549:13:8","nodeType":"FunctionDefinition","parameters":{"id":1802,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1799,"mutability":"mutable","name":"ckpts","nameLocation":"10584:5:8","nodeType":"VariableDeclaration","scope":1809,"src":"10563:26:8","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1093_storage_$dyn_storage_ptr","typeString":"struct ERC20Votes.Checkpoint[]"},"typeName":{"baseType":{"id":1797,"nodeType":"UserDefinedTypeName","pathNode":{"id":1796,"name":"Checkpoint","nameLocations":["10563:10:8"],"nodeType":"IdentifierPath","referencedDeclaration":1093,"src":"10563:10:8"},"referencedDeclaration":1093,"src":"10563:10:8","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$1093_storage_ptr","typeString":"struct ERC20Votes.Checkpoint"}},"id":1798,"nodeType":"ArrayTypeName","src":"10563:12:8","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1093_storage_$dyn_storage_ptr","typeString":"struct ERC20Votes.Checkpoint[]"}},"visibility":"internal"},{"constant":false,"id":1801,"mutability":"mutable","name":"pos","nameLocation":"10599:3:8","nodeType":"VariableDeclaration","scope":1809,"src":"10591:11:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1800,"name":"uint256","nodeType":"ElementaryTypeName","src":"10591:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10562:41:8"},"returnParameters":{"id":1806,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1805,"mutability":"mutable","name":"result","nameLocation":"10645:6:8","nodeType":"VariableDeclaration","scope":1809,"src":"10626:25:8","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$1093_storage_ptr","typeString":"struct ERC20Votes.Checkpoint"},"typeName":{"id":1804,"nodeType":"UserDefinedTypeName","pathNode":{"id":1803,"name":"Checkpoint","nameLocations":["10626:10:8"],"nodeType":"IdentifierPath","referencedDeclaration":1093,"src":"10626:10:8"},"referencedDeclaration":1093,"src":"10626:10:8","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$1093_storage_ptr","typeString":"struct ERC20Votes.Checkpoint"}},"visibility":"internal"}],"src":"10625:27:8"},"scope":1810,"src":"10540:239:8","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":1811,"src":"1243:9538:8","usedErrors":[1983,1985]}],"src":"121:10661:8"},"id":8},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","exportedSymbols":{"IERC20":[904],"IERC20Metadata":[1835]},"id":1836,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1812,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"110:23:9"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":1813,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1836,"sourceUnit":905,"src":"135:23:9","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1815,"name":"IERC20","nameLocations":["305:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":904,"src":"305:6:9"},"id":1816,"nodeType":"InheritanceSpecifier","src":"305:6:9"}],"canonicalName":"IERC20Metadata","contractDependencies":[],"contractKind":"interface","documentation":{"id":1814,"nodeType":"StructuredDocumentation","src":"160:116:9","text":" @dev Interface for the optional metadata functions from the ERC20 standard.\n _Available since v4.1._"},"fullyImplemented":false,"id":1835,"linearizedBaseContracts":[1835,904],"name":"IERC20Metadata","nameLocation":"287:14:9","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1817,"nodeType":"StructuredDocumentation","src":"318:54:9","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":1822,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"386:4:9","nodeType":"FunctionDefinition","parameters":{"id":1818,"nodeType":"ParameterList","parameters":[],"src":"390:2:9"},"returnParameters":{"id":1821,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1820,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1822,"src":"416:13:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1819,"name":"string","nodeType":"ElementaryTypeName","src":"416:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"415:15:9"},"scope":1835,"src":"377:54:9","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1823,"nodeType":"StructuredDocumentation","src":"437:56:9","text":" @dev Returns the symbol of the token."},"functionSelector":"95d89b41","id":1828,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"507:6:9","nodeType":"FunctionDefinition","parameters":{"id":1824,"nodeType":"ParameterList","parameters":[],"src":"513:2:9"},"returnParameters":{"id":1827,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1826,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1828,"src":"539:13:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1825,"name":"string","nodeType":"ElementaryTypeName","src":"539:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"538:15:9"},"scope":1835,"src":"498:56:9","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1829,"nodeType":"StructuredDocumentation","src":"560:65:9","text":" @dev Returns the decimals places of the token."},"functionSelector":"313ce567","id":1834,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"639:8:9","nodeType":"FunctionDefinition","parameters":{"id":1830,"nodeType":"ParameterList","parameters":[],"src":"647:2:9"},"returnParameters":{"id":1833,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1832,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1834,"src":"673:5:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1831,"name":"uint8","nodeType":"ElementaryTypeName","src":"673:5:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"672:7:9"},"scope":1835,"src":"630:50:9","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1836,"src":"277:405:9","usedErrors":[]}],"src":"110:573:9"},"id":9},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol","exportedSymbols":{"IERC20Permit":[1871]},"id":1872,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1837,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"123:23:10"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Permit","contractDependencies":[],"contractKind":"interface","documentation":{"id":1838,"nodeType":"StructuredDocumentation","src":"148:480:10","text":" @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all."},"fullyImplemented":false,"id":1871,"linearizedBaseContracts":[1871],"name":"IERC20Permit","nameLocation":"639:12:10","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1839,"nodeType":"StructuredDocumentation","src":"658:792:10","text":" @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section]."},"functionSelector":"d505accf","id":1856,"implemented":false,"kind":"function","modifiers":[],"name":"permit","nameLocation":"1464:6:10","nodeType":"FunctionDefinition","parameters":{"id":1854,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1841,"mutability":"mutable","name":"owner","nameLocation":"1488:5:10","nodeType":"VariableDeclaration","scope":1856,"src":"1480:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1840,"name":"address","nodeType":"ElementaryTypeName","src":"1480:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1843,"mutability":"mutable","name":"spender","nameLocation":"1511:7:10","nodeType":"VariableDeclaration","scope":1856,"src":"1503:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1842,"name":"address","nodeType":"ElementaryTypeName","src":"1503:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1845,"mutability":"mutable","name":"value","nameLocation":"1536:5:10","nodeType":"VariableDeclaration","scope":1856,"src":"1528:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1844,"name":"uint256","nodeType":"ElementaryTypeName","src":"1528:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1847,"mutability":"mutable","name":"deadline","nameLocation":"1559:8:10","nodeType":"VariableDeclaration","scope":1856,"src":"1551:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1846,"name":"uint256","nodeType":"ElementaryTypeName","src":"1551:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1849,"mutability":"mutable","name":"v","nameLocation":"1583:1:10","nodeType":"VariableDeclaration","scope":1856,"src":"1577:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1848,"name":"uint8","nodeType":"ElementaryTypeName","src":"1577:5:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1851,"mutability":"mutable","name":"r","nameLocation":"1602:1:10","nodeType":"VariableDeclaration","scope":1856,"src":"1594:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1850,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1594:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1853,"mutability":"mutable","name":"s","nameLocation":"1621:1:10","nodeType":"VariableDeclaration","scope":1856,"src":"1613:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1852,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1613:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1470:158:10"},"returnParameters":{"id":1855,"nodeType":"ParameterList","parameters":[],"src":"1637:0:10"},"scope":1871,"src":"1455:183:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1857,"nodeType":"StructuredDocumentation","src":"1644:294:10","text":" @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."},"functionSelector":"7ecebe00","id":1864,"implemented":false,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"1952:6:10","nodeType":"FunctionDefinition","parameters":{"id":1860,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1859,"mutability":"mutable","name":"owner","nameLocation":"1967:5:10","nodeType":"VariableDeclaration","scope":1864,"src":"1959:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1858,"name":"address","nodeType":"ElementaryTypeName","src":"1959:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1958:15:10"},"returnParameters":{"id":1863,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1862,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1864,"src":"1997:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1861,"name":"uint256","nodeType":"ElementaryTypeName","src":"1997:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1996:9:10"},"scope":1871,"src":"1943:63:10","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1865,"nodeType":"StructuredDocumentation","src":"2012:128:10","text":" @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."},"functionSelector":"3644e515","id":1870,"implemented":false,"kind":"function","modifiers":[],"name":"DOMAIN_SEPARATOR","nameLocation":"2207:16:10","nodeType":"FunctionDefinition","parameters":{"id":1866,"nodeType":"ParameterList","parameters":[],"src":"2223:2:10"},"returnParameters":{"id":1869,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1868,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1870,"src":"2249:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1867,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2249:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2248:9:10"},"scope":1871,"src":"2198:60:10","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1872,"src":"629:1631:10","usedErrors":[]}],"src":"123:2138:10"},"id":10},"@openzeppelin/contracts/token/ERC20/extensions/draft-ERC20Permit.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/draft-ERC20Permit.sol","exportedSymbols":{"Context":[1896],"Counters":[1970],"ECDSA":[2891],"EIP712":[3095],"ERC20":[826],"ERC20Permit":[1076],"IERC20":[904],"IERC20Metadata":[1835],"IERC20Permit":[1871],"IERC5267":[215],"Math":[3961],"ShortString":[1975],"ShortStrings":[2186],"SignedMath":[5607],"StorageSlot":[2296],"Strings":[2525]},"id":1875,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1873,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"128:23:11"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol","file":"./ERC20Permit.sol","id":1874,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1875,"sourceUnit":1077,"src":"218:27:11","symbolAliases":[],"unitAlias":""}],"src":"128:118:11"},"id":11},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[1896]},"id":1897,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1876,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"86:23:12"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":1877,"nodeType":"StructuredDocumentation","src":"111:496:12","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":1896,"linearizedBaseContracts":[1896],"name":"Context","nameLocation":"626:7:12","nodeType":"ContractDefinition","nodes":[{"body":{"id":1885,"nodeType":"Block","src":"702:34:12","statements":[{"expression":{"expression":{"id":1882,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"719:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1883,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"723:6:12","memberName":"sender","nodeType":"MemberAccess","src":"719:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1881,"id":1884,"nodeType":"Return","src":"712:17:12"}]},"id":1886,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"649:10:12","nodeType":"FunctionDefinition","parameters":{"id":1878,"nodeType":"ParameterList","parameters":[],"src":"659:2:12"},"returnParameters":{"id":1881,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1880,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1886,"src":"693:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1879,"name":"address","nodeType":"ElementaryTypeName","src":"693:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"692:9:12"},"scope":1896,"src":"640:96:12","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1894,"nodeType":"Block","src":"809:32:12","statements":[{"expression":{"expression":{"id":1891,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"826:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1892,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"830:4:12","memberName":"data","nodeType":"MemberAccess","src":"826:8:12","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":1890,"id":1893,"nodeType":"Return","src":"819:15:12"}]},"id":1895,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"751:8:12","nodeType":"FunctionDefinition","parameters":{"id":1887,"nodeType":"ParameterList","parameters":[],"src":"759:2:12"},"returnParameters":{"id":1890,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1889,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1895,"src":"793:14:12","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1888,"name":"bytes","nodeType":"ElementaryTypeName","src":"793:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"792:16:12"},"scope":1896,"src":"742:99:12","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":1897,"src":"608:235:12","usedErrors":[]}],"src":"86:758:12"},"id":12},"@openzeppelin/contracts/utils/Counters.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Counters.sol","exportedSymbols":{"Counters":[1970]},"id":1971,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1898,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"87:23:13"},{"abstract":false,"baseContracts":[],"canonicalName":"Counters","contractDependencies":[],"contractKind":"library","documentation":{"id":1899,"nodeType":"StructuredDocumentation","src":"112:311:13","text":" @title Counters\n @author Matt Condon (@shrugs)\n @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\n of elements in a mapping, issuing ERC721 ids, or counting request ids.\n Include with `using Counters for Counters.Counter;`"},"fullyImplemented":true,"id":1970,"linearizedBaseContracts":[1970],"name":"Counters","nameLocation":"432:8:13","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Counters.Counter","id":1902,"members":[{"constant":false,"id":1901,"mutability":"mutable","name":"_value","nameLocation":"794:6:13","nodeType":"VariableDeclaration","scope":1902,"src":"786:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1900,"name":"uint256","nodeType":"ElementaryTypeName","src":"786:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Counter","nameLocation":"454:7:13","nodeType":"StructDefinition","scope":1970,"src":"447:374:13","visibility":"public"},{"body":{"id":1913,"nodeType":"Block","src":"901:38:13","statements":[{"expression":{"expression":{"id":1910,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1905,"src":"918:7:13","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1902_storage_ptr","typeString":"struct Counters.Counter storage pointer"}},"id":1911,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"926:6:13","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":1901,"src":"918:14:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1909,"id":1912,"nodeType":"Return","src":"911:21:13"}]},"id":1914,"implemented":true,"kind":"function","modifiers":[],"name":"current","nameLocation":"836:7:13","nodeType":"FunctionDefinition","parameters":{"id":1906,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1905,"mutability":"mutable","name":"counter","nameLocation":"860:7:13","nodeType":"VariableDeclaration","scope":1914,"src":"844:23:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1902_storage_ptr","typeString":"struct Counters.Counter"},"typeName":{"id":1904,"nodeType":"UserDefinedTypeName","pathNode":{"id":1903,"name":"Counter","nameLocations":["844:7:13"],"nodeType":"IdentifierPath","referencedDeclaration":1902,"src":"844:7:13"},"referencedDeclaration":1902,"src":"844:7:13","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1902_storage_ptr","typeString":"struct Counters.Counter"}},"visibility":"internal"}],"src":"843:25:13"},"returnParameters":{"id":1909,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1908,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1914,"src":"892:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1907,"name":"uint256","nodeType":"ElementaryTypeName","src":"892:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"891:9:13"},"scope":1970,"src":"827:112:13","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1927,"nodeType":"Block","src":"998:70:13","statements":[{"id":1926,"nodeType":"UncheckedBlock","src":"1008:54:13","statements":[{"expression":{"id":1924,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1920,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1917,"src":"1032:7:13","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1902_storage_ptr","typeString":"struct Counters.Counter storage pointer"}},"id":1922,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"1040:6:13","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":1901,"src":"1032:14:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":1923,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1050:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1032:19:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1925,"nodeType":"ExpressionStatement","src":"1032:19:13"}]}]},"id":1928,"implemented":true,"kind":"function","modifiers":[],"name":"increment","nameLocation":"954:9:13","nodeType":"FunctionDefinition","parameters":{"id":1918,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1917,"mutability":"mutable","name":"counter","nameLocation":"980:7:13","nodeType":"VariableDeclaration","scope":1928,"src":"964:23:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1902_storage_ptr","typeString":"struct Counters.Counter"},"typeName":{"id":1916,"nodeType":"UserDefinedTypeName","pathNode":{"id":1915,"name":"Counter","nameLocations":["964:7:13"],"nodeType":"IdentifierPath","referencedDeclaration":1902,"src":"964:7:13"},"referencedDeclaration":1902,"src":"964:7:13","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1902_storage_ptr","typeString":"struct Counters.Counter"}},"visibility":"internal"}],"src":"963:25:13"},"returnParameters":{"id":1919,"nodeType":"ParameterList","parameters":[],"src":"998:0:13"},"scope":1970,"src":"945:123:13","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1955,"nodeType":"Block","src":"1127:176:13","statements":[{"assignments":[1935],"declarations":[{"constant":false,"id":1935,"mutability":"mutable","name":"value","nameLocation":"1145:5:13","nodeType":"VariableDeclaration","scope":1955,"src":"1137:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1934,"name":"uint256","nodeType":"ElementaryTypeName","src":"1137:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1938,"initialValue":{"expression":{"id":1936,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1931,"src":"1153:7:13","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1902_storage_ptr","typeString":"struct Counters.Counter storage pointer"}},"id":1937,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1161:6:13","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":1901,"src":"1153:14:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1137:30:13"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1942,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1940,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1935,"src":"1185:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1941,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1193:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1185:9:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"436f756e7465723a2064656372656d656e74206f766572666c6f77","id":1943,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1196:29:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f","typeString":"literal_string \"Counter: decrement overflow\""},"value":"Counter: decrement overflow"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f","typeString":"literal_string \"Counter: decrement overflow\""}],"id":1939,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1177:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1944,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1177:49:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1945,"nodeType":"ExpressionStatement","src":"1177:49:13"},{"id":1954,"nodeType":"UncheckedBlock","src":"1236:61:13","statements":[{"expression":{"id":1952,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1946,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1931,"src":"1260:7:13","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1902_storage_ptr","typeString":"struct Counters.Counter storage pointer"}},"id":1948,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"1268:6:13","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":1901,"src":"1260:14:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1951,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1949,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1935,"src":"1277:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1950,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1285:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1277:9:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1260:26:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1953,"nodeType":"ExpressionStatement","src":"1260:26:13"}]}]},"id":1956,"implemented":true,"kind":"function","modifiers":[],"name":"decrement","nameLocation":"1083:9:13","nodeType":"FunctionDefinition","parameters":{"id":1932,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1931,"mutability":"mutable","name":"counter","nameLocation":"1109:7:13","nodeType":"VariableDeclaration","scope":1956,"src":"1093:23:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1902_storage_ptr","typeString":"struct Counters.Counter"},"typeName":{"id":1930,"nodeType":"UserDefinedTypeName","pathNode":{"id":1929,"name":"Counter","nameLocations":["1093:7:13"],"nodeType":"IdentifierPath","referencedDeclaration":1902,"src":"1093:7:13"},"referencedDeclaration":1902,"src":"1093:7:13","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1902_storage_ptr","typeString":"struct Counters.Counter"}},"visibility":"internal"}],"src":"1092:25:13"},"returnParameters":{"id":1933,"nodeType":"ParameterList","parameters":[],"src":"1127:0:13"},"scope":1970,"src":"1074:229:13","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1968,"nodeType":"Block","src":"1358:35:13","statements":[{"expression":{"id":1966,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1962,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1959,"src":"1368:7:13","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1902_storage_ptr","typeString":"struct Counters.Counter storage pointer"}},"id":1964,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"1376:6:13","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":1901,"src":"1368:14:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":1965,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1385:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1368:18:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1967,"nodeType":"ExpressionStatement","src":"1368:18:13"}]},"id":1969,"implemented":true,"kind":"function","modifiers":[],"name":"reset","nameLocation":"1318:5:13","nodeType":"FunctionDefinition","parameters":{"id":1960,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1959,"mutability":"mutable","name":"counter","nameLocation":"1340:7:13","nodeType":"VariableDeclaration","scope":1969,"src":"1324:23:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1902_storage_ptr","typeString":"struct Counters.Counter"},"typeName":{"id":1958,"nodeType":"UserDefinedTypeName","pathNode":{"id":1957,"name":"Counter","nameLocations":["1324:7:13"],"nodeType":"IdentifierPath","referencedDeclaration":1902,"src":"1324:7:13"},"referencedDeclaration":1902,"src":"1324:7:13","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1902_storage_ptr","typeString":"struct Counters.Counter"}},"visibility":"internal"}],"src":"1323:25:13"},"returnParameters":{"id":1961,"nodeType":"ParameterList","parameters":[],"src":"1358:0:13"},"scope":1970,"src":"1309:84:13","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":1971,"src":"424:971:13","usedErrors":[]}],"src":"87:1309:13"},"id":13},"@openzeppelin/contracts/utils/ShortStrings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/ShortStrings.sol","exportedSymbols":{"ShortString":[1975],"ShortStrings":[2186],"StorageSlot":[2296]},"id":2187,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1972,"literals":["solidity","^","0.8",".8"],"nodeType":"PragmaDirective","src":"106:23:14"},{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","file":"./StorageSlot.sol","id":1973,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2187,"sourceUnit":2297,"src":"131:27:14","symbolAliases":[],"unitAlias":""},{"canonicalName":"ShortString","id":1975,"name":"ShortString","nameLocation":"333:11:14","nodeType":"UserDefinedValueTypeDefinition","src":"328:28:14","underlyingType":{"id":1974,"name":"bytes32","nodeType":"ElementaryTypeName","src":"348:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},{"abstract":false,"baseContracts":[],"canonicalName":"ShortStrings","contractDependencies":[],"contractKind":"library","documentation":{"id":1976,"nodeType":"StructuredDocumentation","src":"358:876:14","text":" @dev This library provides functions to convert short memory strings\n into a `ShortString` type that can be used as an immutable variable.\n Strings of arbitrary length can be optimized using this library if\n they are short enough (up to 31 bytes) by packing them with their\n length (1 byte) in a single EVM word (32 bytes). Additionally, a\n fallback mechanism can be used for every other case.\n Usage example:\n ```solidity\n contract Named {\n     using ShortStrings for *;\n     ShortString private immutable _name;\n     string private _nameFallback;\n     constructor(string memory contractName) {\n         _name = contractName.toShortStringWithFallback(_nameFallback);\n     }\n     function name() external view returns (string memory) {\n         return _name.toStringWithFallback(_nameFallback);\n     }\n }\n ```"},"fullyImplemented":true,"id":2186,"linearizedBaseContracts":[2186],"name":"ShortStrings","nameLocation":"1243:12:14","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":1979,"mutability":"constant","name":"_FALLBACK_SENTINEL","nameLocation":"1350:18:14","nodeType":"VariableDeclaration","scope":2186,"src":"1325:112:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1977,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1325:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307830303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030304646","id":1978,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1371:66:14","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0x00000000000000000000000000000000000000000000000000000000000000FF"},"visibility":"private"},{"errorSelector":"305a27a9","id":1983,"name":"StringTooLong","nameLocation":"1450:13:14","nodeType":"ErrorDefinition","parameters":{"id":1982,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1981,"mutability":"mutable","name":"str","nameLocation":"1471:3:14","nodeType":"VariableDeclaration","scope":1983,"src":"1464:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1980,"name":"string","nodeType":"ElementaryTypeName","src":"1464:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1463:12:14"},"src":"1444:32:14"},{"errorSelector":"b3512b0c","id":1985,"name":"InvalidShortString","nameLocation":"1487:18:14","nodeType":"ErrorDefinition","parameters":{"id":1984,"nodeType":"ParameterList","parameters":[],"src":"1505:2:14"},"src":"1481:27:14"},{"body":{"id":2028,"nodeType":"Block","src":"1767:208:14","statements":[{"assignments":[1995],"declarations":[{"constant":false,"id":1995,"mutability":"mutable","name":"bstr","nameLocation":"1790:4:14","nodeType":"VariableDeclaration","scope":2028,"src":"1777:17:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1994,"name":"bytes","nodeType":"ElementaryTypeName","src":"1777:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2000,"initialValue":{"arguments":[{"id":1998,"name":"str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1988,"src":"1803:3:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1997,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1797:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1996,"name":"bytes","nodeType":"ElementaryTypeName","src":"1797:5:14","typeDescriptions":{}}},"id":1999,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1797:10:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"1777:30:14"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2004,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2001,"name":"bstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1995,"src":"1821:4:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2002,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1826:6:14","memberName":"length","nodeType":"MemberAccess","src":"1821:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3331","id":2003,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1835:2:14","typeDescriptions":{"typeIdentifier":"t_rational_31_by_1","typeString":"int_const 31"},"value":"31"},"src":"1821:16:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2010,"nodeType":"IfStatement","src":"1817:72:14","trueBody":{"id":2009,"nodeType":"Block","src":"1839:50:14","statements":[{"errorCall":{"arguments":[{"id":2006,"name":"str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1988,"src":"1874:3:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2005,"name":"StringTooLong","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1983,"src":"1860:13:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":2007,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1860:18:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2008,"nodeType":"RevertStatement","src":"1853:25:14"}]}},{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2024,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":2019,"name":"bstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1995,"src":"1946:4:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2018,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1938:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2017,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1938:7:14","typeDescriptions":{}}},"id":2020,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1938:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2016,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1930:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2015,"name":"uint256","nodeType":"ElementaryTypeName","src":"1930:7:14","typeDescriptions":{}}},"id":2021,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1930:22:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"expression":{"id":2022,"name":"bstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1995,"src":"1955:4:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2023,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1960:6:14","memberName":"length","nodeType":"MemberAccess","src":"1955:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1930:36:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2014,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1922:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2013,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1922:7:14","typeDescriptions":{}}},"id":2025,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1922:45:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":2011,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1975,"src":"1905:11:14","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$1975_$","typeString":"type(ShortString)"}},"id":2012,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1917:4:14","memberName":"wrap","nodeType":"MemberAccess","src":"1905:16:14","typeDescriptions":{"typeIdentifier":"t_function_wrap_pure$_t_bytes32_$returns$_t_userDefinedValueType$_ShortString_$1975_$","typeString":"function (bytes32) pure returns (ShortString)"}},"id":2026,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1905:63:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1975","typeString":"ShortString"}},"functionReturnParameters":1993,"id":2027,"nodeType":"Return","src":"1898:70:14"}]},"documentation":{"id":1986,"nodeType":"StructuredDocumentation","src":"1514:170:14","text":" @dev Encode a string of at most 31 chars into a `ShortString`.\n This will trigger a `StringTooLong` error is the input string is too long."},"id":2029,"implemented":true,"kind":"function","modifiers":[],"name":"toShortString","nameLocation":"1698:13:14","nodeType":"FunctionDefinition","parameters":{"id":1989,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1988,"mutability":"mutable","name":"str","nameLocation":"1726:3:14","nodeType":"VariableDeclaration","scope":2029,"src":"1712:17:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1987,"name":"string","nodeType":"ElementaryTypeName","src":"1712:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1711:19:14"},"returnParameters":{"id":1993,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1992,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2029,"src":"1754:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1975","typeString":"ShortString"},"typeName":{"id":1991,"nodeType":"UserDefinedTypeName","pathNode":{"id":1990,"name":"ShortString","nameLocations":["1754:11:14"],"nodeType":"IdentifierPath","referencedDeclaration":1975,"src":"1754:11:14"},"referencedDeclaration":1975,"src":"1754:11:14","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1975","typeString":"ShortString"}},"visibility":"internal"}],"src":"1753:13:14"},"scope":2186,"src":"1689:286:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2054,"nodeType":"Block","src":"2133:331:14","statements":[{"assignments":[2039],"declarations":[{"constant":false,"id":2039,"mutability":"mutable","name":"len","nameLocation":"2151:3:14","nodeType":"VariableDeclaration","scope":2054,"src":"2143:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2038,"name":"uint256","nodeType":"ElementaryTypeName","src":"2143:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2043,"initialValue":{"arguments":[{"id":2041,"name":"sstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2033,"src":"2168:4:14","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1975","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1975","typeString":"ShortString"}],"id":2040,"name":"byteLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2087,"src":"2157:10:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$1975_$returns$_t_uint256_$","typeString":"function (ShortString) pure returns (uint256)"}},"id":2042,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2157:16:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2143:30:14"},{"assignments":[2045],"declarations":[{"constant":false,"id":2045,"mutability":"mutable","name":"str","nameLocation":"2275:3:14","nodeType":"VariableDeclaration","scope":2054,"src":"2261:17:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2044,"name":"string","nodeType":"ElementaryTypeName","src":"2261:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":2050,"initialValue":{"arguments":[{"hexValue":"3332","id":2048,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2292:2:14","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"}],"id":2047,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2281:10:14","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":2046,"name":"string","nodeType":"ElementaryTypeName","src":"2285:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":2049,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2281:14:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"2261:34:14"},{"AST":{"nodeType":"YulBlock","src":"2357:81:14","statements":[{"expression":{"arguments":[{"name":"str","nodeType":"YulIdentifier","src":"2378:3:14"},{"name":"len","nodeType":"YulIdentifier","src":"2383:3:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2371:6:14"},"nodeType":"YulFunctionCall","src":"2371:16:14"},"nodeType":"YulExpressionStatement","src":"2371:16:14"},{"expression":{"arguments":[{"arguments":[{"name":"str","nodeType":"YulIdentifier","src":"2411:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"2416:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2407:3:14"},"nodeType":"YulFunctionCall","src":"2407:14:14"},{"name":"sstr","nodeType":"YulIdentifier","src":"2423:4:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2400:6:14"},"nodeType":"YulFunctionCall","src":"2400:28:14"},"nodeType":"YulExpressionStatement","src":"2400:28:14"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2039,"isOffset":false,"isSlot":false,"src":"2383:3:14","valueSize":1},{"declaration":2033,"isOffset":false,"isSlot":false,"src":"2423:4:14","valueSize":1},{"declaration":2045,"isOffset":false,"isSlot":false,"src":"2378:3:14","valueSize":1},{"declaration":2045,"isOffset":false,"isSlot":false,"src":"2411:3:14","valueSize":1}],"id":2051,"nodeType":"InlineAssembly","src":"2348:90:14"},{"expression":{"id":2052,"name":"str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2045,"src":"2454:3:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2037,"id":2053,"nodeType":"Return","src":"2447:10:14"}]},"documentation":{"id":2030,"nodeType":"StructuredDocumentation","src":"1981:73:14","text":" @dev Decode a `ShortString` back to a \"normal\" string."},"id":2055,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"2068:8:14","nodeType":"FunctionDefinition","parameters":{"id":2034,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2033,"mutability":"mutable","name":"sstr","nameLocation":"2089:4:14","nodeType":"VariableDeclaration","scope":2055,"src":"2077:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1975","typeString":"ShortString"},"typeName":{"id":2032,"nodeType":"UserDefinedTypeName","pathNode":{"id":2031,"name":"ShortString","nameLocations":["2077:11:14"],"nodeType":"IdentifierPath","referencedDeclaration":1975,"src":"2077:11:14"},"referencedDeclaration":1975,"src":"2077:11:14","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1975","typeString":"ShortString"}},"visibility":"internal"}],"src":"2076:18:14"},"returnParameters":{"id":2037,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2036,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2055,"src":"2118:13:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2035,"name":"string","nodeType":"ElementaryTypeName","src":"2118:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2117:15:14"},"scope":2186,"src":"2059:405:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2086,"nodeType":"Block","src":"2606:175:14","statements":[{"assignments":[2065],"declarations":[{"constant":false,"id":2065,"mutability":"mutable","name":"result","nameLocation":"2624:6:14","nodeType":"VariableDeclaration","scope":2086,"src":"2616:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2064,"name":"uint256","nodeType":"ElementaryTypeName","src":"2616:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2075,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2074,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":2070,"name":"sstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2059,"src":"2660:4:14","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1975","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1975","typeString":"ShortString"}],"expression":{"id":2068,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1975,"src":"2641:11:14","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$1975_$","typeString":"type(ShortString)"}},"id":2069,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2653:6:14","memberName":"unwrap","nodeType":"MemberAccess","src":"2641:18:14","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$1975_$returns$_t_bytes32_$","typeString":"function (ShortString) pure returns (bytes32)"}},"id":2071,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2641:24:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2067,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2633:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2066,"name":"uint256","nodeType":"ElementaryTypeName","src":"2633:7:14","typeDescriptions":{}}},"id":2072,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2633:33:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"30784646","id":2073,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2669:4:14","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0xFF"},"src":"2633:40:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2616:57:14"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2078,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2076,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2065,"src":"2687:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3331","id":2077,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2696:2:14","typeDescriptions":{"typeIdentifier":"t_rational_31_by_1","typeString":"int_const 31"},"value":"31"},"src":"2687:11:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2083,"nodeType":"IfStatement","src":"2683:69:14","trueBody":{"id":2082,"nodeType":"Block","src":"2700:52:14","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2079,"name":"InvalidShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1985,"src":"2721:18:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2080,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2721:20:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2081,"nodeType":"RevertStatement","src":"2714:27:14"}]}},{"expression":{"id":2084,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2065,"src":"2768:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2063,"id":2085,"nodeType":"Return","src":"2761:13:14"}]},"documentation":{"id":2056,"nodeType":"StructuredDocumentation","src":"2470:61:14","text":" @dev Return the length of a `ShortString`."},"id":2087,"implemented":true,"kind":"function","modifiers":[],"name":"byteLength","nameLocation":"2545:10:14","nodeType":"FunctionDefinition","parameters":{"id":2060,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2059,"mutability":"mutable","name":"sstr","nameLocation":"2568:4:14","nodeType":"VariableDeclaration","scope":2087,"src":"2556:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1975","typeString":"ShortString"},"typeName":{"id":2058,"nodeType":"UserDefinedTypeName","pathNode":{"id":2057,"name":"ShortString","nameLocations":["2556:11:14"],"nodeType":"IdentifierPath","referencedDeclaration":1975,"src":"2556:11:14"},"referencedDeclaration":1975,"src":"2556:11:14","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1975","typeString":"ShortString"}},"visibility":"internal"}],"src":"2555:18:14"},"returnParameters":{"id":2063,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2062,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2087,"src":"2597:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2061,"name":"uint256","nodeType":"ElementaryTypeName","src":"2597:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2596:9:14"},"scope":2186,"src":"2536:245:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2126,"nodeType":"Block","src":"3004:232:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2100,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2090,"src":"3024:5:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2099,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3018:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2098,"name":"bytes","nodeType":"ElementaryTypeName","src":"3018:5:14","typeDescriptions":{}}},"id":2101,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3018:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2102,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3031:6:14","memberName":"length","nodeType":"MemberAccess","src":"3018:19:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3332","id":2103,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3040:2:14","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"3018:24:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2124,"nodeType":"Block","src":"3102:128:14","statements":[{"expression":{"id":2117,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":2113,"name":"store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2092,"src":"3142:5:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}],"expression":{"id":2110,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2296,"src":"3116:11:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$2296_$","typeString":"type(library StorageSlot)"}},"id":2112,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3128:13:14","memberName":"getStringSlot","nodeType":"MemberAccess","referencedDeclaration":2273,"src":"3116:25:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_storage_ptr_$returns$_t_struct$_StringSlot_$2204_storage_ptr_$","typeString":"function (string storage pointer) pure returns (struct StorageSlot.StringSlot storage pointer)"}},"id":2114,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3116:32:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2204_storage_ptr","typeString":"struct StorageSlot.StringSlot storage pointer"}},"id":2115,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3149:5:14","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":2203,"src":"3116:38:14","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2116,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2090,"src":"3157:5:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"3116:46:14","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":2118,"nodeType":"ExpressionStatement","src":"3116:46:14"},{"expression":{"arguments":[{"id":2121,"name":"_FALLBACK_SENTINEL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1979,"src":"3200:18:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":2119,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1975,"src":"3183:11:14","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$1975_$","typeString":"type(ShortString)"}},"id":2120,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3195:4:14","memberName":"wrap","nodeType":"MemberAccess","src":"3183:16:14","typeDescriptions":{"typeIdentifier":"t_function_wrap_pure$_t_bytes32_$returns$_t_userDefinedValueType$_ShortString_$1975_$","typeString":"function (bytes32) pure returns (ShortString)"}},"id":2122,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3183:36:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1975","typeString":"ShortString"}},"functionReturnParameters":2097,"id":2123,"nodeType":"Return","src":"3176:43:14"}]},"id":2125,"nodeType":"IfStatement","src":"3014:216:14","trueBody":{"id":2109,"nodeType":"Block","src":"3044:52:14","statements":[{"expression":{"arguments":[{"id":2106,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2090,"src":"3079:5:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2105,"name":"toShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2029,"src":"3065:13:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$returns$_t_userDefinedValueType$_ShortString_$1975_$","typeString":"function (string memory) pure returns (ShortString)"}},"id":2107,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3065:20:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1975","typeString":"ShortString"}},"functionReturnParameters":2097,"id":2108,"nodeType":"Return","src":"3058:27:14"}]}}]},"documentation":{"id":2088,"nodeType":"StructuredDocumentation","src":"2787:103:14","text":" @dev Encode a string into a `ShortString`, or write it to storage if it is too long."},"id":2127,"implemented":true,"kind":"function","modifiers":[],"name":"toShortStringWithFallback","nameLocation":"2904:25:14","nodeType":"FunctionDefinition","parameters":{"id":2093,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2090,"mutability":"mutable","name":"value","nameLocation":"2944:5:14","nodeType":"VariableDeclaration","scope":2127,"src":"2930:19:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2089,"name":"string","nodeType":"ElementaryTypeName","src":"2930:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2092,"mutability":"mutable","name":"store","nameLocation":"2966:5:14","nodeType":"VariableDeclaration","scope":2127,"src":"2951:20:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2091,"name":"string","nodeType":"ElementaryTypeName","src":"2951:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2929:43:14"},"returnParameters":{"id":2097,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2096,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2127,"src":"2991:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1975","typeString":"ShortString"},"typeName":{"id":2095,"nodeType":"UserDefinedTypeName","pathNode":{"id":2094,"name":"ShortString","nameLocations":["2991:11:14"],"nodeType":"IdentifierPath","referencedDeclaration":1975,"src":"2991:11:14"},"referencedDeclaration":1975,"src":"2991:11:14","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1975","typeString":"ShortString"}},"visibility":"internal"}],"src":"2990:13:14"},"scope":2186,"src":"2895:341:14","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2153,"nodeType":"Block","src":"3476:159:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2143,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2140,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2131,"src":"3509:5:14","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1975","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1975","typeString":"ShortString"}],"expression":{"id":2138,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1975,"src":"3490:11:14","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$1975_$","typeString":"type(ShortString)"}},"id":2139,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3502:6:14","memberName":"unwrap","nodeType":"MemberAccess","src":"3490:18:14","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$1975_$returns$_t_bytes32_$","typeString":"function (ShortString) pure returns (bytes32)"}},"id":2141,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3490:25:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2142,"name":"_FALLBACK_SENTINEL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1979,"src":"3519:18:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3490:47:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2151,"nodeType":"Block","src":"3592:37:14","statements":[{"expression":{"id":2149,"name":"store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2133,"src":"3613:5:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}},"functionReturnParameters":2137,"id":2150,"nodeType":"Return","src":"3606:12:14"}]},"id":2152,"nodeType":"IfStatement","src":"3486:143:14","trueBody":{"id":2148,"nodeType":"Block","src":"3539:47:14","statements":[{"expression":{"arguments":[{"id":2145,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2131,"src":"3569:5:14","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1975","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1975","typeString":"ShortString"}],"id":2144,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2055,"src":"3560:8:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$1975_$returns$_t_string_memory_ptr_$","typeString":"function (ShortString) pure returns (string memory)"}},"id":2146,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3560:15:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2137,"id":2147,"nodeType":"Return","src":"3553:22:14"}]}}]},"documentation":{"id":2128,"nodeType":"StructuredDocumentation","src":"3242:120:14","text":" @dev Decode a string that was encoded to `ShortString` or written to storage using {setWithFallback}."},"id":2154,"implemented":true,"kind":"function","modifiers":[],"name":"toStringWithFallback","nameLocation":"3376:20:14","nodeType":"FunctionDefinition","parameters":{"id":2134,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2131,"mutability":"mutable","name":"value","nameLocation":"3409:5:14","nodeType":"VariableDeclaration","scope":2154,"src":"3397:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1975","typeString":"ShortString"},"typeName":{"id":2130,"nodeType":"UserDefinedTypeName","pathNode":{"id":2129,"name":"ShortString","nameLocations":["3397:11:14"],"nodeType":"IdentifierPath","referencedDeclaration":1975,"src":"3397:11:14"},"referencedDeclaration":1975,"src":"3397:11:14","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1975","typeString":"ShortString"}},"visibility":"internal"},{"constant":false,"id":2133,"mutability":"mutable","name":"store","nameLocation":"3431:5:14","nodeType":"VariableDeclaration","scope":2154,"src":"3416:20:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2132,"name":"string","nodeType":"ElementaryTypeName","src":"3416:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3396:41:14"},"returnParameters":{"id":2137,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2136,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2154,"src":"3461:13:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2135,"name":"string","nodeType":"ElementaryTypeName","src":"3461:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3460:15:14"},"scope":2186,"src":"3367:268:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2184,"nodeType":"Block","src":"4108:175:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2170,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2167,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2158,"src":"4141:5:14","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1975","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1975","typeString":"ShortString"}],"expression":{"id":2165,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1975,"src":"4122:11:14","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$1975_$","typeString":"type(ShortString)"}},"id":2166,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4134:6:14","memberName":"unwrap","nodeType":"MemberAccess","src":"4122:18:14","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$1975_$returns$_t_bytes32_$","typeString":"function (ShortString) pure returns (bytes32)"}},"id":2168,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4122:25:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2169,"name":"_FALLBACK_SENTINEL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1979,"src":"4151:18:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4122:47:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2182,"nodeType":"Block","src":"4226:51:14","statements":[{"expression":{"expression":{"arguments":[{"id":2178,"name":"store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2160,"src":"4253:5:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}],"id":2177,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4247:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2176,"name":"bytes","nodeType":"ElementaryTypeName","src":"4247:5:14","typeDescriptions":{}}},"id":2179,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4247:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}},"id":2180,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4260:6:14","memberName":"length","nodeType":"MemberAccess","src":"4247:19:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2164,"id":2181,"nodeType":"Return","src":"4240:26:14"}]},"id":2183,"nodeType":"IfStatement","src":"4118:159:14","trueBody":{"id":2175,"nodeType":"Block","src":"4171:49:14","statements":[{"expression":{"arguments":[{"id":2172,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2158,"src":"4203:5:14","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1975","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1975","typeString":"ShortString"}],"id":2171,"name":"byteLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2087,"src":"4192:10:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$1975_$returns$_t_uint256_$","typeString":"function (ShortString) pure returns (uint256)"}},"id":2173,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4192:17:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2164,"id":2174,"nodeType":"Return","src":"4185:24:14"}]}}]},"documentation":{"id":2155,"nodeType":"StructuredDocumentation","src":"3641:357:14","text":" @dev Return the length of a string that was encoded to `ShortString` or written to storage using {setWithFallback}.\n WARNING: This will return the \"byte length\" of the string. This may not reflect the actual length in terms of\n actual characters as the UTF-8 encoding of a single character can span over multiple bytes."},"id":2185,"implemented":true,"kind":"function","modifiers":[],"name":"byteLengthWithFallback","nameLocation":"4012:22:14","nodeType":"FunctionDefinition","parameters":{"id":2161,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2158,"mutability":"mutable","name":"value","nameLocation":"4047:5:14","nodeType":"VariableDeclaration","scope":2185,"src":"4035:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1975","typeString":"ShortString"},"typeName":{"id":2157,"nodeType":"UserDefinedTypeName","pathNode":{"id":2156,"name":"ShortString","nameLocations":["4035:11:14"],"nodeType":"IdentifierPath","referencedDeclaration":1975,"src":"4035:11:14"},"referencedDeclaration":1975,"src":"4035:11:14","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1975","typeString":"ShortString"}},"visibility":"internal"},{"constant":false,"id":2160,"mutability":"mutable","name":"store","nameLocation":"4069:5:14","nodeType":"VariableDeclaration","scope":2185,"src":"4054:20:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2159,"name":"string","nodeType":"ElementaryTypeName","src":"4054:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4034:41:14"},"returnParameters":{"id":2164,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2163,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2185,"src":"4099:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2162,"name":"uint256","nodeType":"ElementaryTypeName","src":"4099:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4098:9:14"},"scope":2186,"src":"4003:280:14","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":2187,"src":"1235:3050:14","usedErrors":[1983,1985]}],"src":"106:4180:14"},"id":14},"@openzeppelin/contracts/utils/StorageSlot.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","exportedSymbols":{"StorageSlot":[2296]},"id":2297,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2188,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"193:23:15"},{"abstract":false,"baseContracts":[],"canonicalName":"StorageSlot","contractDependencies":[],"contractKind":"library","documentation":{"id":2189,"nodeType":"StructuredDocumentation","src":"218:1201:15","text":" @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(Address.isContract(newImplementation), \"ERC1967: new implementation is not a contract\");\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```\n _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._\n _Available since v4.9 for `string`, `bytes`._"},"fullyImplemented":true,"id":2296,"linearizedBaseContracts":[2296],"name":"StorageSlot","nameLocation":"1428:11:15","nodeType":"ContractDefinition","nodes":[{"canonicalName":"StorageSlot.AddressSlot","id":2192,"members":[{"constant":false,"id":2191,"mutability":"mutable","name":"value","nameLocation":"1483:5:15","nodeType":"VariableDeclaration","scope":2192,"src":"1475:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2190,"name":"address","nodeType":"ElementaryTypeName","src":"1475:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"AddressSlot","nameLocation":"1453:11:15","nodeType":"StructDefinition","scope":2296,"src":"1446:49:15","visibility":"public"},{"canonicalName":"StorageSlot.BooleanSlot","id":2195,"members":[{"constant":false,"id":2194,"mutability":"mutable","name":"value","nameLocation":"1535:5:15","nodeType":"VariableDeclaration","scope":2195,"src":"1530:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2193,"name":"bool","nodeType":"ElementaryTypeName","src":"1530:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"BooleanSlot","nameLocation":"1508:11:15","nodeType":"StructDefinition","scope":2296,"src":"1501:46:15","visibility":"public"},{"canonicalName":"StorageSlot.Bytes32Slot","id":2198,"members":[{"constant":false,"id":2197,"mutability":"mutable","name":"value","nameLocation":"1590:5:15","nodeType":"VariableDeclaration","scope":2198,"src":"1582:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2196,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1582:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"Bytes32Slot","nameLocation":"1560:11:15","nodeType":"StructDefinition","scope":2296,"src":"1553:49:15","visibility":"public"},{"canonicalName":"StorageSlot.Uint256Slot","id":2201,"members":[{"constant":false,"id":2200,"mutability":"mutable","name":"value","nameLocation":"1645:5:15","nodeType":"VariableDeclaration","scope":2201,"src":"1637:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2199,"name":"uint256","nodeType":"ElementaryTypeName","src":"1637:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Uint256Slot","nameLocation":"1615:11:15","nodeType":"StructDefinition","scope":2296,"src":"1608:49:15","visibility":"public"},{"canonicalName":"StorageSlot.StringSlot","id":2204,"members":[{"constant":false,"id":2203,"mutability":"mutable","name":"value","nameLocation":"1698:5:15","nodeType":"VariableDeclaration","scope":2204,"src":"1691:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2202,"name":"string","nodeType":"ElementaryTypeName","src":"1691:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"StringSlot","nameLocation":"1670:10:15","nodeType":"StructDefinition","scope":2296,"src":"1663:47:15","visibility":"public"},{"canonicalName":"StorageSlot.BytesSlot","id":2207,"members":[{"constant":false,"id":2206,"mutability":"mutable","name":"value","nameLocation":"1749:5:15","nodeType":"VariableDeclaration","scope":2207,"src":"1743:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":2205,"name":"bytes","nodeType":"ElementaryTypeName","src":"1743:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"BytesSlot","nameLocation":"1723:9:15","nodeType":"StructDefinition","scope":2296,"src":"1716:45:15","visibility":"public"},{"body":{"id":2217,"nodeType":"Block","src":"1943:106:15","statements":[{"AST":{"nodeType":"YulBlock","src":"2005:38:15","statements":[{"nodeType":"YulAssignment","src":"2019:14:15","value":{"name":"slot","nodeType":"YulIdentifier","src":"2029:4:15"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2019:6:15"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2214,"isOffset":false,"isSlot":true,"src":"2019:6:15","suffix":"slot","valueSize":1},{"declaration":2210,"isOffset":false,"isSlot":false,"src":"2029:4:15","valueSize":1}],"id":2216,"nodeType":"InlineAssembly","src":"1996:47:15"}]},"documentation":{"id":2208,"nodeType":"StructuredDocumentation","src":"1767:87:15","text":" @dev Returns an `AddressSlot` with member `value` located at `slot`."},"id":2218,"implemented":true,"kind":"function","modifiers":[],"name":"getAddressSlot","nameLocation":"1868:14:15","nodeType":"FunctionDefinition","parameters":{"id":2211,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2210,"mutability":"mutable","name":"slot","nameLocation":"1891:4:15","nodeType":"VariableDeclaration","scope":2218,"src":"1883:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2209,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1883:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1882:14:15"},"returnParameters":{"id":2215,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2214,"mutability":"mutable","name":"r","nameLocation":"1940:1:15","nodeType":"VariableDeclaration","scope":2218,"src":"1920:21:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2192_storage_ptr","typeString":"struct StorageSlot.AddressSlot"},"typeName":{"id":2213,"nodeType":"UserDefinedTypeName","pathNode":{"id":2212,"name":"AddressSlot","nameLocations":["1920:11:15"],"nodeType":"IdentifierPath","referencedDeclaration":2192,"src":"1920:11:15"},"referencedDeclaration":2192,"src":"1920:11:15","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2192_storage_ptr","typeString":"struct StorageSlot.AddressSlot"}},"visibility":"internal"}],"src":"1919:23:15"},"scope":2296,"src":"1859:190:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2228,"nodeType":"Block","src":"2231:106:15","statements":[{"AST":{"nodeType":"YulBlock","src":"2293:38:15","statements":[{"nodeType":"YulAssignment","src":"2307:14:15","value":{"name":"slot","nodeType":"YulIdentifier","src":"2317:4:15"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2307:6:15"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2225,"isOffset":false,"isSlot":true,"src":"2307:6:15","suffix":"slot","valueSize":1},{"declaration":2221,"isOffset":false,"isSlot":false,"src":"2317:4:15","valueSize":1}],"id":2227,"nodeType":"InlineAssembly","src":"2284:47:15"}]},"documentation":{"id":2219,"nodeType":"StructuredDocumentation","src":"2055:87:15","text":" @dev Returns an `BooleanSlot` with member `value` located at `slot`."},"id":2229,"implemented":true,"kind":"function","modifiers":[],"name":"getBooleanSlot","nameLocation":"2156:14:15","nodeType":"FunctionDefinition","parameters":{"id":2222,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2221,"mutability":"mutable","name":"slot","nameLocation":"2179:4:15","nodeType":"VariableDeclaration","scope":2229,"src":"2171:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2220,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2171:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2170:14:15"},"returnParameters":{"id":2226,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2225,"mutability":"mutable","name":"r","nameLocation":"2228:1:15","nodeType":"VariableDeclaration","scope":2229,"src":"2208:21:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$2195_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"},"typeName":{"id":2224,"nodeType":"UserDefinedTypeName","pathNode":{"id":2223,"name":"BooleanSlot","nameLocations":["2208:11:15"],"nodeType":"IdentifierPath","referencedDeclaration":2195,"src":"2208:11:15"},"referencedDeclaration":2195,"src":"2208:11:15","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$2195_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"}},"visibility":"internal"}],"src":"2207:23:15"},"scope":2296,"src":"2147:190:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2239,"nodeType":"Block","src":"2519:106:15","statements":[{"AST":{"nodeType":"YulBlock","src":"2581:38:15","statements":[{"nodeType":"YulAssignment","src":"2595:14:15","value":{"name":"slot","nodeType":"YulIdentifier","src":"2605:4:15"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2595:6:15"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2236,"isOffset":false,"isSlot":true,"src":"2595:6:15","suffix":"slot","valueSize":1},{"declaration":2232,"isOffset":false,"isSlot":false,"src":"2605:4:15","valueSize":1}],"id":2238,"nodeType":"InlineAssembly","src":"2572:47:15"}]},"documentation":{"id":2230,"nodeType":"StructuredDocumentation","src":"2343:87:15","text":" @dev Returns an `Bytes32Slot` with member `value` located at `slot`."},"id":2240,"implemented":true,"kind":"function","modifiers":[],"name":"getBytes32Slot","nameLocation":"2444:14:15","nodeType":"FunctionDefinition","parameters":{"id":2233,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2232,"mutability":"mutable","name":"slot","nameLocation":"2467:4:15","nodeType":"VariableDeclaration","scope":2240,"src":"2459:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2231,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2459:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2458:14:15"},"returnParameters":{"id":2237,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2236,"mutability":"mutable","name":"r","nameLocation":"2516:1:15","nodeType":"VariableDeclaration","scope":2240,"src":"2496:21:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$2198_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"},"typeName":{"id":2235,"nodeType":"UserDefinedTypeName","pathNode":{"id":2234,"name":"Bytes32Slot","nameLocations":["2496:11:15"],"nodeType":"IdentifierPath","referencedDeclaration":2198,"src":"2496:11:15"},"referencedDeclaration":2198,"src":"2496:11:15","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$2198_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"}},"visibility":"internal"}],"src":"2495:23:15"},"scope":2296,"src":"2435:190:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2250,"nodeType":"Block","src":"2807:106:15","statements":[{"AST":{"nodeType":"YulBlock","src":"2869:38:15","statements":[{"nodeType":"YulAssignment","src":"2883:14:15","value":{"name":"slot","nodeType":"YulIdentifier","src":"2893:4:15"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2883:6:15"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2247,"isOffset":false,"isSlot":true,"src":"2883:6:15","suffix":"slot","valueSize":1},{"declaration":2243,"isOffset":false,"isSlot":false,"src":"2893:4:15","valueSize":1}],"id":2249,"nodeType":"InlineAssembly","src":"2860:47:15"}]},"documentation":{"id":2241,"nodeType":"StructuredDocumentation","src":"2631:87:15","text":" @dev Returns an `Uint256Slot` with member `value` located at `slot`."},"id":2251,"implemented":true,"kind":"function","modifiers":[],"name":"getUint256Slot","nameLocation":"2732:14:15","nodeType":"FunctionDefinition","parameters":{"id":2244,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2243,"mutability":"mutable","name":"slot","nameLocation":"2755:4:15","nodeType":"VariableDeclaration","scope":2251,"src":"2747:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2242,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2747:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2746:14:15"},"returnParameters":{"id":2248,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2247,"mutability":"mutable","name":"r","nameLocation":"2804:1:15","nodeType":"VariableDeclaration","scope":2251,"src":"2784:21:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$2201_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"},"typeName":{"id":2246,"nodeType":"UserDefinedTypeName","pathNode":{"id":2245,"name":"Uint256Slot","nameLocations":["2784:11:15"],"nodeType":"IdentifierPath","referencedDeclaration":2201,"src":"2784:11:15"},"referencedDeclaration":2201,"src":"2784:11:15","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$2201_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"}},"visibility":"internal"}],"src":"2783:23:15"},"scope":2296,"src":"2723:190:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2261,"nodeType":"Block","src":"3092:106:15","statements":[{"AST":{"nodeType":"YulBlock","src":"3154:38:15","statements":[{"nodeType":"YulAssignment","src":"3168:14:15","value":{"name":"slot","nodeType":"YulIdentifier","src":"3178:4:15"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"3168:6:15"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2258,"isOffset":false,"isSlot":true,"src":"3168:6:15","suffix":"slot","valueSize":1},{"declaration":2254,"isOffset":false,"isSlot":false,"src":"3178:4:15","valueSize":1}],"id":2260,"nodeType":"InlineAssembly","src":"3145:47:15"}]},"documentation":{"id":2252,"nodeType":"StructuredDocumentation","src":"2919:86:15","text":" @dev Returns an `StringSlot` with member `value` located at `slot`."},"id":2262,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3019:13:15","nodeType":"FunctionDefinition","parameters":{"id":2255,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2254,"mutability":"mutable","name":"slot","nameLocation":"3041:4:15","nodeType":"VariableDeclaration","scope":2262,"src":"3033:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2253,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3033:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3032:14:15"},"returnParameters":{"id":2259,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2258,"mutability":"mutable","name":"r","nameLocation":"3089:1:15","nodeType":"VariableDeclaration","scope":2262,"src":"3070:20:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2204_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":2257,"nodeType":"UserDefinedTypeName","pathNode":{"id":2256,"name":"StringSlot","nameLocations":["3070:10:15"],"nodeType":"IdentifierPath","referencedDeclaration":2204,"src":"3070:10:15"},"referencedDeclaration":2204,"src":"3070:10:15","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2204_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"3069:22:15"},"scope":2296,"src":"3010:188:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2272,"nodeType":"Block","src":"3400:112:15","statements":[{"AST":{"nodeType":"YulBlock","src":"3462:44:15","statements":[{"nodeType":"YulAssignment","src":"3476:20:15","value":{"name":"store.slot","nodeType":"YulIdentifier","src":"3486:10:15"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"3476:6:15"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2269,"isOffset":false,"isSlot":true,"src":"3476:6:15","suffix":"slot","valueSize":1},{"declaration":2265,"isOffset":false,"isSlot":true,"src":"3486:10:15","suffix":"slot","valueSize":1}],"id":2271,"nodeType":"InlineAssembly","src":"3453:53:15"}]},"documentation":{"id":2263,"nodeType":"StructuredDocumentation","src":"3204:101:15","text":" @dev Returns an `StringSlot` representation of the string storage pointer `store`."},"id":2273,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3319:13:15","nodeType":"FunctionDefinition","parameters":{"id":2266,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2265,"mutability":"mutable","name":"store","nameLocation":"3348:5:15","nodeType":"VariableDeclaration","scope":2273,"src":"3333:20:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2264,"name":"string","nodeType":"ElementaryTypeName","src":"3333:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3332:22:15"},"returnParameters":{"id":2270,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2269,"mutability":"mutable","name":"r","nameLocation":"3397:1:15","nodeType":"VariableDeclaration","scope":2273,"src":"3378:20:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2204_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":2268,"nodeType":"UserDefinedTypeName","pathNode":{"id":2267,"name":"StringSlot","nameLocations":["3378:10:15"],"nodeType":"IdentifierPath","referencedDeclaration":2204,"src":"3378:10:15"},"referencedDeclaration":2204,"src":"3378:10:15","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2204_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"3377:22:15"},"scope":2296,"src":"3310:202:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2283,"nodeType":"Block","src":"3688:106:15","statements":[{"AST":{"nodeType":"YulBlock","src":"3750:38:15","statements":[{"nodeType":"YulAssignment","src":"3764:14:15","value":{"name":"slot","nodeType":"YulIdentifier","src":"3774:4:15"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"3764:6:15"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2280,"isOffset":false,"isSlot":true,"src":"3764:6:15","suffix":"slot","valueSize":1},{"declaration":2276,"isOffset":false,"isSlot":false,"src":"3774:4:15","valueSize":1}],"id":2282,"nodeType":"InlineAssembly","src":"3741:47:15"}]},"documentation":{"id":2274,"nodeType":"StructuredDocumentation","src":"3518:85:15","text":" @dev Returns an `BytesSlot` with member `value` located at `slot`."},"id":2284,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"3617:12:15","nodeType":"FunctionDefinition","parameters":{"id":2277,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2276,"mutability":"mutable","name":"slot","nameLocation":"3638:4:15","nodeType":"VariableDeclaration","scope":2284,"src":"3630:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2275,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3630:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3629:14:15"},"returnParameters":{"id":2281,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2280,"mutability":"mutable","name":"r","nameLocation":"3685:1:15","nodeType":"VariableDeclaration","scope":2284,"src":"3667:19:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$2207_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":2279,"nodeType":"UserDefinedTypeName","pathNode":{"id":2278,"name":"BytesSlot","nameLocations":["3667:9:15"],"nodeType":"IdentifierPath","referencedDeclaration":2207,"src":"3667:9:15"},"referencedDeclaration":2207,"src":"3667:9:15","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$2207_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"3666:21:15"},"scope":2296,"src":"3608:186:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2294,"nodeType":"Block","src":"3991:112:15","statements":[{"AST":{"nodeType":"YulBlock","src":"4053:44:15","statements":[{"nodeType":"YulAssignment","src":"4067:20:15","value":{"name":"store.slot","nodeType":"YulIdentifier","src":"4077:10:15"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"4067:6:15"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2291,"isOffset":false,"isSlot":true,"src":"4067:6:15","suffix":"slot","valueSize":1},{"declaration":2287,"isOffset":false,"isSlot":true,"src":"4077:10:15","suffix":"slot","valueSize":1}],"id":2293,"nodeType":"InlineAssembly","src":"4044:53:15"}]},"documentation":{"id":2285,"nodeType":"StructuredDocumentation","src":"3800:99:15","text":" @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."},"id":2295,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"3913:12:15","nodeType":"FunctionDefinition","parameters":{"id":2288,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2287,"mutability":"mutable","name":"store","nameLocation":"3940:5:15","nodeType":"VariableDeclaration","scope":2295,"src":"3926:19:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":2286,"name":"bytes","nodeType":"ElementaryTypeName","src":"3926:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3925:21:15"},"returnParameters":{"id":2292,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2291,"mutability":"mutable","name":"r","nameLocation":"3988:1:15","nodeType":"VariableDeclaration","scope":2295,"src":"3970:19:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$2207_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":2290,"nodeType":"UserDefinedTypeName","pathNode":{"id":2289,"name":"BytesSlot","nameLocations":["3970:9:15"],"nodeType":"IdentifierPath","referencedDeclaration":2207,"src":"3970:9:15"},"referencedDeclaration":2207,"src":"3970:9:15","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$2207_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"3969:21:15"},"scope":2296,"src":"3904:199:15","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2297,"src":"1420:2685:15","usedErrors":[]}],"src":"193:3913:15"},"id":15},"@openzeppelin/contracts/utils/Strings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","exportedSymbols":{"Math":[3961],"SignedMath":[5607],"Strings":[2525]},"id":2526,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2298,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"101:23:16"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":2299,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2526,"sourceUnit":3962,"src":"126:25:16","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","file":"./math/SignedMath.sol","id":2300,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2526,"sourceUnit":5608,"src":"152:31:16","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Strings","contractDependencies":[],"contractKind":"library","documentation":{"id":2301,"nodeType":"StructuredDocumentation","src":"185:34:16","text":" @dev String operations."},"fullyImplemented":true,"id":2525,"linearizedBaseContracts":[2525],"name":"Strings","nameLocation":"228:7:16","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":2304,"mutability":"constant","name":"_SYMBOLS","nameLocation":"267:8:16","nodeType":"VariableDeclaration","scope":2525,"src":"242:54:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":2302,"name":"bytes16","nodeType":"ElementaryTypeName","src":"242:7:16","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":2303,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"278:18:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":2307,"mutability":"constant","name":"_ADDRESS_LENGTH","nameLocation":"325:15:16","nodeType":"VariableDeclaration","scope":2525,"src":"302:43:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2305,"name":"uint8","nodeType":"ElementaryTypeName","src":"302:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":2306,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"343:2:16","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"body":{"id":2354,"nodeType":"Block","src":"518:625:16","statements":[{"id":2353,"nodeType":"UncheckedBlock","src":"528:609:16","statements":[{"assignments":[2316],"declarations":[{"constant":false,"id":2316,"mutability":"mutable","name":"length","nameLocation":"560:6:16","nodeType":"VariableDeclaration","scope":2353,"src":"552:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2315,"name":"uint256","nodeType":"ElementaryTypeName","src":"552:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2323,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2322,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2319,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2310,"src":"580:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2317,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3961,"src":"569:4:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$3961_$","typeString":"type(library Math)"}},"id":2318,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"574:5:16","memberName":"log10","nodeType":"MemberAccess","referencedDeclaration":3798,"src":"569:10:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2320,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"569:17:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2321,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"589:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"569:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"552:38:16"},{"assignments":[2325],"declarations":[{"constant":false,"id":2325,"mutability":"mutable","name":"buffer","nameLocation":"618:6:16","nodeType":"VariableDeclaration","scope":2353,"src":"604:20:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2324,"name":"string","nodeType":"ElementaryTypeName","src":"604:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":2330,"initialValue":{"arguments":[{"id":2328,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2316,"src":"638:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2327,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"627:10:16","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":2326,"name":"string","nodeType":"ElementaryTypeName","src":"631:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":2329,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"627:18:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"604:41:16"},{"assignments":[2332],"declarations":[{"constant":false,"id":2332,"mutability":"mutable","name":"ptr","nameLocation":"667:3:16","nodeType":"VariableDeclaration","scope":2353,"src":"659:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2331,"name":"uint256","nodeType":"ElementaryTypeName","src":"659:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2333,"nodeType":"VariableDeclarationStatement","src":"659:11:16"},{"AST":{"nodeType":"YulBlock","src":"740:67:16","statements":[{"nodeType":"YulAssignment","src":"758:35:16","value":{"arguments":[{"name":"buffer","nodeType":"YulIdentifier","src":"769:6:16"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"781:2:16","type":"","value":"32"},{"name":"length","nodeType":"YulIdentifier","src":"785:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"777:3:16"},"nodeType":"YulFunctionCall","src":"777:15:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"765:3:16"},"nodeType":"YulFunctionCall","src":"765:28:16"},"variableNames":[{"name":"ptr","nodeType":"YulIdentifier","src":"758:3:16"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2325,"isOffset":false,"isSlot":false,"src":"769:6:16","valueSize":1},{"declaration":2316,"isOffset":false,"isSlot":false,"src":"785:6:16","valueSize":1},{"declaration":2332,"isOffset":false,"isSlot":false,"src":"758:3:16","valueSize":1}],"id":2334,"nodeType":"InlineAssembly","src":"731:76:16"},{"body":{"id":2349,"nodeType":"Block","src":"833:267:16","statements":[{"expression":{"id":2337,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"851:5:16","subExpression":{"id":2336,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2332,"src":"851:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2338,"nodeType":"ExpressionStatement","src":"851:5:16"},{"AST":{"nodeType":"YulBlock","src":"934:84:16","statements":[{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"964:3:16"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"978:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"985:2:16","type":"","value":"10"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"974:3:16"},"nodeType":"YulFunctionCall","src":"974:14:16"},{"name":"_SYMBOLS","nodeType":"YulIdentifier","src":"990:8:16"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"969:4:16"},"nodeType":"YulFunctionCall","src":"969:30:16"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"956:7:16"},"nodeType":"YulFunctionCall","src":"956:44:16"},"nodeType":"YulExpressionStatement","src":"956:44:16"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2304,"isOffset":false,"isSlot":false,"src":"990:8:16","valueSize":1},{"declaration":2332,"isOffset":false,"isSlot":false,"src":"964:3:16","valueSize":1},{"declaration":2310,"isOffset":false,"isSlot":false,"src":"978:5:16","valueSize":1}],"id":2339,"nodeType":"InlineAssembly","src":"925:93:16"},{"expression":{"id":2342,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2340,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2310,"src":"1035:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":2341,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1044:2:16","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1035:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2343,"nodeType":"ExpressionStatement","src":"1035:11:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2346,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2344,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2310,"src":"1068:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2345,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1077:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1068:10:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2348,"nodeType":"IfStatement","src":"1064:21:16","trueBody":{"id":2347,"nodeType":"Break","src":"1080:5:16"}}]},"condition":{"hexValue":"74727565","id":2335,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"827:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"id":2350,"nodeType":"WhileStatement","src":"820:280:16"},{"expression":{"id":2351,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2325,"src":"1120:6:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2314,"id":2352,"nodeType":"Return","src":"1113:13:16"}]}]},"documentation":{"id":2308,"nodeType":"StructuredDocumentation","src":"352:90:16","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":2355,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"456:8:16","nodeType":"FunctionDefinition","parameters":{"id":2311,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2310,"mutability":"mutable","name":"value","nameLocation":"473:5:16","nodeType":"VariableDeclaration","scope":2355,"src":"465:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2309,"name":"uint256","nodeType":"ElementaryTypeName","src":"465:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"464:15:16"},"returnParameters":{"id":2314,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2313,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2355,"src":"503:13:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2312,"name":"string","nodeType":"ElementaryTypeName","src":"503:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"502:15:16"},"scope":2525,"src":"447:696:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2382,"nodeType":"Block","src":"1313:103:16","statements":[{"expression":{"arguments":[{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2369,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2367,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2358,"src":"1354:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":2368,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1362:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1354:9:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":2371,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1372:2:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":2372,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1354:20:16","trueExpression":{"hexValue":"2d","id":2370,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1366:3:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[{"arguments":[{"id":2376,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2358,"src":"1400:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"id":2374,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5607,"src":"1385:10:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SignedMath_$5607_$","typeString":"type(library SignedMath)"}},"id":2375,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1396:3:16","memberName":"abs","nodeType":"MemberAccess","referencedDeclaration":5606,"src":"1385:14:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_uint256_$","typeString":"function (int256) pure returns (uint256)"}},"id":2377,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1385:21:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2373,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[2355,2383],"referencedDeclaration":2355,"src":"1376:8:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":2378,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1376:31:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":2365,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1337:3:16","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2366,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1341:12:16","memberName":"encodePacked","nodeType":"MemberAccess","src":"1337:16:16","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2379,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1337:71:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2364,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1330:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2363,"name":"string","nodeType":"ElementaryTypeName","src":"1330:6:16","typeDescriptions":{}}},"id":2380,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1330:79:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2362,"id":2381,"nodeType":"Return","src":"1323:86:16"}]},"documentation":{"id":2356,"nodeType":"StructuredDocumentation","src":"1149:89:16","text":" @dev Converts a `int256` to its ASCII `string` decimal representation."},"id":2383,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"1252:8:16","nodeType":"FunctionDefinition","parameters":{"id":2359,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2358,"mutability":"mutable","name":"value","nameLocation":"1268:5:16","nodeType":"VariableDeclaration","scope":2383,"src":"1261:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2357,"name":"int256","nodeType":"ElementaryTypeName","src":"1261:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1260:14:16"},"returnParameters":{"id":2362,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2361,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2383,"src":"1298:13:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2360,"name":"string","nodeType":"ElementaryTypeName","src":"1298:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1297:15:16"},"scope":2525,"src":"1243:173:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2402,"nodeType":"Block","src":"1595:100:16","statements":[{"id":2401,"nodeType":"UncheckedBlock","src":"1605:84:16","statements":[{"expression":{"arguments":[{"id":2392,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2386,"src":"1648:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2398,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2395,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2386,"src":"1667:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2393,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3961,"src":"1655:4:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$3961_$","typeString":"type(library Math)"}},"id":2394,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1660:6:16","memberName":"log256","nodeType":"MemberAccess","referencedDeclaration":3921,"src":"1655:11:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2396,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1655:18:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2397,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1676:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1655:22:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2391,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[2403,2479,2499],"referencedDeclaration":2479,"src":"1636:11:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":2399,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1636:42:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2390,"id":2400,"nodeType":"Return","src":"1629:49:16"}]}]},"documentation":{"id":2384,"nodeType":"StructuredDocumentation","src":"1422:94:16","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":2403,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1530:11:16","nodeType":"FunctionDefinition","parameters":{"id":2387,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2386,"mutability":"mutable","name":"value","nameLocation":"1550:5:16","nodeType":"VariableDeclaration","scope":2403,"src":"1542:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2385,"name":"uint256","nodeType":"ElementaryTypeName","src":"1542:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1541:15:16"},"returnParameters":{"id":2390,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2389,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2403,"src":"1580:13:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2388,"name":"string","nodeType":"ElementaryTypeName","src":"1580:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1579:15:16"},"scope":2525,"src":"1521:174:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2478,"nodeType":"Block","src":"1908:347:16","statements":[{"assignments":[2414],"declarations":[{"constant":false,"id":2414,"mutability":"mutable","name":"buffer","nameLocation":"1931:6:16","nodeType":"VariableDeclaration","scope":2478,"src":"1918:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2413,"name":"bytes","nodeType":"ElementaryTypeName","src":"1918:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2423,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2421,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2417,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1950:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2418,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2408,"src":"1954:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1950:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":2420,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1963:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"1950:14:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2416,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1940:9:16","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":2415,"name":"bytes","nodeType":"ElementaryTypeName","src":"1944:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":2422,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1940:25:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"1918:47:16"},{"expression":{"id":2428,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2424,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2414,"src":"1975:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2426,"indexExpression":{"hexValue":"30","id":2425,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1982:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1975:9:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":2427,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1987:3:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"1975:15:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2429,"nodeType":"ExpressionStatement","src":"1975:15:16"},{"expression":{"id":2434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2430,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2414,"src":"2000:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2432,"indexExpression":{"hexValue":"31","id":2431,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2007:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2000:9:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":2433,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2012:3:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"2000:15:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2435,"nodeType":"ExpressionStatement","src":"2000:15:16"},{"body":{"id":2464,"nodeType":"Block","src":"2070:83:16","statements":[{"expression":{"id":2458,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2450,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2414,"src":"2084:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2452,"indexExpression":{"id":2451,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2437,"src":"2091:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2084:9:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":2453,"name":"_SYMBOLS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2304,"src":"2096:8:16","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":2457,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2456,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2454,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2406,"src":"2105:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":2455,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2113:3:16","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"2105:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2096:21:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"2084:33:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2459,"nodeType":"ExpressionStatement","src":"2084:33:16"},{"expression":{"id":2462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2460,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2406,"src":"2131:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":2461,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2141:1:16","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"2131:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2463,"nodeType":"ExpressionStatement","src":"2131:11:16"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2446,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2444,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2437,"src":"2058:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":2445,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2062:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2058:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2465,"initializationExpression":{"assignments":[2437],"declarations":[{"constant":false,"id":2437,"mutability":"mutable","name":"i","nameLocation":"2038:1:16","nodeType":"VariableDeclaration","scope":2465,"src":"2030:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2436,"name":"uint256","nodeType":"ElementaryTypeName","src":"2030:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2443,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2442,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2440,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2438,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2042:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2439,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2408,"src":"2046:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2042:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2441,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2055:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2042:14:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2030:26:16"},"loopExpression":{"expression":{"id":2448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"2065:3:16","subExpression":{"id":2447,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2437,"src":"2067:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2449,"nodeType":"ExpressionStatement","src":"2065:3:16"},"nodeType":"ForStatement","src":"2025:128:16"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2469,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2467,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2406,"src":"2170:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2468,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2179:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2170:10:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"537472696e67733a20686578206c656e67746820696e73756666696369656e74","id":2470,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2182:34:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","typeString":"literal_string \"Strings: hex length insufficient\""},"value":"Strings: hex length insufficient"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","typeString":"literal_string \"Strings: hex length insufficient\""}],"id":2466,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2162:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2471,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2162:55:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2472,"nodeType":"ExpressionStatement","src":"2162:55:16"},{"expression":{"arguments":[{"id":2475,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2414,"src":"2241:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2474,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2234:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2473,"name":"string","nodeType":"ElementaryTypeName","src":"2234:6:16","typeDescriptions":{}}},"id":2476,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2234:14:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2412,"id":2477,"nodeType":"Return","src":"2227:21:16"}]},"documentation":{"id":2404,"nodeType":"StructuredDocumentation","src":"1701:112:16","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":2479,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1827:11:16","nodeType":"FunctionDefinition","parameters":{"id":2409,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2406,"mutability":"mutable","name":"value","nameLocation":"1847:5:16","nodeType":"VariableDeclaration","scope":2479,"src":"1839:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2405,"name":"uint256","nodeType":"ElementaryTypeName","src":"1839:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2408,"mutability":"mutable","name":"length","nameLocation":"1862:6:16","nodeType":"VariableDeclaration","scope":2479,"src":"1854:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2407,"name":"uint256","nodeType":"ElementaryTypeName","src":"1854:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1838:31:16"},"returnParameters":{"id":2412,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2411,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2479,"src":"1893:13:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2410,"name":"string","nodeType":"ElementaryTypeName","src":"1893:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1892:15:16"},"scope":2525,"src":"1818:437:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2498,"nodeType":"Block","src":"2480:76:16","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":2492,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2482,"src":"2525:4:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2491,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2517:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":2490,"name":"uint160","nodeType":"ElementaryTypeName","src":"2517:7:16","typeDescriptions":{}}},"id":2493,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2517:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":2489,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2509:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2488,"name":"uint256","nodeType":"ElementaryTypeName","src":"2509:7:16","typeDescriptions":{}}},"id":2494,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2509:22:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2495,"name":"_ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2307,"src":"2533:15:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":2487,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[2403,2479,2499],"referencedDeclaration":2479,"src":"2497:11:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":2496,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2497:52:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2486,"id":2497,"nodeType":"Return","src":"2490:59:16"}]},"documentation":{"id":2480,"nodeType":"StructuredDocumentation","src":"2261:141:16","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation."},"id":2499,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2416:11:16","nodeType":"FunctionDefinition","parameters":{"id":2483,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2482,"mutability":"mutable","name":"addr","nameLocation":"2436:4:16","nodeType":"VariableDeclaration","scope":2499,"src":"2428:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2481,"name":"address","nodeType":"ElementaryTypeName","src":"2428:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2427:14:16"},"returnParameters":{"id":2486,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2485,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2499,"src":"2465:13:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2484,"name":"string","nodeType":"ElementaryTypeName","src":"2465:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2464:15:16"},"scope":2525,"src":"2407:149:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2523,"nodeType":"Block","src":"2711:66:16","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2521,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":2512,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2502,"src":"2744:1:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2511,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2738:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2510,"name":"bytes","nodeType":"ElementaryTypeName","src":"2738:5:16","typeDescriptions":{}}},"id":2513,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2738:8:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2509,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2728:9:16","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2514,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2728:19:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":2518,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2504,"src":"2767:1:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2517,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2761:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2516,"name":"bytes","nodeType":"ElementaryTypeName","src":"2761:5:16","typeDescriptions":{}}},"id":2519,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2761:8:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2515,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2751:9:16","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2520,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2751:19:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2728:42:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2508,"id":2522,"nodeType":"Return","src":"2721:49:16"}]},"documentation":{"id":2500,"nodeType":"StructuredDocumentation","src":"2562:66:16","text":" @dev Returns true if the two strings are equal."},"id":2524,"implemented":true,"kind":"function","modifiers":[],"name":"equal","nameLocation":"2642:5:16","nodeType":"FunctionDefinition","parameters":{"id":2505,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2502,"mutability":"mutable","name":"a","nameLocation":"2662:1:16","nodeType":"VariableDeclaration","scope":2524,"src":"2648:15:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2501,"name":"string","nodeType":"ElementaryTypeName","src":"2648:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2504,"mutability":"mutable","name":"b","nameLocation":"2679:1:16","nodeType":"VariableDeclaration","scope":2524,"src":"2665:15:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2503,"name":"string","nodeType":"ElementaryTypeName","src":"2665:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2647:34:16"},"returnParameters":{"id":2508,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2507,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2524,"src":"2705:4:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2506,"name":"bool","nodeType":"ElementaryTypeName","src":"2705:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2704:6:16"},"scope":2525,"src":"2633:144:16","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2526,"src":"220:2559:16","usedErrors":[]}],"src":"101:2679:16"},"id":16},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","exportedSymbols":{"ECDSA":[2891],"Math":[3961],"SignedMath":[5607],"Strings":[2525]},"id":2892,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2527,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"112:23:17"},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"../Strings.sol","id":2528,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2892,"sourceUnit":2526,"src":"137:24:17","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"ECDSA","contractDependencies":[],"contractKind":"library","documentation":{"id":2529,"nodeType":"StructuredDocumentation","src":"163:205:17","text":" @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n These functions can be used to verify that a message was signed by the holder\n of the private keys of a given address."},"fullyImplemented":true,"id":2891,"linearizedBaseContracts":[2891],"name":"ECDSA","nameLocation":"377:5:17","nodeType":"ContractDefinition","nodes":[{"canonicalName":"ECDSA.RecoverError","id":2535,"members":[{"id":2530,"name":"NoError","nameLocation":"417:7:17","nodeType":"EnumValue","src":"417:7:17"},{"id":2531,"name":"InvalidSignature","nameLocation":"434:16:17","nodeType":"EnumValue","src":"434:16:17"},{"id":2532,"name":"InvalidSignatureLength","nameLocation":"460:22:17","nodeType":"EnumValue","src":"460:22:17"},{"id":2533,"name":"InvalidSignatureS","nameLocation":"492:17:17","nodeType":"EnumValue","src":"492:17:17"},{"id":2534,"name":"InvalidSignatureV","nameLocation":"519:17:17","nodeType":"EnumValue","src":"519:17:17"}],"name":"RecoverError","nameLocation":"394:12:17","nodeType":"EnumDefinition","src":"389:175:17"},{"body":{"id":2578,"nodeType":"Block","src":"624:457:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$2535","typeString":"enum ECDSA.RecoverError"},"id":2544,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2541,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2538,"src":"638:5:17","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2535","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2542,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2535,"src":"647:12:17","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2535_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2543,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"660:7:17","memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":2530,"src":"647:20:17","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2535","typeString":"enum ECDSA.RecoverError"}},"src":"638:29:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$2535","typeString":"enum ECDSA.RecoverError"},"id":2550,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2547,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2538,"src":"734:5:17","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2535","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2548,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2535,"src":"743:12:17","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2535_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2549,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"756:16:17","memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":2531,"src":"743:29:17","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2535","typeString":"enum ECDSA.RecoverError"}},"src":"734:38:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$2535","typeString":"enum ECDSA.RecoverError"},"id":2559,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2556,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2538,"src":"843:5:17","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2535","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2557,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2535,"src":"852:12:17","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2535_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2558,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"865:22:17","memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":2532,"src":"852:35:17","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2535","typeString":"enum ECDSA.RecoverError"}},"src":"843:44:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$2535","typeString":"enum ECDSA.RecoverError"},"id":2568,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2565,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2538,"src":"965:5:17","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2535","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2566,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2535,"src":"974:12:17","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2535_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2567,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"987:17:17","memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":2533,"src":"974:30:17","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2535","typeString":"enum ECDSA.RecoverError"}},"src":"965:39:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2574,"nodeType":"IfStatement","src":"961:114:17","trueBody":{"id":2573,"nodeType":"Block","src":"1006:69:17","statements":[{"expression":{"arguments":[{"hexValue":"45434453413a20696e76616c6964207369676e6174757265202773272076616c7565","id":2570,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1027:36:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd","typeString":"literal_string \"ECDSA: invalid signature 's' value\""},"value":"ECDSA: invalid signature 's' value"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd","typeString":"literal_string \"ECDSA: invalid signature 's' value\""}],"id":2569,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"1020:6:17","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":2571,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1020:44:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2572,"nodeType":"ExpressionStatement","src":"1020:44:17"}]}},"id":2575,"nodeType":"IfStatement","src":"839:236:17","trueBody":{"id":2564,"nodeType":"Block","src":"889:66:17","statements":[{"expression":{"arguments":[{"hexValue":"45434453413a20696e76616c6964207369676e6174757265206c656e677468","id":2561,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"910:33:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77","typeString":"literal_string \"ECDSA: invalid signature length\""},"value":"ECDSA: invalid signature length"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77","typeString":"literal_string \"ECDSA: invalid signature length\""}],"id":2560,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"903:6:17","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":2562,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"903:41:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2563,"nodeType":"ExpressionStatement","src":"903:41:17"}]}},"id":2576,"nodeType":"IfStatement","src":"730:345:17","trueBody":{"id":2555,"nodeType":"Block","src":"774:59:17","statements":[{"expression":{"arguments":[{"hexValue":"45434453413a20696e76616c6964207369676e6174757265","id":2552,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"795:26:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be","typeString":"literal_string \"ECDSA: invalid signature\""},"value":"ECDSA: invalid signature"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be","typeString":"literal_string \"ECDSA: invalid signature\""}],"id":2551,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"788:6:17","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":2553,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"788:34:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2554,"nodeType":"ExpressionStatement","src":"788:34:17"}]}},"id":2577,"nodeType":"IfStatement","src":"634:441:17","trueBody":{"id":2546,"nodeType":"Block","src":"669:55:17","statements":[{"functionReturnParameters":2540,"id":2545,"nodeType":"Return","src":"683:7:17"}]}}]},"id":2579,"implemented":true,"kind":"function","modifiers":[],"name":"_throwError","nameLocation":"579:11:17","nodeType":"FunctionDefinition","parameters":{"id":2539,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2538,"mutability":"mutable","name":"error","nameLocation":"604:5:17","nodeType":"VariableDeclaration","scope":2579,"src":"591:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2535","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":2537,"nodeType":"UserDefinedTypeName","pathNode":{"id":2536,"name":"RecoverError","nameLocations":["591:12:17"],"nodeType":"IdentifierPath","referencedDeclaration":2535,"src":"591:12:17"},"referencedDeclaration":2535,"src":"591:12:17","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2535","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"src":"590:20:17"},"returnParameters":{"id":2540,"nodeType":"ParameterList","parameters":[],"src":"624:0:17"},"scope":2891,"src":"570:511:17","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2624,"nodeType":"Block","src":"2249:626:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2595,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2592,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2584,"src":"2263:9:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2593,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2273:6:17","memberName":"length","nodeType":"MemberAccess","src":"2263:16:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3635","id":2594,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2283:2:17","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"65"},"src":"2263:22:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2622,"nodeType":"Block","src":"2788:81:17","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":2616,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2818:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2615,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2810:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2614,"name":"address","nodeType":"ElementaryTypeName","src":"2810:7:17","typeDescriptions":{}}},"id":2617,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2810:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2618,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2535,"src":"2822:12:17","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2535_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2619,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2835:22:17","memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":2532,"src":"2822:35:17","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2535","typeString":"enum ECDSA.RecoverError"}}],"id":2620,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2809:49:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2535_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"functionReturnParameters":2591,"id":2621,"nodeType":"Return","src":"2802:56:17"}]},"id":2623,"nodeType":"IfStatement","src":"2259:610:17","trueBody":{"id":2613,"nodeType":"Block","src":"2287:495:17","statements":[{"assignments":[2597],"declarations":[{"constant":false,"id":2597,"mutability":"mutable","name":"r","nameLocation":"2309:1:17","nodeType":"VariableDeclaration","scope":2613,"src":"2301:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2596,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2301:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2598,"nodeType":"VariableDeclarationStatement","src":"2301:9:17"},{"assignments":[2600],"declarations":[{"constant":false,"id":2600,"mutability":"mutable","name":"s","nameLocation":"2332:1:17","nodeType":"VariableDeclaration","scope":2613,"src":"2324:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2599,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2324:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2601,"nodeType":"VariableDeclarationStatement","src":"2324:9:17"},{"assignments":[2603],"declarations":[{"constant":false,"id":2603,"mutability":"mutable","name":"v","nameLocation":"2353:1:17","nodeType":"VariableDeclaration","scope":2613,"src":"2347:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2602,"name":"uint8","nodeType":"ElementaryTypeName","src":"2347:5:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":2604,"nodeType":"VariableDeclarationStatement","src":"2347:7:17"},{"AST":{"nodeType":"YulBlock","src":"2555:171:17","statements":[{"nodeType":"YulAssignment","src":"2573:32:17","value":{"arguments":[{"arguments":[{"name":"signature","nodeType":"YulIdentifier","src":"2588:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"2599:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2584:3:17"},"nodeType":"YulFunctionCall","src":"2584:20:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2578:5:17"},"nodeType":"YulFunctionCall","src":"2578:27:17"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"2573:1:17"}]},{"nodeType":"YulAssignment","src":"2622:32:17","value":{"arguments":[{"arguments":[{"name":"signature","nodeType":"YulIdentifier","src":"2637:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"2648:4:17","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2633:3:17"},"nodeType":"YulFunctionCall","src":"2633:20:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2627:5:17"},"nodeType":"YulFunctionCall","src":"2627:27:17"},"variableNames":[{"name":"s","nodeType":"YulIdentifier","src":"2622:1:17"}]},{"nodeType":"YulAssignment","src":"2671:41:17","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2681:1:17","type":"","value":"0"},{"arguments":[{"arguments":[{"name":"signature","nodeType":"YulIdentifier","src":"2694:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"2705:4:17","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2690:3:17"},"nodeType":"YulFunctionCall","src":"2690:20:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2684:5:17"},"nodeType":"YulFunctionCall","src":"2684:27:17"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"2676:4:17"},"nodeType":"YulFunctionCall","src":"2676:36:17"},"variableNames":[{"name":"v","nodeType":"YulIdentifier","src":"2671:1:17"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2597,"isOffset":false,"isSlot":false,"src":"2573:1:17","valueSize":1},{"declaration":2600,"isOffset":false,"isSlot":false,"src":"2622:1:17","valueSize":1},{"declaration":2584,"isOffset":false,"isSlot":false,"src":"2588:9:17","valueSize":1},{"declaration":2584,"isOffset":false,"isSlot":false,"src":"2637:9:17","valueSize":1},{"declaration":2584,"isOffset":false,"isSlot":false,"src":"2694:9:17","valueSize":1},{"declaration":2603,"isOffset":false,"isSlot":false,"src":"2671:1:17","valueSize":1}],"id":2605,"nodeType":"InlineAssembly","src":"2546:180:17"},{"expression":{"arguments":[{"id":2607,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2582,"src":"2757:4:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2608,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2603,"src":"2763:1:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":2609,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2597,"src":"2766:1:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2610,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2600,"src":"2769:1:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2606,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[2625,2699,2793],"referencedDeclaration":2793,"src":"2746:10:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$2535_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError)"}},"id":2611,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2746:25:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2535_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"functionReturnParameters":2591,"id":2612,"nodeType":"Return","src":"2739:32:17"}]}}]},"documentation":{"id":2580,"nodeType":"StructuredDocumentation","src":"1087:1053:17","text":" @dev Returns the address that signed a hashed message (`hash`) with\n `signature` or error string. This address can then be used for verification purposes.\n The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {toEthSignedMessageHash} on it.\n Documentation for signature generation:\n - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\n _Available since v4.3._"},"id":2625,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"2154:10:17","nodeType":"FunctionDefinition","parameters":{"id":2585,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2582,"mutability":"mutable","name":"hash","nameLocation":"2173:4:17","nodeType":"VariableDeclaration","scope":2625,"src":"2165:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2581,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2165:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2584,"mutability":"mutable","name":"signature","nameLocation":"2192:9:17","nodeType":"VariableDeclaration","scope":2625,"src":"2179:22:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2583,"name":"bytes","nodeType":"ElementaryTypeName","src":"2179:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2164:38:17"},"returnParameters":{"id":2591,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2587,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2625,"src":"2226:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2586,"name":"address","nodeType":"ElementaryTypeName","src":"2226:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2590,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2625,"src":"2235:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2535","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":2589,"nodeType":"UserDefinedTypeName","pathNode":{"id":2588,"name":"RecoverError","nameLocations":["2235:12:17"],"nodeType":"IdentifierPath","referencedDeclaration":2535,"src":"2235:12:17"},"referencedDeclaration":2535,"src":"2235:12:17","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2535","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"src":"2225:23:17"},"scope":2891,"src":"2145:730:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2651,"nodeType":"Block","src":"3748:140:17","statements":[{"assignments":[2636,2639],"declarations":[{"constant":false,"id":2636,"mutability":"mutable","name":"recovered","nameLocation":"3767:9:17","nodeType":"VariableDeclaration","scope":2651,"src":"3759:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2635,"name":"address","nodeType":"ElementaryTypeName","src":"3759:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2639,"mutability":"mutable","name":"error","nameLocation":"3791:5:17","nodeType":"VariableDeclaration","scope":2651,"src":"3778:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2535","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":2638,"nodeType":"UserDefinedTypeName","pathNode":{"id":2637,"name":"RecoverError","nameLocations":["3778:12:17"],"nodeType":"IdentifierPath","referencedDeclaration":2535,"src":"3778:12:17"},"referencedDeclaration":2535,"src":"3778:12:17","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2535","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"id":2644,"initialValue":{"arguments":[{"id":2641,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2628,"src":"3811:4:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2642,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2630,"src":"3817:9:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2640,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[2625,2699,2793],"referencedDeclaration":2625,"src":"3800:10:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$_t_enum$_RecoverError_$2535_$","typeString":"function (bytes32,bytes memory) pure returns (address,enum ECDSA.RecoverError)"}},"id":2643,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3800:27:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2535_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"nodeType":"VariableDeclarationStatement","src":"3758:69:17"},{"expression":{"arguments":[{"id":2646,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2639,"src":"3849:5:17","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2535","typeString":"enum ECDSA.RecoverError"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$2535","typeString":"enum ECDSA.RecoverError"}],"id":2645,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2579,"src":"3837:11:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$2535_$returns$__$","typeString":"function (enum ECDSA.RecoverError) pure"}},"id":2647,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3837:18:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2648,"nodeType":"ExpressionStatement","src":"3837:18:17"},{"expression":{"id":2649,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2636,"src":"3872:9:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2634,"id":2650,"nodeType":"Return","src":"3865:16:17"}]},"documentation":{"id":2626,"nodeType":"StructuredDocumentation","src":"2881:775:17","text":" @dev Returns the address that signed a hashed message (`hash`) with\n `signature`. This address can then be used for verification purposes.\n The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {toEthSignedMessageHash} on it."},"id":2652,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"3670:7:17","nodeType":"FunctionDefinition","parameters":{"id":2631,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2628,"mutability":"mutable","name":"hash","nameLocation":"3686:4:17","nodeType":"VariableDeclaration","scope":2652,"src":"3678:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2627,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3678:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2630,"mutability":"mutable","name":"signature","nameLocation":"3705:9:17","nodeType":"VariableDeclaration","scope":2652,"src":"3692:22:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2629,"name":"bytes","nodeType":"ElementaryTypeName","src":"3692:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3677:38:17"},"returnParameters":{"id":2634,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2633,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2652,"src":"3739:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2632,"name":"address","nodeType":"ElementaryTypeName","src":"3739:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3738:9:17"},"scope":2891,"src":"3661:227:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2698,"nodeType":"Block","src":"4245:203:17","statements":[{"assignments":[2668],"declarations":[{"constant":false,"id":2668,"mutability":"mutable","name":"s","nameLocation":"4263:1:17","nodeType":"VariableDeclaration","scope":2698,"src":"4255:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2667,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4255:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2675,"initialValue":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2674,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2669,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2659,"src":"4267:2:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"arguments":[{"hexValue":"307837666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666","id":2672,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4280:66:17","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"},"value":"0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"}],"id":2671,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4272:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2670,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4272:7:17","typeDescriptions":{}}},"id":2673,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4272:75:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4267:80:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"4255:92:17"},{"assignments":[2677],"declarations":[{"constant":false,"id":2677,"mutability":"mutable","name":"v","nameLocation":"4363:1:17","nodeType":"VariableDeclaration","scope":2698,"src":"4357:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2676,"name":"uint8","nodeType":"ElementaryTypeName","src":"4357:5:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":2690,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2688,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2685,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2682,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2659,"src":"4382:2:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2681,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4374:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2680,"name":"uint256","nodeType":"ElementaryTypeName","src":"4374:7:17","typeDescriptions":{}}},"id":2683,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4374:11:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":2684,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4389:3:17","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"4374:18:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2686,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4373:20:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3237","id":2687,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4396:2:17","typeDescriptions":{"typeIdentifier":"t_rational_27_by_1","typeString":"int_const 27"},"value":"27"},"src":"4373:25:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2679,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4367:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":2678,"name":"uint8","nodeType":"ElementaryTypeName","src":"4367:5:17","typeDescriptions":{}}},"id":2689,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4367:32:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"4357:42:17"},{"expression":{"arguments":[{"id":2692,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2655,"src":"4427:4:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2693,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2677,"src":"4433:1:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":2694,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2657,"src":"4436:1:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2695,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2668,"src":"4439:1:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2691,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[2625,2699,2793],"referencedDeclaration":2793,"src":"4416:10:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$2535_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError)"}},"id":2696,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4416:25:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2535_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"functionReturnParameters":2666,"id":2697,"nodeType":"Return","src":"4409:32:17"}]},"documentation":{"id":2653,"nodeType":"StructuredDocumentation","src":"3894:243:17","text":" @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]\n _Available since v4.3._"},"id":2699,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"4151:10:17","nodeType":"FunctionDefinition","parameters":{"id":2660,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2655,"mutability":"mutable","name":"hash","nameLocation":"4170:4:17","nodeType":"VariableDeclaration","scope":2699,"src":"4162:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2654,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4162:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2657,"mutability":"mutable","name":"r","nameLocation":"4184:1:17","nodeType":"VariableDeclaration","scope":2699,"src":"4176:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2656,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4176:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2659,"mutability":"mutable","name":"vs","nameLocation":"4195:2:17","nodeType":"VariableDeclaration","scope":2699,"src":"4187:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2658,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4187:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4161:37:17"},"returnParameters":{"id":2666,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2662,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2699,"src":"4222:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2661,"name":"address","nodeType":"ElementaryTypeName","src":"4222:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2665,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2699,"src":"4231:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2535","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":2664,"nodeType":"UserDefinedTypeName","pathNode":{"id":2663,"name":"RecoverError","nameLocations":["4231:12:17"],"nodeType":"IdentifierPath","referencedDeclaration":2535,"src":"4231:12:17"},"referencedDeclaration":2535,"src":"4231:12:17","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2535","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"src":"4221:23:17"},"scope":2891,"src":"4142:306:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2728,"nodeType":"Block","src":"4699:136:17","statements":[{"assignments":[2712,2715],"declarations":[{"constant":false,"id":2712,"mutability":"mutable","name":"recovered","nameLocation":"4718:9:17","nodeType":"VariableDeclaration","scope":2728,"src":"4710:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2711,"name":"address","nodeType":"ElementaryTypeName","src":"4710:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2715,"mutability":"mutable","name":"error","nameLocation":"4742:5:17","nodeType":"VariableDeclaration","scope":2728,"src":"4729:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2535","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":2714,"nodeType":"UserDefinedTypeName","pathNode":{"id":2713,"name":"RecoverError","nameLocations":["4729:12:17"],"nodeType":"IdentifierPath","referencedDeclaration":2535,"src":"4729:12:17"},"referencedDeclaration":2535,"src":"4729:12:17","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2535","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"id":2721,"initialValue":{"arguments":[{"id":2717,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2702,"src":"4762:4:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2718,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2704,"src":"4768:1:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2719,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2706,"src":"4771:2:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2716,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[2625,2699,2793],"referencedDeclaration":2699,"src":"4751:10:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$2535_$","typeString":"function (bytes32,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError)"}},"id":2720,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4751:23:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2535_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"nodeType":"VariableDeclarationStatement","src":"4709:65:17"},{"expression":{"arguments":[{"id":2723,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2715,"src":"4796:5:17","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2535","typeString":"enum ECDSA.RecoverError"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$2535","typeString":"enum ECDSA.RecoverError"}],"id":2722,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2579,"src":"4784:11:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$2535_$returns$__$","typeString":"function (enum ECDSA.RecoverError) pure"}},"id":2724,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4784:18:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2725,"nodeType":"ExpressionStatement","src":"4784:18:17"},{"expression":{"id":2726,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2712,"src":"4819:9:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2710,"id":2727,"nodeType":"Return","src":"4812:16:17"}]},"documentation":{"id":2700,"nodeType":"StructuredDocumentation","src":"4454:154:17","text":" @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\n _Available since v4.2._"},"id":2729,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"4622:7:17","nodeType":"FunctionDefinition","parameters":{"id":2707,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2702,"mutability":"mutable","name":"hash","nameLocation":"4638:4:17","nodeType":"VariableDeclaration","scope":2729,"src":"4630:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2701,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4630:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2704,"mutability":"mutable","name":"r","nameLocation":"4652:1:17","nodeType":"VariableDeclaration","scope":2729,"src":"4644:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2703,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4644:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2706,"mutability":"mutable","name":"vs","nameLocation":"4663:2:17","nodeType":"VariableDeclaration","scope":2729,"src":"4655:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2705,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4655:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4629:37:17"},"returnParameters":{"id":2710,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2709,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2729,"src":"4690:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2708,"name":"address","nodeType":"ElementaryTypeName","src":"4690:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4689:9:17"},"scope":2891,"src":"4613:222:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2792,"nodeType":"Block","src":"5120:1345:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2751,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2748,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2738,"src":"6016:1:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2747,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6008:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2746,"name":"uint256","nodeType":"ElementaryTypeName","src":"6008:7:17","typeDescriptions":{}}},"id":2749,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6008:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307837464646464646464646464646464646464646464646464646464646464646463544353736453733353741343530314444464539324634363638314232304130","id":2750,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6021:66:17","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926418782139537452191302581570759080747168_by_1","typeString":"int_const 5789...(69 digits omitted)...7168"},"value":"0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"},"src":"6008:79:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2761,"nodeType":"IfStatement","src":"6004:161:17","trueBody":{"id":2760,"nodeType":"Block","src":"6089:76:17","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":2754,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6119:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2753,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6111:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2752,"name":"address","nodeType":"ElementaryTypeName","src":"6111:7:17","typeDescriptions":{}}},"id":2755,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6111:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2756,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2535,"src":"6123:12:17","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2535_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2757,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6136:17:17","memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":2533,"src":"6123:30:17","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2535","typeString":"enum ECDSA.RecoverError"}}],"id":2758,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6110:44:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2535_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"functionReturnParameters":2745,"id":2759,"nodeType":"Return","src":"6103:51:17"}]}},{"assignments":[2763],"declarations":[{"constant":false,"id":2763,"mutability":"mutable","name":"signer","nameLocation":"6267:6:17","nodeType":"VariableDeclaration","scope":2792,"src":"6259:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2762,"name":"address","nodeType":"ElementaryTypeName","src":"6259:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2770,"initialValue":{"arguments":[{"id":2765,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2732,"src":"6286:4:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2766,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2734,"src":"6292:1:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":2767,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2736,"src":"6295:1:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2768,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2738,"src":"6298:1:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2764,"name":"ecrecover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-6,"src":"6276:9:17","typeDescriptions":{"typeIdentifier":"t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":2769,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6276:24:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6259:41:17"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2776,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2771,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2763,"src":"6314:6:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2774,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6332:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2773,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6324:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2772,"name":"address","nodeType":"ElementaryTypeName","src":"6324:7:17","typeDescriptions":{}}},"id":2775,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6324:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6314:20:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2786,"nodeType":"IfStatement","src":"6310:101:17","trueBody":{"id":2785,"nodeType":"Block","src":"6336:75:17","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":2779,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6366:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2778,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6358:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2777,"name":"address","nodeType":"ElementaryTypeName","src":"6358:7:17","typeDescriptions":{}}},"id":2780,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6358:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2781,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2535,"src":"6370:12:17","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2535_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2782,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6383:16:17","memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":2531,"src":"6370:29:17","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2535","typeString":"enum ECDSA.RecoverError"}}],"id":2783,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6357:43:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2535_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"functionReturnParameters":2745,"id":2784,"nodeType":"Return","src":"6350:50:17"}]}},{"expression":{"components":[{"id":2787,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2763,"src":"6429:6:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2788,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2535,"src":"6437:12:17","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2535_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2789,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6450:7:17","memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":2530,"src":"6437:20:17","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2535","typeString":"enum ECDSA.RecoverError"}}],"id":2790,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6428:30:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2535_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"functionReturnParameters":2745,"id":2791,"nodeType":"Return","src":"6421:37:17"}]},"documentation":{"id":2730,"nodeType":"StructuredDocumentation","src":"4841:163:17","text":" @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n `r` and `s` signature fields separately.\n _Available since v4.3._"},"id":2793,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"5018:10:17","nodeType":"FunctionDefinition","parameters":{"id":2739,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2732,"mutability":"mutable","name":"hash","nameLocation":"5037:4:17","nodeType":"VariableDeclaration","scope":2793,"src":"5029:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2731,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5029:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2734,"mutability":"mutable","name":"v","nameLocation":"5049:1:17","nodeType":"VariableDeclaration","scope":2793,"src":"5043:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2733,"name":"uint8","nodeType":"ElementaryTypeName","src":"5043:5:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":2736,"mutability":"mutable","name":"r","nameLocation":"5060:1:17","nodeType":"VariableDeclaration","scope":2793,"src":"5052:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2735,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5052:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2738,"mutability":"mutable","name":"s","nameLocation":"5071:1:17","nodeType":"VariableDeclaration","scope":2793,"src":"5063:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2737,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5063:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5028:45:17"},"returnParameters":{"id":2745,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2741,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2793,"src":"5097:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2740,"name":"address","nodeType":"ElementaryTypeName","src":"5097:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2744,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2793,"src":"5106:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2535","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":2743,"nodeType":"UserDefinedTypeName","pathNode":{"id":2742,"name":"RecoverError","nameLocations":["5106:12:17"],"nodeType":"IdentifierPath","referencedDeclaration":2535,"src":"5106:12:17"},"referencedDeclaration":2535,"src":"5106:12:17","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2535","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"src":"5096:23:17"},"scope":2891,"src":"5009:1456:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2825,"nodeType":"Block","src":"6692:138:17","statements":[{"assignments":[2808,2811],"declarations":[{"constant":false,"id":2808,"mutability":"mutable","name":"recovered","nameLocation":"6711:9:17","nodeType":"VariableDeclaration","scope":2825,"src":"6703:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2807,"name":"address","nodeType":"ElementaryTypeName","src":"6703:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2811,"mutability":"mutable","name":"error","nameLocation":"6735:5:17","nodeType":"VariableDeclaration","scope":2825,"src":"6722:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2535","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":2810,"nodeType":"UserDefinedTypeName","pathNode":{"id":2809,"name":"RecoverError","nameLocations":["6722:12:17"],"nodeType":"IdentifierPath","referencedDeclaration":2535,"src":"6722:12:17"},"referencedDeclaration":2535,"src":"6722:12:17","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2535","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"id":2818,"initialValue":{"arguments":[{"id":2813,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2796,"src":"6755:4:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2814,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2798,"src":"6761:1:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":2815,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2800,"src":"6764:1:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2816,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2802,"src":"6767:1:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2812,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[2625,2699,2793],"referencedDeclaration":2793,"src":"6744:10:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$2535_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError)"}},"id":2817,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6744:25:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2535_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"nodeType":"VariableDeclarationStatement","src":"6702:67:17"},{"expression":{"arguments":[{"id":2820,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2811,"src":"6791:5:17","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2535","typeString":"enum ECDSA.RecoverError"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$2535","typeString":"enum ECDSA.RecoverError"}],"id":2819,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2579,"src":"6779:11:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$2535_$returns$__$","typeString":"function (enum ECDSA.RecoverError) pure"}},"id":2821,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6779:18:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2822,"nodeType":"ExpressionStatement","src":"6779:18:17"},{"expression":{"id":2823,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2808,"src":"6814:9:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2806,"id":2824,"nodeType":"Return","src":"6807:16:17"}]},"documentation":{"id":2794,"nodeType":"StructuredDocumentation","src":"6471:122:17","text":" @dev Overload of {ECDSA-recover} that receives the `v`,\n `r` and `s` signature fields separately."},"id":2826,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"6607:7:17","nodeType":"FunctionDefinition","parameters":{"id":2803,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2796,"mutability":"mutable","name":"hash","nameLocation":"6623:4:17","nodeType":"VariableDeclaration","scope":2826,"src":"6615:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2795,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6615:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2798,"mutability":"mutable","name":"v","nameLocation":"6635:1:17","nodeType":"VariableDeclaration","scope":2826,"src":"6629:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2797,"name":"uint8","nodeType":"ElementaryTypeName","src":"6629:5:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":2800,"mutability":"mutable","name":"r","nameLocation":"6646:1:17","nodeType":"VariableDeclaration","scope":2826,"src":"6638:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2799,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6638:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2802,"mutability":"mutable","name":"s","nameLocation":"6657:1:17","nodeType":"VariableDeclaration","scope":2826,"src":"6649:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2801,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6649:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6614:45:17"},"returnParameters":{"id":2806,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2805,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2826,"src":"6683:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2804,"name":"address","nodeType":"ElementaryTypeName","src":"6683:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6682:9:17"},"scope":2891,"src":"6598:232:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2835,"nodeType":"Block","src":"7206:310:17","statements":[{"AST":{"nodeType":"YulBlock","src":"7362:148:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7383:4:17","type":"","value":"0x00"},{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a3332","kind":"string","nodeType":"YulLiteral","src":"7389:34:17","type":"","value":"\u0019Ethereum Signed Message:\n32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7376:6:17"},"nodeType":"YulFunctionCall","src":"7376:48:17"},"nodeType":"YulExpressionStatement","src":"7376:48:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7444:4:17","type":"","value":"0x1c"},{"name":"hash","nodeType":"YulIdentifier","src":"7450:4:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7437:6:17"},"nodeType":"YulFunctionCall","src":"7437:18:17"},"nodeType":"YulExpressionStatement","src":"7437:18:17"},{"nodeType":"YulAssignment","src":"7468:32:17","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7489:4:17","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"7495:4:17","type":"","value":"0x3c"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"7479:9:17"},"nodeType":"YulFunctionCall","src":"7479:21:17"},"variableNames":[{"name":"message","nodeType":"YulIdentifier","src":"7468:7:17"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2829,"isOffset":false,"isSlot":false,"src":"7450:4:17","valueSize":1},{"declaration":2832,"isOffset":false,"isSlot":false,"src":"7468:7:17","valueSize":1}],"id":2834,"nodeType":"InlineAssembly","src":"7353:157:17"}]},"documentation":{"id":2827,"nodeType":"StructuredDocumentation","src":"6836:279:17","text":" @dev Returns an Ethereum Signed Message, created from a `hash`. This\n produces hash corresponding to the one signed with the\n https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\n JSON-RPC method as part of EIP-191.\n See {recover}."},"id":2836,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"7129:22:17","nodeType":"FunctionDefinition","parameters":{"id":2830,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2829,"mutability":"mutable","name":"hash","nameLocation":"7160:4:17","nodeType":"VariableDeclaration","scope":2836,"src":"7152:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2828,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7152:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7151:14:17"},"returnParameters":{"id":2833,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2832,"mutability":"mutable","name":"message","nameLocation":"7197:7:17","nodeType":"VariableDeclaration","scope":2836,"src":"7189:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2831,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7189:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7188:17:17"},"scope":2891,"src":"7120:396:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2857,"nodeType":"Block","src":"7881:116:17","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a","id":2847,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7925:32:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},"value":"\u0019Ethereum Signed Message:\n"},{"arguments":[{"expression":{"id":2850,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2839,"src":"7976:1:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2851,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7978:6:17","memberName":"length","nodeType":"MemberAccess","src":"7976:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2848,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2525,"src":"7959:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Strings_$2525_$","typeString":"type(library Strings)"}},"id":2849,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7967:8:17","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":2355,"src":"7959:16:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":2852,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7959:26:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2853,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2839,"src":"7987:1:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2845,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"7908:3:17","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2846,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7912:12:17","memberName":"encodePacked","nodeType":"MemberAccess","src":"7908:16:17","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2854,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7908:81:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2844,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"7898:9:17","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2855,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7898:92:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2843,"id":2856,"nodeType":"Return","src":"7891:99:17"}]},"documentation":{"id":2837,"nodeType":"StructuredDocumentation","src":"7522:274:17","text":" @dev Returns an Ethereum Signed Message, created from `s`. This\n produces hash corresponding to the one signed with the\n https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\n JSON-RPC method as part of EIP-191.\n See {recover}."},"id":2858,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"7810:22:17","nodeType":"FunctionDefinition","parameters":{"id":2840,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2839,"mutability":"mutable","name":"s","nameLocation":"7846:1:17","nodeType":"VariableDeclaration","scope":2858,"src":"7833:14:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2838,"name":"bytes","nodeType":"ElementaryTypeName","src":"7833:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7832:16:17"},"returnParameters":{"id":2843,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2842,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2858,"src":"7872:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2841,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7872:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7871:9:17"},"scope":2891,"src":"7801:196:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2869,"nodeType":"Block","src":"8443:290:17","statements":[{"AST":{"nodeType":"YulBlock","src":"8505:222:17","statements":[{"nodeType":"YulVariableDeclaration","src":"8519:22:17","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8536:4:17","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8530:5:17"},"nodeType":"YulFunctionCall","src":"8530:11:17"},"variables":[{"name":"ptr","nodeType":"YulTypedName","src":"8523:3:17","type":""}]},{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"8561:3:17"},{"hexValue":"1901","kind":"string","nodeType":"YulLiteral","src":"8566:10:17","type":"","value":"\u0019\u0001"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8554:6:17"},"nodeType":"YulFunctionCall","src":"8554:23:17"},"nodeType":"YulExpressionStatement","src":"8554:23:17"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"8601:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"8606:4:17","type":"","value":"0x02"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8597:3:17"},"nodeType":"YulFunctionCall","src":"8597:14:17"},{"name":"domainSeparator","nodeType":"YulIdentifier","src":"8613:15:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8590:6:17"},"nodeType":"YulFunctionCall","src":"8590:39:17"},"nodeType":"YulExpressionStatement","src":"8590:39:17"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"8653:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"8658:4:17","type":"","value":"0x22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8649:3:17"},"nodeType":"YulFunctionCall","src":"8649:14:17"},{"name":"structHash","nodeType":"YulIdentifier","src":"8665:10:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8642:6:17"},"nodeType":"YulFunctionCall","src":"8642:34:17"},"nodeType":"YulExpressionStatement","src":"8642:34:17"},{"nodeType":"YulAssignment","src":"8689:28:17","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"8707:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"8712:4:17","type":"","value":"0x42"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"8697:9:17"},"nodeType":"YulFunctionCall","src":"8697:20:17"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"8689:4:17"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2866,"isOffset":false,"isSlot":false,"src":"8689:4:17","valueSize":1},{"declaration":2861,"isOffset":false,"isSlot":false,"src":"8613:15:17","valueSize":1},{"declaration":2863,"isOffset":false,"isSlot":false,"src":"8665:10:17","valueSize":1}],"id":2868,"nodeType":"InlineAssembly","src":"8496:231:17"}]},"documentation":{"id":2859,"nodeType":"StructuredDocumentation","src":"8003:328:17","text":" @dev Returns an Ethereum Signed Typed Data, created from a\n `domainSeparator` and a `structHash`. This produces hash corresponding\n to the one signed with the\n https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`]\n JSON-RPC method as part of EIP-712.\n See {recover}."},"id":2870,"implemented":true,"kind":"function","modifiers":[],"name":"toTypedDataHash","nameLocation":"8345:15:17","nodeType":"FunctionDefinition","parameters":{"id":2864,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2861,"mutability":"mutable","name":"domainSeparator","nameLocation":"8369:15:17","nodeType":"VariableDeclaration","scope":2870,"src":"8361:23:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2860,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8361:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2863,"mutability":"mutable","name":"structHash","nameLocation":"8394:10:17","nodeType":"VariableDeclaration","scope":2870,"src":"8386:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2862,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8386:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"8360:45:17"},"returnParameters":{"id":2867,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2866,"mutability":"mutable","name":"data","nameLocation":"8437:4:17","nodeType":"VariableDeclaration","scope":2870,"src":"8429:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2865,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8429:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"8428:14:17"},"scope":2891,"src":"8336:397:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2889,"nodeType":"Block","src":"9048:80:17","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"1900","id":2883,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9092:10:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a","typeString":"literal_string hex\"1900\""},"value":"\u0019\u0000"},{"id":2884,"name":"validator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2873,"src":"9104:9:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2885,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2875,"src":"9115:4:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a","typeString":"literal_string hex\"1900\""},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2881,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"9075:3:17","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2882,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9079:12:17","memberName":"encodePacked","nodeType":"MemberAccess","src":"9075:16:17","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2886,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9075:45:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2880,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"9065:9:17","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2887,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9065:56:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2879,"id":2888,"nodeType":"Return","src":"9058:63:17"}]},"documentation":{"id":2871,"nodeType":"StructuredDocumentation","src":"8739:193:17","text":" @dev Returns an Ethereum Signed Data with intended validator, created from a\n `validator` and `data` according to the version 0 of EIP-191.\n See {recover}."},"id":2890,"implemented":true,"kind":"function","modifiers":[],"name":"toDataWithIntendedValidatorHash","nameLocation":"8946:31:17","nodeType":"FunctionDefinition","parameters":{"id":2876,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2873,"mutability":"mutable","name":"validator","nameLocation":"8986:9:17","nodeType":"VariableDeclaration","scope":2890,"src":"8978:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2872,"name":"address","nodeType":"ElementaryTypeName","src":"8978:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2875,"mutability":"mutable","name":"data","nameLocation":"9010:4:17","nodeType":"VariableDeclaration","scope":2890,"src":"8997:17:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2874,"name":"bytes","nodeType":"ElementaryTypeName","src":"8997:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8977:38:17"},"returnParameters":{"id":2879,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2878,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2890,"src":"9039:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2877,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9039:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"9038:9:17"},"scope":2891,"src":"8937:191:17","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2892,"src":"369:8761:17","usedErrors":[]}],"src":"112:9019:17"},"id":17},"@openzeppelin/contracts/utils/cryptography/EIP712.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/EIP712.sol","exportedSymbols":{"ECDSA":[2891],"EIP712":[3095],"IERC5267":[215],"Math":[3961],"ShortString":[1975],"ShortStrings":[2186],"SignedMath":[5607],"StorageSlot":[2296],"Strings":[2525]},"id":3096,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2893,"literals":["solidity","^","0.8",".8"],"nodeType":"PragmaDirective","src":"113:23:18"},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","file":"./ECDSA.sol","id":2894,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3096,"sourceUnit":2892,"src":"138:21:18","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/ShortStrings.sol","file":"../ShortStrings.sol","id":2895,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3096,"sourceUnit":2187,"src":"160:29:18","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC5267.sol","file":"../../interfaces/IERC5267.sol","id":2896,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3096,"sourceUnit":216,"src":"190:39:18","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":2898,"name":"IERC5267","nameLocations":["1837:8:18"],"nodeType":"IdentifierPath","referencedDeclaration":215,"src":"1837:8:18"},"id":2899,"nodeType":"InheritanceSpecifier","src":"1837:8:18"}],"canonicalName":"EIP712","contractDependencies":[],"contractKind":"contract","documentation":{"id":2897,"nodeType":"StructuredDocumentation","src":"231:1577:18","text":" @dev https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data.\n The encoding specified in the EIP is very generic, and such a generic implementation in Solidity is not feasible,\n thus this contract does not implement the encoding itself. Protocols need to implement the type-specific encoding\n they need in their contracts using a combination of `abi.encode` and `keccak256`.\n This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding\n scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA\n ({_hashTypedDataV4}).\n The implementation of the domain separator was designed to be as efficient as possible while still properly updating\n the chain id to protect against replay attacks on an eventual fork of the chain.\n NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method\n https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask].\n NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain\n separator of the implementation contract. This will cause the `_domainSeparatorV4` function to always rebuild the\n separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\n _Available since v3.4._\n @custom:oz-upgrades-unsafe-allow state-variable-immutable state-variable-assignment"},"fullyImplemented":true,"id":3095,"linearizedBaseContracts":[3095,215],"name":"EIP712","nameLocation":"1827:6:18","nodeType":"ContractDefinition","nodes":[{"global":false,"id":2901,"libraryName":{"id":2900,"name":"ShortStrings","nameLocations":["1858:12:18"],"nodeType":"IdentifierPath","referencedDeclaration":2186,"src":"1858:12:18"},"nodeType":"UsingForDirective","src":"1852:25:18"},{"constant":true,"id":2906,"mutability":"constant","name":"_TYPE_HASH","nameLocation":"1908:10:18","nodeType":"VariableDeclaration","scope":3095,"src":"1883:141:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2902,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1883:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429","id":2904,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1939:84:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f","typeString":"literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""},"value":"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f","typeString":"literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""}],"id":2903,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1929:9:18","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2905,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1929:95:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":2908,"mutability":"immutable","name":"_cachedDomainSeparator","nameLocation":"2249:22:18","nodeType":"VariableDeclaration","scope":3095,"src":"2223:48:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2907,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2223:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":2910,"mutability":"immutable","name":"_cachedChainId","nameLocation":"2303:14:18","nodeType":"VariableDeclaration","scope":3095,"src":"2277:40:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2909,"name":"uint256","nodeType":"ElementaryTypeName","src":"2277:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":2912,"mutability":"immutable","name":"_cachedThis","nameLocation":"2349:11:18","nodeType":"VariableDeclaration","scope":3095,"src":"2323:37:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2911,"name":"address","nodeType":"ElementaryTypeName","src":"2323:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"constant":false,"id":2914,"mutability":"immutable","name":"_hashedName","nameLocation":"2393:11:18","nodeType":"VariableDeclaration","scope":3095,"src":"2367:37:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2913,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2367:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":2916,"mutability":"immutable","name":"_hashedVersion","nameLocation":"2436:14:18","nodeType":"VariableDeclaration","scope":3095,"src":"2410:40:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2915,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2410:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":2919,"mutability":"immutable","name":"_name","nameLocation":"2487:5:18","nodeType":"VariableDeclaration","scope":3095,"src":"2457:35:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1975","typeString":"ShortString"},"typeName":{"id":2918,"nodeType":"UserDefinedTypeName","pathNode":{"id":2917,"name":"ShortString","nameLocations":["2457:11:18"],"nodeType":"IdentifierPath","referencedDeclaration":1975,"src":"2457:11:18"},"referencedDeclaration":1975,"src":"2457:11:18","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1975","typeString":"ShortString"}},"visibility":"private"},{"constant":false,"id":2922,"mutability":"immutable","name":"_version","nameLocation":"2528:8:18","nodeType":"VariableDeclaration","scope":3095,"src":"2498:38:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1975","typeString":"ShortString"},"typeName":{"id":2921,"nodeType":"UserDefinedTypeName","pathNode":{"id":2920,"name":"ShortString","nameLocations":["2498:11:18"],"nodeType":"IdentifierPath","referencedDeclaration":1975,"src":"2498:11:18"},"referencedDeclaration":1975,"src":"2498:11:18","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1975","typeString":"ShortString"}},"visibility":"private"},{"constant":false,"id":2924,"mutability":"mutable","name":"_nameFallback","nameLocation":"2557:13:18","nodeType":"VariableDeclaration","scope":3095,"src":"2542:28:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":2923,"name":"string","nodeType":"ElementaryTypeName","src":"2542:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":2926,"mutability":"mutable","name":"_versionFallback","nameLocation":"2591:16:18","nodeType":"VariableDeclaration","scope":3095,"src":"2576:31:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":2925,"name":"string","nodeType":"ElementaryTypeName","src":"2576:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":2983,"nodeType":"Block","src":"3233:376:18","statements":[{"expression":{"id":2939,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2934,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2919,"src":"3243:5:18","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1975","typeString":"ShortString"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2937,"name":"_nameFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2924,"src":"3282:13:18","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":2935,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2929,"src":"3251:4:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":2936,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3256:25:18","memberName":"toShortStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":2127,"src":"3251:30:18","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_storage_ptr_$returns$_t_userDefinedValueType$_ShortString_$1975_$attached_to$_t_string_memory_ptr_$","typeString":"function (string memory,string storage pointer) returns (ShortString)"}},"id":2938,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3251:45:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1975","typeString":"ShortString"}},"src":"3243:53:18","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1975","typeString":"ShortString"}},"id":2940,"nodeType":"ExpressionStatement","src":"3243:53:18"},{"expression":{"id":2946,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2941,"name":"_version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2922,"src":"3306:8:18","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1975","typeString":"ShortString"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2944,"name":"_versionFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2926,"src":"3351:16:18","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":2942,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2931,"src":"3317:7:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":2943,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3325:25:18","memberName":"toShortStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":2127,"src":"3317:33:18","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_storage_ptr_$returns$_t_userDefinedValueType$_ShortString_$1975_$attached_to$_t_string_memory_ptr_$","typeString":"function (string memory,string storage pointer) returns (ShortString)"}},"id":2945,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3317:51:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1975","typeString":"ShortString"}},"src":"3306:62:18","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1975","typeString":"ShortString"}},"id":2947,"nodeType":"ExpressionStatement","src":"3306:62:18"},{"expression":{"id":2955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2948,"name":"_hashedName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2914,"src":"3378:11:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":2952,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2929,"src":"3408:4:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2951,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3402:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2950,"name":"bytes","nodeType":"ElementaryTypeName","src":"3402:5:18","typeDescriptions":{}}},"id":2953,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3402:11:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2949,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3392:9:18","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2954,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3392:22:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3378:36:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2956,"nodeType":"ExpressionStatement","src":"3378:36:18"},{"expression":{"id":2964,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2957,"name":"_hashedVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2916,"src":"3424:14:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":2961,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2931,"src":"3457:7:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2960,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3451:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2959,"name":"bytes","nodeType":"ElementaryTypeName","src":"3451:5:18","typeDescriptions":{}}},"id":2962,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3451:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2958,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3441:9:18","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2963,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3441:25:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3424:42:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2965,"nodeType":"ExpressionStatement","src":"3424:42:18"},{"expression":{"id":2969,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2966,"name":"_cachedChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2910,"src":"3477:14:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":2967,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3494:5:18","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2968,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3500:7:18","memberName":"chainid","nodeType":"MemberAccess","src":"3494:13:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3477:30:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2970,"nodeType":"ExpressionStatement","src":"3477:30:18"},{"expression":{"id":2974,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2971,"name":"_cachedDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2908,"src":"3517:22:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"id":2972,"name":"_buildDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3031,"src":"3542:21:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":2973,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3542:23:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3517:48:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2975,"nodeType":"ExpressionStatement","src":"3517:48:18"},{"expression":{"id":2981,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2976,"name":"_cachedThis","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2912,"src":"3575:11:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2979,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3597:4:18","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$3095","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$3095","typeString":"contract EIP712"}],"id":2978,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3589:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2977,"name":"address","nodeType":"ElementaryTypeName","src":"3589:7:18","typeDescriptions":{}}},"id":2980,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3589:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3575:27:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2982,"nodeType":"ExpressionStatement","src":"3575:27:18"}]},"documentation":{"id":2927,"nodeType":"StructuredDocumentation","src":"2614:559:18","text":" @dev Initializes the domain separator and parameter caches.\n The meaning of `name` and `version` is specified in\n https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP 712]:\n - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol.\n - `version`: the current major version of the signing domain.\n NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart\n contract upgrade]."},"id":2984,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":2932,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2929,"mutability":"mutable","name":"name","nameLocation":"3204:4:18","nodeType":"VariableDeclaration","scope":2984,"src":"3190:18:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2928,"name":"string","nodeType":"ElementaryTypeName","src":"3190:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2931,"mutability":"mutable","name":"version","nameLocation":"3224:7:18","nodeType":"VariableDeclaration","scope":2984,"src":"3210:21:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2930,"name":"string","nodeType":"ElementaryTypeName","src":"3210:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3189:43:18"},"returnParameters":{"id":2933,"nodeType":"ParameterList","parameters":[],"src":"3233:0:18"},"scope":3095,"src":"3178:431:18","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3009,"nodeType":"Block","src":"3757:200:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3000,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2995,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2992,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3779:4:18","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$3095","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$3095","typeString":"contract EIP712"}],"id":2991,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3771:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2990,"name":"address","nodeType":"ElementaryTypeName","src":"3771:7:18","typeDescriptions":{}}},"id":2993,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3771:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2994,"name":"_cachedThis","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2912,"src":"3788:11:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3771:28:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2999,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2996,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3803:5:18","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2997,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3809:7:18","memberName":"chainid","nodeType":"MemberAccess","src":"3803:13:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2998,"name":"_cachedChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2910,"src":"3820:14:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3803:31:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3771:63:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3007,"nodeType":"Block","src":"3896:55:18","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":3004,"name":"_buildDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3031,"src":"3917:21:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":3005,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3917:23:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2989,"id":3006,"nodeType":"Return","src":"3910:30:18"}]},"id":3008,"nodeType":"IfStatement","src":"3767:184:18","trueBody":{"id":3003,"nodeType":"Block","src":"3836:54:18","statements":[{"expression":{"id":3001,"name":"_cachedDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2908,"src":"3857:22:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2989,"id":3002,"nodeType":"Return","src":"3850:29:18"}]}}]},"documentation":{"id":2985,"nodeType":"StructuredDocumentation","src":"3615:75:18","text":" @dev Returns the domain separator for the current chain."},"id":3010,"implemented":true,"kind":"function","modifiers":[],"name":"_domainSeparatorV4","nameLocation":"3704:18:18","nodeType":"FunctionDefinition","parameters":{"id":2986,"nodeType":"ParameterList","parameters":[],"src":"3722:2:18"},"returnParameters":{"id":2989,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2988,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3010,"src":"3748:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2987,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3748:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3747:9:18"},"scope":3095,"src":"3695:262:18","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3030,"nodeType":"Block","src":"4027:116:18","statements":[{"expression":{"arguments":[{"arguments":[{"id":3018,"name":"_TYPE_HASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2906,"src":"4065:10:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3019,"name":"_hashedName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2914,"src":"4077:11:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3020,"name":"_hashedVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2916,"src":"4090:14:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":3021,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4106:5:18","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3022,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4112:7:18","memberName":"chainid","nodeType":"MemberAccess","src":"4106:13:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":3025,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4129:4:18","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$3095","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$3095","typeString":"contract EIP712"}],"id":3024,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4121:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3023,"name":"address","nodeType":"ElementaryTypeName","src":"4121:7:18","typeDescriptions":{}}},"id":3026,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4121:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":3016,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4054:3:18","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3017,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4058:6:18","memberName":"encode","nodeType":"MemberAccess","src":"4054:10:18","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3027,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4054:81:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3015,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4044:9:18","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3028,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4044:92:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3014,"id":3029,"nodeType":"Return","src":"4037:99:18"}]},"id":3031,"implemented":true,"kind":"function","modifiers":[],"name":"_buildDomainSeparator","nameLocation":"3972:21:18","nodeType":"FunctionDefinition","parameters":{"id":3011,"nodeType":"ParameterList","parameters":[],"src":"3993:2:18"},"returnParameters":{"id":3014,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3013,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3031,"src":"4018:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3012,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4018:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4017:9:18"},"scope":3095,"src":"3963:180:18","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":3046,"nodeType":"Block","src":"4854:79:18","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":3041,"name":"_domainSeparatorV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3010,"src":"4893:18:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":3042,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4893:20:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3043,"name":"structHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3034,"src":"4915:10:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":3039,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2891,"src":"4871:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ECDSA_$2891_$","typeString":"type(library ECDSA)"}},"id":3040,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4877:15:18","memberName":"toTypedDataHash","nodeType":"MemberAccess","referencedDeclaration":2870,"src":"4871:21:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":3044,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4871:55:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3038,"id":3045,"nodeType":"Return","src":"4864:62:18"}]},"documentation":{"id":3032,"nodeType":"StructuredDocumentation","src":"4149:614:18","text":" @dev Given an already https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct[hashed struct], this\n function returns the hash of the fully encoded EIP712 message for this domain.\n This hash can be used together with {ECDSA-recover} to obtain the signer of a message. For example:\n ```solidity\n bytes32 digest = _hashTypedDataV4(keccak256(abi.encode(\n     keccak256(\"Mail(address to,string contents)\"),\n     mailTo,\n     keccak256(bytes(mailContents))\n )));\n address signer = ECDSA.recover(digest, signature);\n ```"},"id":3047,"implemented":true,"kind":"function","modifiers":[],"name":"_hashTypedDataV4","nameLocation":"4777:16:18","nodeType":"FunctionDefinition","parameters":{"id":3035,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3034,"mutability":"mutable","name":"structHash","nameLocation":"4802:10:18","nodeType":"VariableDeclaration","scope":3047,"src":"4794:18:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3033,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4794:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4793:20:18"},"returnParameters":{"id":3038,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3037,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3047,"src":"4845:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3036,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4845:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4844:9:18"},"scope":3095,"src":"4768:165:18","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[214],"body":{"id":3093,"nodeType":"Block","src":"5366:288:18","statements":[{"expression":{"components":[{"hexValue":"0f","id":3067,"isConstant":false,"isLValue":false,"isPure":true,"kind":"hexString","lValueRequested":false,"nodeType":"Literal","src":"5397:7:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_3d725c5ee53025f027da36bea8d3af3b6a3e9d2d1542d47c162631de48e66c1c","typeString":"literal_string hex\"0f\""},"value":"\u000f"},{"arguments":[{"id":3070,"name":"_nameFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2924,"src":"5454:13:18","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":3068,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2919,"src":"5427:5:18","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1975","typeString":"ShortString"}},"id":3069,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5433:20:18","memberName":"toStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":2154,"src":"5427:26:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$1975_$_t_string_storage_ptr_$returns$_t_string_memory_ptr_$attached_to$_t_userDefinedValueType$_ShortString_$1975_$","typeString":"function (ShortString,string storage pointer) pure returns (string memory)"}},"id":3071,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5427:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[{"id":3074,"name":"_versionFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2926,"src":"5512:16:18","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":3072,"name":"_version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2922,"src":"5482:8:18","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1975","typeString":"ShortString"}},"id":3073,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5491:20:18","memberName":"toStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":2154,"src":"5482:29:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$1975_$_t_string_storage_ptr_$returns$_t_string_memory_ptr_$attached_to$_t_userDefinedValueType$_ShortString_$1975_$","typeString":"function (ShortString,string storage pointer) pure returns (string memory)"}},"id":3075,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5482:47:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"id":3076,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"5543:5:18","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3077,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5549:7:18","memberName":"chainid","nodeType":"MemberAccess","src":"5543:13:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":3080,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5578:4:18","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$3095","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$3095","typeString":"contract EIP712"}],"id":3079,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5570:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3078,"name":"address","nodeType":"ElementaryTypeName","src":"5570:7:18","typeDescriptions":{}}},"id":3081,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5570:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":3084,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5605:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3083,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5597:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3082,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5597:7:18","typeDescriptions":{}}},"id":3085,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5597:10:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"hexValue":"30","id":3089,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5635:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3088,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"5621:13:18","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":3086,"name":"uint256","nodeType":"ElementaryTypeName","src":"5625:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3087,"nodeType":"ArrayTypeName","src":"5625:9:18","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":3090,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5621:16:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"id":3091,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5383:264:18","typeDescriptions":{"typeIdentifier":"t_tuple$_t_stringliteral_3d725c5ee53025f027da36bea8d3af3b6a3e9d2d1542d47c162631de48e66c1c_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_address_$_t_bytes32_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(literal_string hex\"0f\",string memory,string memory,uint256,address,bytes32,uint256[] memory)"}},"functionReturnParameters":3066,"id":3092,"nodeType":"Return","src":"5376:271:18"}]},"documentation":{"id":3048,"nodeType":"StructuredDocumentation","src":"4939:77:18","text":" @dev See {EIP-5267}.\n _Available since v4.9._"},"functionSelector":"84b0196e","id":3094,"implemented":true,"kind":"function","modifiers":[],"name":"eip712Domain","nameLocation":"5030:12:18","nodeType":"FunctionDefinition","overrides":{"id":3050,"nodeType":"OverrideSpecifier","overrides":[],"src":"5097:8:18"},"parameters":{"id":3049,"nodeType":"ParameterList","parameters":[],"src":"5042:2:18"},"returnParameters":{"id":3066,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3052,"mutability":"mutable","name":"fields","nameLocation":"5143:6:18","nodeType":"VariableDeclaration","scope":3094,"src":"5136:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":3051,"name":"bytes1","nodeType":"ElementaryTypeName","src":"5136:6:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"},{"constant":false,"id":3054,"mutability":"mutable","name":"name","nameLocation":"5177:4:18","nodeType":"VariableDeclaration","scope":3094,"src":"5163:18:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3053,"name":"string","nodeType":"ElementaryTypeName","src":"5163:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3056,"mutability":"mutable","name":"version","nameLocation":"5209:7:18","nodeType":"VariableDeclaration","scope":3094,"src":"5195:21:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3055,"name":"string","nodeType":"ElementaryTypeName","src":"5195:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3058,"mutability":"mutable","name":"chainId","nameLocation":"5238:7:18","nodeType":"VariableDeclaration","scope":3094,"src":"5230:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3057,"name":"uint256","nodeType":"ElementaryTypeName","src":"5230:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3060,"mutability":"mutable","name":"verifyingContract","nameLocation":"5267:17:18","nodeType":"VariableDeclaration","scope":3094,"src":"5259:25:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3059,"name":"address","nodeType":"ElementaryTypeName","src":"5259:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3062,"mutability":"mutable","name":"salt","nameLocation":"5306:4:18","nodeType":"VariableDeclaration","scope":3094,"src":"5298:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3061,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5298:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3065,"mutability":"mutable","name":"extensions","nameLocation":"5341:10:18","nodeType":"VariableDeclaration","scope":3094,"src":"5324:27:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3063,"name":"uint256","nodeType":"ElementaryTypeName","src":"5324:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3064,"nodeType":"ArrayTypeName","src":"5324:9:18","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"5122:239:18"},"scope":3095,"src":"5021:633:18","stateMutability":"view","virtual":true,"visibility":"public"}],"scope":3096,"src":"1809:3847:18","usedErrors":[1983,1985]}],"src":"113:5544:18"},"id":18},"@openzeppelin/contracts/utils/math/Math.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[3961]},"id":3962,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3097,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"103:23:19"},{"abstract":false,"baseContracts":[],"canonicalName":"Math","contractDependencies":[],"contractKind":"library","documentation":{"id":3098,"nodeType":"StructuredDocumentation","src":"128:73:19","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":3961,"linearizedBaseContracts":[3961],"name":"Math","nameLocation":"210:4:19","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Math.Rounding","id":3102,"members":[{"id":3099,"name":"Down","nameLocation":"245:4:19","nodeType":"EnumValue","src":"245:4:19"},{"id":3100,"name":"Up","nameLocation":"287:2:19","nodeType":"EnumValue","src":"287:2:19"},{"id":3101,"name":"Zero","nameLocation":"318:4:19","nodeType":"EnumValue","src":"318:4:19"}],"name":"Rounding","nameLocation":"226:8:19","nodeType":"EnumDefinition","src":"221:122:19"},{"body":{"id":3119,"nodeType":"Block","src":"480:37:19","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3114,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3112,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3105,"src":"497:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3113,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3107,"src":"501:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"497:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":3116,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3107,"src":"509:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3117,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"497:13:19","trueExpression":{"id":3115,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3105,"src":"505:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3111,"id":3118,"nodeType":"Return","src":"490:20:19"}]},"documentation":{"id":3103,"nodeType":"StructuredDocumentation","src":"349:59:19","text":" @dev Returns the largest of two numbers."},"id":3120,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"422:3:19","nodeType":"FunctionDefinition","parameters":{"id":3108,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3105,"mutability":"mutable","name":"a","nameLocation":"434:1:19","nodeType":"VariableDeclaration","scope":3120,"src":"426:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3104,"name":"uint256","nodeType":"ElementaryTypeName","src":"426:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3107,"mutability":"mutable","name":"b","nameLocation":"445:1:19","nodeType":"VariableDeclaration","scope":3120,"src":"437:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3106,"name":"uint256","nodeType":"ElementaryTypeName","src":"437:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"425:22:19"},"returnParameters":{"id":3111,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3110,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3120,"src":"471:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3109,"name":"uint256","nodeType":"ElementaryTypeName","src":"471:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"470:9:19"},"scope":3961,"src":"413:104:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3137,"nodeType":"Block","src":"655:37:19","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3132,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3130,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3123,"src":"672:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3131,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3125,"src":"676:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"672:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":3134,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3125,"src":"684:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3135,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"672:13:19","trueExpression":{"id":3133,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3123,"src":"680:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3129,"id":3136,"nodeType":"Return","src":"665:20:19"}]},"documentation":{"id":3121,"nodeType":"StructuredDocumentation","src":"523:60:19","text":" @dev Returns the smallest of two numbers."},"id":3138,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"597:3:19","nodeType":"FunctionDefinition","parameters":{"id":3126,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3123,"mutability":"mutable","name":"a","nameLocation":"609:1:19","nodeType":"VariableDeclaration","scope":3138,"src":"601:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3122,"name":"uint256","nodeType":"ElementaryTypeName","src":"601:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3125,"mutability":"mutable","name":"b","nameLocation":"620:1:19","nodeType":"VariableDeclaration","scope":3138,"src":"612:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3124,"name":"uint256","nodeType":"ElementaryTypeName","src":"612:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"600:22:19"},"returnParameters":{"id":3129,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3128,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3138,"src":"646:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3127,"name":"uint256","nodeType":"ElementaryTypeName","src":"646:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"645:9:19"},"scope":3961,"src":"588:104:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3160,"nodeType":"Block","src":"876:82:19","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3158,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3150,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3148,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3141,"src":"931:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":3149,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3143,"src":"935:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"931:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3151,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"930:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3157,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3154,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3152,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3141,"src":"941:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":3153,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3143,"src":"945:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"941:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3155,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"940:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":3156,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"950:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"940:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"930:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3147,"id":3159,"nodeType":"Return","src":"923:28:19"}]},"documentation":{"id":3139,"nodeType":"StructuredDocumentation","src":"698:102:19","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":3161,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"814:7:19","nodeType":"FunctionDefinition","parameters":{"id":3144,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3141,"mutability":"mutable","name":"a","nameLocation":"830:1:19","nodeType":"VariableDeclaration","scope":3161,"src":"822:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3140,"name":"uint256","nodeType":"ElementaryTypeName","src":"822:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3143,"mutability":"mutable","name":"b","nameLocation":"841:1:19","nodeType":"VariableDeclaration","scope":3161,"src":"833:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3142,"name":"uint256","nodeType":"ElementaryTypeName","src":"833:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"821:22:19"},"returnParameters":{"id":3147,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3146,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3161,"src":"867:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3145,"name":"uint256","nodeType":"ElementaryTypeName","src":"867:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"866:9:19"},"scope":3961,"src":"805:153:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3185,"nodeType":"Block","src":"1228:123:19","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3173,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3171,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3164,"src":"1316:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3172,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1321:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1316:6:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3182,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3180,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3177,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3175,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3164,"src":"1330:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3176,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1334:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1330:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3178,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1329:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3179,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3166,"src":"1339:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1329:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3181,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1343:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1329:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3183,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1316:28:19","trueExpression":{"hexValue":"30","id":3174,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1325:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3170,"id":3184,"nodeType":"Return","src":"1309:35:19"}]},"documentation":{"id":3162,"nodeType":"StructuredDocumentation","src":"964:188:19","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds up instead\n of rounding down."},"id":3186,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"1166:7:19","nodeType":"FunctionDefinition","parameters":{"id":3167,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3164,"mutability":"mutable","name":"a","nameLocation":"1182:1:19","nodeType":"VariableDeclaration","scope":3186,"src":"1174:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3163,"name":"uint256","nodeType":"ElementaryTypeName","src":"1174:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3166,"mutability":"mutable","name":"b","nameLocation":"1193:1:19","nodeType":"VariableDeclaration","scope":3186,"src":"1185:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3165,"name":"uint256","nodeType":"ElementaryTypeName","src":"1185:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1173:22:19"},"returnParameters":{"id":3170,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3169,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3186,"src":"1219:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3168,"name":"uint256","nodeType":"ElementaryTypeName","src":"1219:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1218:9:19"},"scope":3961,"src":"1157:194:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3308,"nodeType":"Block","src":"1765:4115:19","statements":[{"id":3307,"nodeType":"UncheckedBlock","src":"1775:4099:19","statements":[{"assignments":[3199],"declarations":[{"constant":false,"id":3199,"mutability":"mutable","name":"prod0","nameLocation":"2104:5:19","nodeType":"VariableDeclaration","scope":3307,"src":"2096:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3198,"name":"uint256","nodeType":"ElementaryTypeName","src":"2096:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3200,"nodeType":"VariableDeclarationStatement","src":"2096:13:19"},{"assignments":[3202],"declarations":[{"constant":false,"id":3202,"mutability":"mutable","name":"prod1","nameLocation":"2176:5:19","nodeType":"VariableDeclaration","scope":3307,"src":"2168:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3201,"name":"uint256","nodeType":"ElementaryTypeName","src":"2168:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3203,"nodeType":"VariableDeclarationStatement","src":"2168:13:19"},{"AST":{"nodeType":"YulBlock","src":"2248:157:19","statements":[{"nodeType":"YulVariableDeclaration","src":"2266:30:19","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2283:1:19"},{"name":"y","nodeType":"YulIdentifier","src":"2286:1:19"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2293:1:19","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2289:3:19"},"nodeType":"YulFunctionCall","src":"2289:6:19"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"2276:6:19"},"nodeType":"YulFunctionCall","src":"2276:20:19"},"variables":[{"name":"mm","nodeType":"YulTypedName","src":"2270:2:19","type":""}]},{"nodeType":"YulAssignment","src":"2313:18:19","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2326:1:19"},{"name":"y","nodeType":"YulIdentifier","src":"2329:1:19"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"2322:3:19"},"nodeType":"YulFunctionCall","src":"2322:9:19"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"2313:5:19"}]},{"nodeType":"YulAssignment","src":"2348:43:19","value":{"arguments":[{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"2365:2:19"},{"name":"prod0","nodeType":"YulIdentifier","src":"2369:5:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2361:3:19"},"nodeType":"YulFunctionCall","src":"2361:14:19"},{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"2380:2:19"},{"name":"prod0","nodeType":"YulIdentifier","src":"2384:5:19"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2377:2:19"},"nodeType":"YulFunctionCall","src":"2377:13:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2357:3:19"},"nodeType":"YulFunctionCall","src":"2357:34:19"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"2348:5:19"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3199,"isOffset":false,"isSlot":false,"src":"2313:5:19","valueSize":1},{"declaration":3199,"isOffset":false,"isSlot":false,"src":"2369:5:19","valueSize":1},{"declaration":3199,"isOffset":false,"isSlot":false,"src":"2384:5:19","valueSize":1},{"declaration":3202,"isOffset":false,"isSlot":false,"src":"2348:5:19","valueSize":1},{"declaration":3189,"isOffset":false,"isSlot":false,"src":"2283:1:19","valueSize":1},{"declaration":3189,"isOffset":false,"isSlot":false,"src":"2326:1:19","valueSize":1},{"declaration":3191,"isOffset":false,"isSlot":false,"src":"2286:1:19","valueSize":1},{"declaration":3191,"isOffset":false,"isSlot":false,"src":"2329:1:19","valueSize":1}],"id":3204,"nodeType":"InlineAssembly","src":"2239:166:19"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3207,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3205,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3202,"src":"2486:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3206,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2495:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2486:10:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3213,"nodeType":"IfStatement","src":"2482:368:19","trueBody":{"id":3212,"nodeType":"Block","src":"2498:352:19","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3210,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3208,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3199,"src":"2816:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3209,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3193,"src":"2824:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2816:19:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3197,"id":3211,"nodeType":"Return","src":"2809:26:19"}]}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3217,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3215,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3193,"src":"2960:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3216,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3202,"src":"2974:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2960:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d6174683a206d756c446976206f766572666c6f77","id":3218,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2981:23:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851","typeString":"literal_string \"Math: mulDiv overflow\""},"value":"Math: mulDiv overflow"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851","typeString":"literal_string \"Math: mulDiv overflow\""}],"id":3214,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2952:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3219,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2952:53:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3220,"nodeType":"ExpressionStatement","src":"2952:53:19"},{"assignments":[3222],"declarations":[{"constant":false,"id":3222,"mutability":"mutable","name":"remainder","nameLocation":"3269:9:19","nodeType":"VariableDeclaration","scope":3307,"src":"3261:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3221,"name":"uint256","nodeType":"ElementaryTypeName","src":"3261:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3223,"nodeType":"VariableDeclarationStatement","src":"3261:17:19"},{"AST":{"nodeType":"YulBlock","src":"3301:291:19","statements":[{"nodeType":"YulAssignment","src":"3370:38:19","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"3390:1:19"},{"name":"y","nodeType":"YulIdentifier","src":"3393:1:19"},{"name":"denominator","nodeType":"YulIdentifier","src":"3396:11:19"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"3383:6:19"},"nodeType":"YulFunctionCall","src":"3383:25:19"},"variableNames":[{"name":"remainder","nodeType":"YulIdentifier","src":"3370:9:19"}]},{"nodeType":"YulAssignment","src":"3490:41:19","value":{"arguments":[{"name":"prod1","nodeType":"YulIdentifier","src":"3503:5:19"},{"arguments":[{"name":"remainder","nodeType":"YulIdentifier","src":"3513:9:19"},{"name":"prod0","nodeType":"YulIdentifier","src":"3524:5:19"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3510:2:19"},"nodeType":"YulFunctionCall","src":"3510:20:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3499:3:19"},"nodeType":"YulFunctionCall","src":"3499:32:19"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"3490:5:19"}]},{"nodeType":"YulAssignment","src":"3548:30:19","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"3561:5:19"},{"name":"remainder","nodeType":"YulIdentifier","src":"3568:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3557:3:19"},"nodeType":"YulFunctionCall","src":"3557:21:19"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"3548:5:19"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3193,"isOffset":false,"isSlot":false,"src":"3396:11:19","valueSize":1},{"declaration":3199,"isOffset":false,"isSlot":false,"src":"3524:5:19","valueSize":1},{"declaration":3199,"isOffset":false,"isSlot":false,"src":"3548:5:19","valueSize":1},{"declaration":3199,"isOffset":false,"isSlot":false,"src":"3561:5:19","valueSize":1},{"declaration":3202,"isOffset":false,"isSlot":false,"src":"3490:5:19","valueSize":1},{"declaration":3202,"isOffset":false,"isSlot":false,"src":"3503:5:19","valueSize":1},{"declaration":3222,"isOffset":false,"isSlot":false,"src":"3370:9:19","valueSize":1},{"declaration":3222,"isOffset":false,"isSlot":false,"src":"3513:9:19","valueSize":1},{"declaration":3222,"isOffset":false,"isSlot":false,"src":"3568:9:19","valueSize":1},{"declaration":3189,"isOffset":false,"isSlot":false,"src":"3390:1:19","valueSize":1},{"declaration":3191,"isOffset":false,"isSlot":false,"src":"3393:1:19","valueSize":1}],"id":3224,"nodeType":"InlineAssembly","src":"3292:300:19"},{"assignments":[3226],"declarations":[{"constant":false,"id":3226,"mutability":"mutable","name":"twos","nameLocation":"3907:4:19","nodeType":"VariableDeclaration","scope":3307,"src":"3899:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3225,"name":"uint256","nodeType":"ElementaryTypeName","src":"3899:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3234,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3233,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3227,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3193,"src":"3914:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3229,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"~","prefix":true,"src":"3929:12:19","subExpression":{"id":3228,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3193,"src":"3930:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3230,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3944:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3929:16:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3232,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3928:18:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3914:32:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3899:47:19"},{"AST":{"nodeType":"YulBlock","src":"3969:362:19","statements":[{"nodeType":"YulAssignment","src":"4034:37:19","value":{"arguments":[{"name":"denominator","nodeType":"YulIdentifier","src":"4053:11:19"},{"name":"twos","nodeType":"YulIdentifier","src":"4066:4:19"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4049:3:19"},"nodeType":"YulFunctionCall","src":"4049:22:19"},"variableNames":[{"name":"denominator","nodeType":"YulIdentifier","src":"4034:11:19"}]},{"nodeType":"YulAssignment","src":"4138:25:19","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"4151:5:19"},{"name":"twos","nodeType":"YulIdentifier","src":"4158:4:19"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4147:3:19"},"nodeType":"YulFunctionCall","src":"4147:16:19"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"4138:5:19"}]},{"nodeType":"YulAssignment","src":"4278:39:19","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4298:1:19","type":"","value":"0"},{"name":"twos","nodeType":"YulIdentifier","src":"4301:4:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4294:3:19"},"nodeType":"YulFunctionCall","src":"4294:12:19"},{"name":"twos","nodeType":"YulIdentifier","src":"4308:4:19"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4290:3:19"},"nodeType":"YulFunctionCall","src":"4290:23:19"},{"kind":"number","nodeType":"YulLiteral","src":"4315:1:19","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4286:3:19"},"nodeType":"YulFunctionCall","src":"4286:31:19"},"variableNames":[{"name":"twos","nodeType":"YulIdentifier","src":"4278:4:19"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3193,"isOffset":false,"isSlot":false,"src":"4034:11:19","valueSize":1},{"declaration":3193,"isOffset":false,"isSlot":false,"src":"4053:11:19","valueSize":1},{"declaration":3199,"isOffset":false,"isSlot":false,"src":"4138:5:19","valueSize":1},{"declaration":3199,"isOffset":false,"isSlot":false,"src":"4151:5:19","valueSize":1},{"declaration":3226,"isOffset":false,"isSlot":false,"src":"4066:4:19","valueSize":1},{"declaration":3226,"isOffset":false,"isSlot":false,"src":"4158:4:19","valueSize":1},{"declaration":3226,"isOffset":false,"isSlot":false,"src":"4278:4:19","valueSize":1},{"declaration":3226,"isOffset":false,"isSlot":false,"src":"4301:4:19","valueSize":1},{"declaration":3226,"isOffset":false,"isSlot":false,"src":"4308:4:19","valueSize":1}],"id":3235,"nodeType":"InlineAssembly","src":"3960:371:19"},{"expression":{"id":3240,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3236,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3199,"src":"4397:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3239,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3237,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3202,"src":"4406:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3238,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3226,"src":"4414:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4406:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4397:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3241,"nodeType":"ExpressionStatement","src":"4397:21:19"},{"assignments":[3243],"declarations":[{"constant":false,"id":3243,"mutability":"mutable","name":"inverse","nameLocation":"4744:7:19","nodeType":"VariableDeclaration","scope":3307,"src":"4736:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3242,"name":"uint256","nodeType":"ElementaryTypeName","src":"4736:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3250,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3249,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3246,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":3244,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4755:1:19","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3245,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3193,"src":"4759:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4755:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3247,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4754:17:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":3248,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4774:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"4754:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4736:39:19"},{"expression":{"id":3257,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3251,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3243,"src":"4992:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3256,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3252,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5003:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3255,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3253,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3193,"src":"5007:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3254,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3243,"src":"5021:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5007:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5003:25:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4992:36:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3258,"nodeType":"ExpressionStatement","src":"4992:36:19"},{"expression":{"id":3265,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3259,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3243,"src":"5061:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3264,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3260,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5072:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3261,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3193,"src":"5076:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3262,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3243,"src":"5090:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5076:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5072:25:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5061:36:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3266,"nodeType":"ExpressionStatement","src":"5061:36:19"},{"expression":{"id":3273,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3267,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3243,"src":"5131:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3272,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3268,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5142:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3271,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3269,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3193,"src":"5146:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3270,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3243,"src":"5160:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5146:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5142:25:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5131:36:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3274,"nodeType":"ExpressionStatement","src":"5131:36:19"},{"expression":{"id":3281,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3275,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3243,"src":"5201:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3280,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3276,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5212:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3279,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3277,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3193,"src":"5216:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3278,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3243,"src":"5230:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5216:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5212:25:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5201:36:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3282,"nodeType":"ExpressionStatement","src":"5201:36:19"},{"expression":{"id":3289,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3283,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3243,"src":"5271:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3288,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3284,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5282:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3287,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3285,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3193,"src":"5286:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3286,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3243,"src":"5300:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5286:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5282:25:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5271:36:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3290,"nodeType":"ExpressionStatement","src":"5271:36:19"},{"expression":{"id":3297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3291,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3243,"src":"5342:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3296,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3292,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5353:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3295,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3293,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3193,"src":"5357:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3294,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3243,"src":"5371:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5357:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5353:25:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5342:36:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3298,"nodeType":"ExpressionStatement","src":"5342:36:19"},{"expression":{"id":3303,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3299,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3196,"src":"5812:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3302,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3300,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3199,"src":"5821:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3301,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3243,"src":"5829:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5821:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5812:24:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3304,"nodeType":"ExpressionStatement","src":"5812:24:19"},{"expression":{"id":3305,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3196,"src":"5857:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3197,"id":3306,"nodeType":"Return","src":"5850:13:19"}]}]},"documentation":{"id":3187,"nodeType":"StructuredDocumentation","src":"1357:305:19","text":" @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n with further edits by Uniswap Labs also under MIT license."},"id":3309,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"1676:6:19","nodeType":"FunctionDefinition","parameters":{"id":3194,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3189,"mutability":"mutable","name":"x","nameLocation":"1691:1:19","nodeType":"VariableDeclaration","scope":3309,"src":"1683:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3188,"name":"uint256","nodeType":"ElementaryTypeName","src":"1683:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3191,"mutability":"mutable","name":"y","nameLocation":"1702:1:19","nodeType":"VariableDeclaration","scope":3309,"src":"1694:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3190,"name":"uint256","nodeType":"ElementaryTypeName","src":"1694:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3193,"mutability":"mutable","name":"denominator","nameLocation":"1713:11:19","nodeType":"VariableDeclaration","scope":3309,"src":"1705:19:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3192,"name":"uint256","nodeType":"ElementaryTypeName","src":"1705:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1682:43:19"},"returnParameters":{"id":3197,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3196,"mutability":"mutable","name":"result","nameLocation":"1757:6:19","nodeType":"VariableDeclaration","scope":3309,"src":"1749:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3195,"name":"uint256","nodeType":"ElementaryTypeName","src":"1749:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1748:16:19"},"scope":3961,"src":"1667:4213:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3352,"nodeType":"Block","src":"6122:189:19","statements":[{"assignments":[3325],"declarations":[{"constant":false,"id":3325,"mutability":"mutable","name":"result","nameLocation":"6140:6:19","nodeType":"VariableDeclaration","scope":3352,"src":"6132:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3324,"name":"uint256","nodeType":"ElementaryTypeName","src":"6132:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3331,"initialValue":{"arguments":[{"id":3327,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3312,"src":"6156:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3328,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3314,"src":"6159:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3329,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3316,"src":"6162:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3326,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[3309,3353],"referencedDeclaration":3309,"src":"6149:6:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":3330,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6149:25:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6132:42:19"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3343,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$3102","typeString":"enum Math.Rounding"},"id":3335,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3332,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3319,"src":"6188:8:19","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3102","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3333,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3102,"src":"6200:8:19","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$3102_$","typeString":"type(enum Math.Rounding)"}},"id":3334,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6209:2:19","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":3100,"src":"6200:11:19","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3102","typeString":"enum Math.Rounding"}},"src":"6188:23:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3342,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3337,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3312,"src":"6222:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3338,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3314,"src":"6225:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3339,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3316,"src":"6228:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3336,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"6215:6:19","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":3340,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6215:25:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3341,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6243:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6215:29:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6188:56:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3349,"nodeType":"IfStatement","src":"6184:98:19","trueBody":{"id":3348,"nodeType":"Block","src":"6246:36:19","statements":[{"expression":{"id":3346,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3344,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3325,"src":"6260:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":3345,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6270:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6260:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3347,"nodeType":"ExpressionStatement","src":"6260:11:19"}]}},{"expression":{"id":3350,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3325,"src":"6298:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3323,"id":3351,"nodeType":"Return","src":"6291:13:19"}]},"documentation":{"id":3310,"nodeType":"StructuredDocumentation","src":"5886:121:19","text":" @notice Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":3353,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"6021:6:19","nodeType":"FunctionDefinition","parameters":{"id":3320,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3312,"mutability":"mutable","name":"x","nameLocation":"6036:1:19","nodeType":"VariableDeclaration","scope":3353,"src":"6028:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3311,"name":"uint256","nodeType":"ElementaryTypeName","src":"6028:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3314,"mutability":"mutable","name":"y","nameLocation":"6047:1:19","nodeType":"VariableDeclaration","scope":3353,"src":"6039:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3313,"name":"uint256","nodeType":"ElementaryTypeName","src":"6039:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3316,"mutability":"mutable","name":"denominator","nameLocation":"6058:11:19","nodeType":"VariableDeclaration","scope":3353,"src":"6050:19:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3315,"name":"uint256","nodeType":"ElementaryTypeName","src":"6050:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3319,"mutability":"mutable","name":"rounding","nameLocation":"6080:8:19","nodeType":"VariableDeclaration","scope":3353,"src":"6071:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3102","typeString":"enum Math.Rounding"},"typeName":{"id":3318,"nodeType":"UserDefinedTypeName","pathNode":{"id":3317,"name":"Rounding","nameLocations":["6071:8:19"],"nodeType":"IdentifierPath","referencedDeclaration":3102,"src":"6071:8:19"},"referencedDeclaration":3102,"src":"6071:8:19","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3102","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"6027:62:19"},"returnParameters":{"id":3323,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3322,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3353,"src":"6113:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3321,"name":"uint256","nodeType":"ElementaryTypeName","src":"6113:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6112:9:19"},"scope":3961,"src":"6012:299:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3464,"nodeType":"Block","src":"6587:1585:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3363,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3361,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3356,"src":"6601:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3362,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6606:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6601:6:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3367,"nodeType":"IfStatement","src":"6597:45:19","trueBody":{"id":3366,"nodeType":"Block","src":"6609:33:19","statements":[{"expression":{"hexValue":"30","id":3364,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6630:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":3360,"id":3365,"nodeType":"Return","src":"6623:8:19"}]}},{"assignments":[3369],"declarations":[{"constant":false,"id":3369,"mutability":"mutable","name":"result","nameLocation":"7329:6:19","nodeType":"VariableDeclaration","scope":3464,"src":"7321:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3368,"name":"uint256","nodeType":"ElementaryTypeName","src":"7321:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3378,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3377,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3370,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7338:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3375,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3372,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3356,"src":"7349:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3371,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[3633,3669],"referencedDeclaration":3633,"src":"7344:4:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3373,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7344:7:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3374,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7355:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7344:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3376,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7343:14:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7338:19:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7321:36:19"},{"id":3463,"nodeType":"UncheckedBlock","src":"7758:408:19","statements":[{"expression":{"id":3388,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3379,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3369,"src":"7782:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3387,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3384,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3380,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3369,"src":"7792:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3383,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3381,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3356,"src":"7801:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3382,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3369,"src":"7805:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7801:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7792:19:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3385,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7791:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3386,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7816:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7791:26:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7782:35:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3389,"nodeType":"ExpressionStatement","src":"7782:35:19"},{"expression":{"id":3399,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3390,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3369,"src":"7831:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3398,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3395,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3391,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3369,"src":"7841:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3394,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3392,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3356,"src":"7850:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3393,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3369,"src":"7854:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7850:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7841:19:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3396,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7840:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3397,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7865:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7840:26:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7831:35:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3400,"nodeType":"ExpressionStatement","src":"7831:35:19"},{"expression":{"id":3410,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3401,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3369,"src":"7880:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3406,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3402,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3369,"src":"7890:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3405,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3403,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3356,"src":"7899:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3404,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3369,"src":"7903:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7899:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7890:19:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3407,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7889:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3408,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7914:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7889:26:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7880:35:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3411,"nodeType":"ExpressionStatement","src":"7880:35:19"},{"expression":{"id":3421,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3412,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3369,"src":"7929:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3420,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3417,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3413,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3369,"src":"7939:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3416,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3414,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3356,"src":"7948:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3415,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3369,"src":"7952:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7948:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7939:19:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3418,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7938:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3419,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7963:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7938:26:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7929:35:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3422,"nodeType":"ExpressionStatement","src":"7929:35:19"},{"expression":{"id":3432,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3423,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3369,"src":"7978:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3431,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3428,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3424,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3369,"src":"7988:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3425,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3356,"src":"7997:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3426,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3369,"src":"8001:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7997:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7988:19:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3429,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7987:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3430,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8012:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7987:26:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7978:35:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3433,"nodeType":"ExpressionStatement","src":"7978:35:19"},{"expression":{"id":3443,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3434,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3369,"src":"8027:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3442,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3439,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3435,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3369,"src":"8037:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3438,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3436,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3356,"src":"8046:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3437,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3369,"src":"8050:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8046:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8037:19:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3440,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8036:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3441,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8061:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8036:26:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8027:35:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3444,"nodeType":"ExpressionStatement","src":"8027:35:19"},{"expression":{"id":3454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3445,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3369,"src":"8076:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3453,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3450,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3446,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3369,"src":"8086:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3449,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3447,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3356,"src":"8095:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3448,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3369,"src":"8099:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8095:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8086:19:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3451,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8085:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3452,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8110:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8085:26:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8076:35:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3455,"nodeType":"ExpressionStatement","src":"8076:35:19"},{"expression":{"arguments":[{"id":3457,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3369,"src":"8136:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3460,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3458,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3356,"src":"8144:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3459,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3369,"src":"8148:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8144:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3456,"name":"min","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3138,"src":"8132:3:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3461,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8132:23:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3360,"id":3462,"nodeType":"Return","src":"8125:30:19"}]}]},"documentation":{"id":3354,"nodeType":"StructuredDocumentation","src":"6317:208:19","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."},"id":3465,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"6539:4:19","nodeType":"FunctionDefinition","parameters":{"id":3357,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3356,"mutability":"mutable","name":"a","nameLocation":"6552:1:19","nodeType":"VariableDeclaration","scope":3465,"src":"6544:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3355,"name":"uint256","nodeType":"ElementaryTypeName","src":"6544:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6543:11:19"},"returnParameters":{"id":3360,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3359,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3465,"src":"6578:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3358,"name":"uint256","nodeType":"ElementaryTypeName","src":"6578:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6577:9:19"},"scope":3961,"src":"6530:1642:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3500,"nodeType":"Block","src":"8348:161:19","statements":[{"id":3499,"nodeType":"UncheckedBlock","src":"8358:145:19","statements":[{"assignments":[3477],"declarations":[{"constant":false,"id":3477,"mutability":"mutable","name":"result","nameLocation":"8390:6:19","nodeType":"VariableDeclaration","scope":3499,"src":"8382:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3476,"name":"uint256","nodeType":"ElementaryTypeName","src":"8382:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3481,"initialValue":{"arguments":[{"id":3479,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3468,"src":"8404:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3478,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[3465,3501],"referencedDeclaration":3465,"src":"8399:4:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3480,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8399:7:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8382:24:19"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3497,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3482,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3477,"src":"8427:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3492,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$3102","typeString":"enum Math.Rounding"},"id":3486,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3483,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3471,"src":"8437:8:19","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3102","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3484,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3102,"src":"8449:8:19","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$3102_$","typeString":"type(enum Math.Rounding)"}},"id":3485,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8458:2:19","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":3100,"src":"8449:11:19","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3102","typeString":"enum Math.Rounding"}},"src":"8437:23:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3491,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3489,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3487,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3477,"src":"8464:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3488,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3477,"src":"8473:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8464:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3490,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3468,"src":"8482:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8464:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8437:46:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":3494,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8490:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":3495,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"8437:54:19","trueExpression":{"hexValue":"31","id":3493,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8486:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":3496,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8436:56:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"8427:65:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3475,"id":3498,"nodeType":"Return","src":"8420:72:19"}]}]},"documentation":{"id":3466,"nodeType":"StructuredDocumentation","src":"8178:89:19","text":" @notice Calculates sqrt(a), following the selected rounding direction."},"id":3501,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"8281:4:19","nodeType":"FunctionDefinition","parameters":{"id":3472,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3468,"mutability":"mutable","name":"a","nameLocation":"8294:1:19","nodeType":"VariableDeclaration","scope":3501,"src":"8286:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3467,"name":"uint256","nodeType":"ElementaryTypeName","src":"8286:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3471,"mutability":"mutable","name":"rounding","nameLocation":"8306:8:19","nodeType":"VariableDeclaration","scope":3501,"src":"8297:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3102","typeString":"enum Math.Rounding"},"typeName":{"id":3470,"nodeType":"UserDefinedTypeName","pathNode":{"id":3469,"name":"Rounding","nameLocations":["8297:8:19"],"nodeType":"IdentifierPath","referencedDeclaration":3102,"src":"8297:8:19"},"referencedDeclaration":3102,"src":"8297:8:19","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3102","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"8285:30:19"},"returnParameters":{"id":3475,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3474,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3501,"src":"8339:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3473,"name":"uint256","nodeType":"ElementaryTypeName","src":"8339:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8338:9:19"},"scope":3961,"src":"8272:237:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3632,"nodeType":"Block","src":"8694:922:19","statements":[{"assignments":[3510],"declarations":[{"constant":false,"id":3510,"mutability":"mutable","name":"result","nameLocation":"8712:6:19","nodeType":"VariableDeclaration","scope":3632,"src":"8704:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3509,"name":"uint256","nodeType":"ElementaryTypeName","src":"8704:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3512,"initialValue":{"hexValue":"30","id":3511,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8721:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8704:18:19"},{"id":3629,"nodeType":"UncheckedBlock","src":"8732:855:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3517,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3515,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3513,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3504,"src":"8760:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":3514,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8769:3:19","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8760:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3516,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8775:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8760:16:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3527,"nodeType":"IfStatement","src":"8756:99:19","trueBody":{"id":3526,"nodeType":"Block","src":"8778:77:19","statements":[{"expression":{"id":3520,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3518,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3504,"src":"8796:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":3519,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8806:3:19","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8796:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3521,"nodeType":"ExpressionStatement","src":"8796:13:19"},{"expression":{"id":3524,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3522,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3510,"src":"8827:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"313238","id":3523,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8837:3:19","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8827:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3525,"nodeType":"ExpressionStatement","src":"8827:13:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3532,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3530,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3528,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3504,"src":"8872:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":3529,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8881:2:19","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8872:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3531,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8886:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8872:15:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3542,"nodeType":"IfStatement","src":"8868:96:19","trueBody":{"id":3541,"nodeType":"Block","src":"8889:75:19","statements":[{"expression":{"id":3535,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3533,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3504,"src":"8907:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":3534,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8917:2:19","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8907:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3536,"nodeType":"ExpressionStatement","src":"8907:12:19"},{"expression":{"id":3539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3537,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3510,"src":"8937:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":3538,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8947:2:19","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8937:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3540,"nodeType":"ExpressionStatement","src":"8937:12:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3545,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3543,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3504,"src":"8981:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":3544,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8990:2:19","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"8981:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3546,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8995:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8981:15:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3557,"nodeType":"IfStatement","src":"8977:96:19","trueBody":{"id":3556,"nodeType":"Block","src":"8998:75:19","statements":[{"expression":{"id":3550,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3548,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3504,"src":"9016:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":3549,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9026:2:19","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"9016:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3551,"nodeType":"ExpressionStatement","src":"9016:12:19"},{"expression":{"id":3554,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3552,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3510,"src":"9046:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":3553,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9056:2:19","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"9046:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3555,"nodeType":"ExpressionStatement","src":"9046:12:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3562,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3560,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3558,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3504,"src":"9090:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":3559,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9099:2:19","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"9090:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3561,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9104:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9090:15:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3572,"nodeType":"IfStatement","src":"9086:96:19","trueBody":{"id":3571,"nodeType":"Block","src":"9107:75:19","statements":[{"expression":{"id":3565,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3563,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3504,"src":"9125:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":3564,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9135:2:19","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"9125:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3566,"nodeType":"ExpressionStatement","src":"9125:12:19"},{"expression":{"id":3569,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3567,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3510,"src":"9155:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":3568,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9165:2:19","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"9155:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3570,"nodeType":"ExpressionStatement","src":"9155:12:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3577,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3575,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3573,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3504,"src":"9199:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":3574,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9208:1:19","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"9199:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3576,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9212:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9199:14:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3587,"nodeType":"IfStatement","src":"9195:93:19","trueBody":{"id":3586,"nodeType":"Block","src":"9215:73:19","statements":[{"expression":{"id":3580,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3578,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3504,"src":"9233:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":3579,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9243:1:19","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"9233:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3581,"nodeType":"ExpressionStatement","src":"9233:11:19"},{"expression":{"id":3584,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3582,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3510,"src":"9262:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":3583,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9272:1:19","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"9262:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3585,"nodeType":"ExpressionStatement","src":"9262:11:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3592,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3590,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3588,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3504,"src":"9305:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"34","id":3589,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9314:1:19","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9305:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3591,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9318:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9305:14:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3602,"nodeType":"IfStatement","src":"9301:93:19","trueBody":{"id":3601,"nodeType":"Block","src":"9321:73:19","statements":[{"expression":{"id":3595,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3593,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3504,"src":"9339:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":3594,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9349:1:19","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9339:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3596,"nodeType":"ExpressionStatement","src":"9339:11:19"},{"expression":{"id":3599,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3597,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3510,"src":"9368:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":3598,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9378:1:19","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9368:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3600,"nodeType":"ExpressionStatement","src":"9368:11:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3607,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3605,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3603,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3504,"src":"9411:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"32","id":3604,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9420:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9411:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3606,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9424:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9411:14:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3617,"nodeType":"IfStatement","src":"9407:93:19","trueBody":{"id":3616,"nodeType":"Block","src":"9427:73:19","statements":[{"expression":{"id":3610,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3608,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3504,"src":"9445:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"32","id":3609,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9455:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9445:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3611,"nodeType":"ExpressionStatement","src":"9445:11:19"},{"expression":{"id":3614,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3612,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3510,"src":"9474:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":3613,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9484:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9474:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3615,"nodeType":"ExpressionStatement","src":"9474:11:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3622,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3620,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3618,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3504,"src":"9517:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3619,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9526:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9517:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3621,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9530:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9517:14:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3628,"nodeType":"IfStatement","src":"9513:64:19","trueBody":{"id":3627,"nodeType":"Block","src":"9533:44:19","statements":[{"expression":{"id":3625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3623,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3510,"src":"9551:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":3624,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9561:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9551:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3626,"nodeType":"ExpressionStatement","src":"9551:11:19"}]}}]},{"expression":{"id":3630,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3510,"src":"9603:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3508,"id":3631,"nodeType":"Return","src":"9596:13:19"}]},"documentation":{"id":3502,"nodeType":"StructuredDocumentation","src":"8515:113:19","text":" @dev Return the log in base 2, rounded down, of a positive value.\n Returns 0 if given 0."},"id":3633,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"8642:4:19","nodeType":"FunctionDefinition","parameters":{"id":3505,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3504,"mutability":"mutable","name":"value","nameLocation":"8655:5:19","nodeType":"VariableDeclaration","scope":3633,"src":"8647:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3503,"name":"uint256","nodeType":"ElementaryTypeName","src":"8647:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8646:15:19"},"returnParameters":{"id":3508,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3507,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3633,"src":"8685:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3506,"name":"uint256","nodeType":"ElementaryTypeName","src":"8685:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8684:9:19"},"scope":3961,"src":"8633:983:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3668,"nodeType":"Block","src":"9849:165:19","statements":[{"id":3667,"nodeType":"UncheckedBlock","src":"9859:149:19","statements":[{"assignments":[3645],"declarations":[{"constant":false,"id":3645,"mutability":"mutable","name":"result","nameLocation":"9891:6:19","nodeType":"VariableDeclaration","scope":3667,"src":"9883:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3644,"name":"uint256","nodeType":"ElementaryTypeName","src":"9883:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3649,"initialValue":{"arguments":[{"id":3647,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3636,"src":"9905:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3646,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[3633,3669],"referencedDeclaration":3633,"src":"9900:4:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3648,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9900:11:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9883:28:19"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3665,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3650,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3645,"src":"9932:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$3102","typeString":"enum Math.Rounding"},"id":3654,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3651,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3639,"src":"9942:8:19","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3102","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3652,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3102,"src":"9954:8:19","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$3102_$","typeString":"type(enum Math.Rounding)"}},"id":3653,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9963:2:19","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":3100,"src":"9954:11:19","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3102","typeString":"enum Math.Rounding"}},"src":"9942:23:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3659,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3657,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3655,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9969:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":3656,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3645,"src":"9974:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9969:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3658,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3636,"src":"9983:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9969:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9942:46:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":3662,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9995:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":3663,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9942:54:19","trueExpression":{"hexValue":"31","id":3661,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9991:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":3664,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9941:56:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"9932:65:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3643,"id":3666,"nodeType":"Return","src":"9925:72:19"}]}]},"documentation":{"id":3634,"nodeType":"StructuredDocumentation","src":"9622:142:19","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":3669,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"9778:4:19","nodeType":"FunctionDefinition","parameters":{"id":3640,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3636,"mutability":"mutable","name":"value","nameLocation":"9791:5:19","nodeType":"VariableDeclaration","scope":3669,"src":"9783:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3635,"name":"uint256","nodeType":"ElementaryTypeName","src":"9783:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3639,"mutability":"mutable","name":"rounding","nameLocation":"9807:8:19","nodeType":"VariableDeclaration","scope":3669,"src":"9798:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3102","typeString":"enum Math.Rounding"},"typeName":{"id":3638,"nodeType":"UserDefinedTypeName","pathNode":{"id":3637,"name":"Rounding","nameLocations":["9798:8:19"],"nodeType":"IdentifierPath","referencedDeclaration":3102,"src":"9798:8:19"},"referencedDeclaration":3102,"src":"9798:8:19","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3102","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"9782:34:19"},"returnParameters":{"id":3643,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3642,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3669,"src":"9840:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3641,"name":"uint256","nodeType":"ElementaryTypeName","src":"9840:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9839:9:19"},"scope":3961,"src":"9769:245:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3797,"nodeType":"Block","src":"10201:854:19","statements":[{"assignments":[3678],"declarations":[{"constant":false,"id":3678,"mutability":"mutable","name":"result","nameLocation":"10219:6:19","nodeType":"VariableDeclaration","scope":3797,"src":"10211:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3677,"name":"uint256","nodeType":"ElementaryTypeName","src":"10211:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3680,"initialValue":{"hexValue":"30","id":3679,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10228:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10211:18:19"},{"id":3794,"nodeType":"UncheckedBlock","src":"10239:787:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3685,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3681,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3672,"src":"10267:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":3684,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3682,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10276:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":3683,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10282:2:19","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10276:8:19","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"10267:17:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3697,"nodeType":"IfStatement","src":"10263:103:19","trueBody":{"id":3696,"nodeType":"Block","src":"10286:80:19","statements":[{"expression":{"id":3690,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3686,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3672,"src":"10304:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":3689,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3687,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10313:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":3688,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10319:2:19","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10313:8:19","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"10304:17:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3691,"nodeType":"ExpressionStatement","src":"10304:17:19"},{"expression":{"id":3694,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3692,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3678,"src":"10339:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":3693,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10349:2:19","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10339:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3695,"nodeType":"ExpressionStatement","src":"10339:12:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3702,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3698,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3672,"src":"10383:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":3701,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3699,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10392:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":3700,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10398:2:19","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10392:8:19","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"10383:17:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3714,"nodeType":"IfStatement","src":"10379:103:19","trueBody":{"id":3713,"nodeType":"Block","src":"10402:80:19","statements":[{"expression":{"id":3707,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3703,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3672,"src":"10420:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":3706,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3704,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10429:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":3705,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10435:2:19","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10429:8:19","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"10420:17:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3708,"nodeType":"ExpressionStatement","src":"10420:17:19"},{"expression":{"id":3711,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3709,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3678,"src":"10455:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":3710,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10465:2:19","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10455:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3712,"nodeType":"ExpressionStatement","src":"10455:12:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3719,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3715,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3672,"src":"10499:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":3718,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3716,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10508:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":3717,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10514:2:19","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10508:8:19","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"10499:17:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3731,"nodeType":"IfStatement","src":"10495:103:19","trueBody":{"id":3730,"nodeType":"Block","src":"10518:80:19","statements":[{"expression":{"id":3724,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3720,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3672,"src":"10536:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":3723,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3721,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10545:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":3722,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10551:2:19","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10545:8:19","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"10536:17:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3725,"nodeType":"ExpressionStatement","src":"10536:17:19"},{"expression":{"id":3728,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3726,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3678,"src":"10571:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":3727,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10581:2:19","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10571:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3729,"nodeType":"ExpressionStatement","src":"10571:12:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3736,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3732,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3672,"src":"10615:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":3735,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3733,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10624:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":3734,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10630:1:19","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10624:7:19","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"10615:16:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3748,"nodeType":"IfStatement","src":"10611:100:19","trueBody":{"id":3747,"nodeType":"Block","src":"10633:78:19","statements":[{"expression":{"id":3741,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3737,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3672,"src":"10651:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":3740,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3738,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10660:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":3739,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10666:1:19","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10660:7:19","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"10651:16:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3742,"nodeType":"ExpressionStatement","src":"10651:16:19"},{"expression":{"id":3745,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3743,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3678,"src":"10685:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":3744,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10695:1:19","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10685:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3746,"nodeType":"ExpressionStatement","src":"10685:11:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3753,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3749,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3672,"src":"10728:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":3752,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3750,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10737:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":3751,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10743:1:19","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10737:7:19","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"10728:16:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3765,"nodeType":"IfStatement","src":"10724:100:19","trueBody":{"id":3764,"nodeType":"Block","src":"10746:78:19","statements":[{"expression":{"id":3758,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3754,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3672,"src":"10764:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":3757,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3755,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10773:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":3756,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10779:1:19","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10773:7:19","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"10764:16:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3759,"nodeType":"ExpressionStatement","src":"10764:16:19"},{"expression":{"id":3762,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3760,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3678,"src":"10798:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":3761,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10808:1:19","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10798:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3763,"nodeType":"ExpressionStatement","src":"10798:11:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3770,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3766,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3672,"src":"10841:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":3769,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3767,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10850:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":3768,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10856:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10850:7:19","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"10841:16:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3782,"nodeType":"IfStatement","src":"10837:100:19","trueBody":{"id":3781,"nodeType":"Block","src":"10859:78:19","statements":[{"expression":{"id":3775,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3771,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3672,"src":"10877:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":3774,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3772,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10886:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":3773,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10892:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10886:7:19","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"10877:16:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3776,"nodeType":"ExpressionStatement","src":"10877:16:19"},{"expression":{"id":3779,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3777,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3678,"src":"10911:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":3778,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10921:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10911:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3780,"nodeType":"ExpressionStatement","src":"10911:11:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3787,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3783,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3672,"src":"10954:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":3786,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3784,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10963:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":3785,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10969:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10963:7:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"10954:16:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3793,"nodeType":"IfStatement","src":"10950:66:19","trueBody":{"id":3792,"nodeType":"Block","src":"10972:44:19","statements":[{"expression":{"id":3790,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3788,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3678,"src":"10990:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":3789,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11000:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10990:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3791,"nodeType":"ExpressionStatement","src":"10990:11:19"}]}}]},{"expression":{"id":3795,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3678,"src":"11042:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3676,"id":3796,"nodeType":"Return","src":"11035:13:19"}]},"documentation":{"id":3670,"nodeType":"StructuredDocumentation","src":"10020:114:19","text":" @dev Return the log in base 10, rounded down, of a positive value.\n Returns 0 if given 0."},"id":3798,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"10148:5:19","nodeType":"FunctionDefinition","parameters":{"id":3673,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3672,"mutability":"mutable","name":"value","nameLocation":"10162:5:19","nodeType":"VariableDeclaration","scope":3798,"src":"10154:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3671,"name":"uint256","nodeType":"ElementaryTypeName","src":"10154:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10153:15:19"},"returnParameters":{"id":3676,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3675,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3798,"src":"10192:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3674,"name":"uint256","nodeType":"ElementaryTypeName","src":"10192:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10191:9:19"},"scope":3961,"src":"10139:916:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3833,"nodeType":"Block","src":"11290:167:19","statements":[{"id":3832,"nodeType":"UncheckedBlock","src":"11300:151:19","statements":[{"assignments":[3810],"declarations":[{"constant":false,"id":3810,"mutability":"mutable","name":"result","nameLocation":"11332:6:19","nodeType":"VariableDeclaration","scope":3832,"src":"11324:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3809,"name":"uint256","nodeType":"ElementaryTypeName","src":"11324:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3814,"initialValue":{"arguments":[{"id":3812,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3801,"src":"11347:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3811,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[3798,3834],"referencedDeclaration":3798,"src":"11341:5:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3813,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11341:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11324:29:19"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3830,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3815,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3810,"src":"11374:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3825,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$3102","typeString":"enum Math.Rounding"},"id":3819,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3816,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3804,"src":"11384:8:19","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3102","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3817,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3102,"src":"11396:8:19","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$3102_$","typeString":"type(enum Math.Rounding)"}},"id":3818,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11405:2:19","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":3100,"src":"11396:11:19","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3102","typeString":"enum Math.Rounding"}},"src":"11384:23:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3824,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3822,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3820,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11411:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":3821,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3810,"src":"11417:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11411:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3823,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3801,"src":"11426:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11411:20:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11384:47:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":3827,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11438:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":3828,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"11384:55:19","trueExpression":{"hexValue":"31","id":3826,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11434:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":3829,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11383:57:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11374:66:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3808,"id":3831,"nodeType":"Return","src":"11367:73:19"}]}]},"documentation":{"id":3799,"nodeType":"StructuredDocumentation","src":"11061:143:19","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":3834,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"11218:5:19","nodeType":"FunctionDefinition","parameters":{"id":3805,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3801,"mutability":"mutable","name":"value","nameLocation":"11232:5:19","nodeType":"VariableDeclaration","scope":3834,"src":"11224:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3800,"name":"uint256","nodeType":"ElementaryTypeName","src":"11224:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3804,"mutability":"mutable","name":"rounding","nameLocation":"11248:8:19","nodeType":"VariableDeclaration","scope":3834,"src":"11239:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3102","typeString":"enum Math.Rounding"},"typeName":{"id":3803,"nodeType":"UserDefinedTypeName","pathNode":{"id":3802,"name":"Rounding","nameLocations":["11239:8:19"],"nodeType":"IdentifierPath","referencedDeclaration":3102,"src":"11239:8:19"},"referencedDeclaration":3102,"src":"11239:8:19","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3102","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11223:34:19"},"returnParameters":{"id":3808,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3807,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3834,"src":"11281:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3806,"name":"uint256","nodeType":"ElementaryTypeName","src":"11281:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11280:9:19"},"scope":3961,"src":"11209:248:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3920,"nodeType":"Block","src":"11771:600:19","statements":[{"assignments":[3843],"declarations":[{"constant":false,"id":3843,"mutability":"mutable","name":"result","nameLocation":"11789:6:19","nodeType":"VariableDeclaration","scope":3920,"src":"11781:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3842,"name":"uint256","nodeType":"ElementaryTypeName","src":"11781:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3845,"initialValue":{"hexValue":"30","id":3844,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11798:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"11781:18:19"},{"id":3917,"nodeType":"UncheckedBlock","src":"11809:533:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3850,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3848,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3846,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3837,"src":"11837:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":3847,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11846:3:19","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"11837:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3849,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11852:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11837:16:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3860,"nodeType":"IfStatement","src":"11833:98:19","trueBody":{"id":3859,"nodeType":"Block","src":"11855:76:19","statements":[{"expression":{"id":3853,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3851,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3837,"src":"11873:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":3852,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11883:3:19","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"11873:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3854,"nodeType":"ExpressionStatement","src":"11873:13:19"},{"expression":{"id":3857,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3855,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3843,"src":"11904:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":3856,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11914:2:19","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11904:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3858,"nodeType":"ExpressionStatement","src":"11904:12:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3865,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3863,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3861,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3837,"src":"11948:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":3862,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11957:2:19","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11948:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3864,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11962:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11948:15:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3875,"nodeType":"IfStatement","src":"11944:95:19","trueBody":{"id":3874,"nodeType":"Block","src":"11965:74:19","statements":[{"expression":{"id":3868,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3866,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3837,"src":"11983:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":3867,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11993:2:19","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11983:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3869,"nodeType":"ExpressionStatement","src":"11983:12:19"},{"expression":{"id":3872,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3870,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3843,"src":"12013:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":3871,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12023:1:19","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12013:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3873,"nodeType":"ExpressionStatement","src":"12013:11:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3880,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3878,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3876,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3837,"src":"12056:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":3877,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12065:2:19","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12056:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3879,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12070:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12056:15:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3890,"nodeType":"IfStatement","src":"12052:95:19","trueBody":{"id":3889,"nodeType":"Block","src":"12073:74:19","statements":[{"expression":{"id":3883,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3881,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3837,"src":"12091:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":3882,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12101:2:19","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12091:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3884,"nodeType":"ExpressionStatement","src":"12091:12:19"},{"expression":{"id":3887,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3885,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3843,"src":"12121:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":3886,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12131:1:19","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"12121:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3888,"nodeType":"ExpressionStatement","src":"12121:11:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3895,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3893,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3891,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3837,"src":"12164:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":3892,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12173:2:19","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12164:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3894,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12178:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12164:15:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3905,"nodeType":"IfStatement","src":"12160:95:19","trueBody":{"id":3904,"nodeType":"Block","src":"12181:74:19","statements":[{"expression":{"id":3898,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3896,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3837,"src":"12199:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":3897,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12209:2:19","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12199:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3899,"nodeType":"ExpressionStatement","src":"12199:12:19"},{"expression":{"id":3902,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3900,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3843,"src":"12229:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":3901,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12239:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12229:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3903,"nodeType":"ExpressionStatement","src":"12229:11:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3910,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3908,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3906,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3837,"src":"12272:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":3907,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12281:1:19","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12272:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3909,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12285:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12272:14:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3916,"nodeType":"IfStatement","src":"12268:64:19","trueBody":{"id":3915,"nodeType":"Block","src":"12288:44:19","statements":[{"expression":{"id":3913,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3911,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3843,"src":"12306:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":3912,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12316:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12306:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3914,"nodeType":"ExpressionStatement","src":"12306:11:19"}]}}]},{"expression":{"id":3918,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3843,"src":"12358:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3841,"id":3919,"nodeType":"Return","src":"12351:13:19"}]},"documentation":{"id":3835,"nodeType":"StructuredDocumentation","src":"11463:240:19","text":" @dev Return the log in base 256, rounded down, of a positive value.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":3921,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"11717:6:19","nodeType":"FunctionDefinition","parameters":{"id":3838,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3837,"mutability":"mutable","name":"value","nameLocation":"11732:5:19","nodeType":"VariableDeclaration","scope":3921,"src":"11724:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3836,"name":"uint256","nodeType":"ElementaryTypeName","src":"11724:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11723:15:19"},"returnParameters":{"id":3841,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3840,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3921,"src":"11762:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3839,"name":"uint256","nodeType":"ElementaryTypeName","src":"11762:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11761:9:19"},"scope":3961,"src":"11708:663:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3959,"nodeType":"Block","src":"12608:174:19","statements":[{"id":3958,"nodeType":"UncheckedBlock","src":"12618:158:19","statements":[{"assignments":[3933],"declarations":[{"constant":false,"id":3933,"mutability":"mutable","name":"result","nameLocation":"12650:6:19","nodeType":"VariableDeclaration","scope":3958,"src":"12642:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3932,"name":"uint256","nodeType":"ElementaryTypeName","src":"12642:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3937,"initialValue":{"arguments":[{"id":3935,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3924,"src":"12666:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3934,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[3921,3960],"referencedDeclaration":3921,"src":"12659:6:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3936,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12659:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12642:30:19"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3956,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3938,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3933,"src":"12693:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3951,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$3102","typeString":"enum Math.Rounding"},"id":3942,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3939,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3927,"src":"12703:8:19","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3102","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3940,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3102,"src":"12715:8:19","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$3102_$","typeString":"type(enum Math.Rounding)"}},"id":3941,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12724:2:19","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":3100,"src":"12715:11:19","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3102","typeString":"enum Math.Rounding"}},"src":"12703:23:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3950,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3948,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3943,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12730:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3946,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3944,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3933,"src":"12736:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":3945,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12746:1:19","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"12736:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3947,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12735:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12730:18:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3949,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3924,"src":"12751:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12730:26:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12703:53:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":3953,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12763:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":3954,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"12703:61:19","trueExpression":{"hexValue":"31","id":3952,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12759:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":3955,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12702:63:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"12693:72:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3931,"id":3957,"nodeType":"Return","src":"12686:79:19"}]}]},"documentation":{"id":3922,"nodeType":"StructuredDocumentation","src":"12377:144:19","text":" @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":3960,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"12535:6:19","nodeType":"FunctionDefinition","parameters":{"id":3928,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3924,"mutability":"mutable","name":"value","nameLocation":"12550:5:19","nodeType":"VariableDeclaration","scope":3960,"src":"12542:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3923,"name":"uint256","nodeType":"ElementaryTypeName","src":"12542:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3927,"mutability":"mutable","name":"rounding","nameLocation":"12566:8:19","nodeType":"VariableDeclaration","scope":3960,"src":"12557:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3102","typeString":"enum Math.Rounding"},"typeName":{"id":3926,"nodeType":"UserDefinedTypeName","pathNode":{"id":3925,"name":"Rounding","nameLocations":["12557:8:19"],"nodeType":"IdentifierPath","referencedDeclaration":3102,"src":"12557:8:19"},"referencedDeclaration":3102,"src":"12557:8:19","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3102","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"12541:34:19"},"returnParameters":{"id":3931,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3930,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3960,"src":"12599:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3929,"name":"uint256","nodeType":"ElementaryTypeName","src":"12599:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12598:9:19"},"scope":3961,"src":"12526:256:19","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3962,"src":"202:12582:19","usedErrors":[]}],"src":"103:12682:19"},"id":19},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","exportedSymbols":{"SafeCast":[5502]},"id":5503,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3963,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"192:23:20"},{"abstract":false,"baseContracts":[],"canonicalName":"SafeCast","contractDependencies":[],"contractKind":"library","documentation":{"id":3964,"nodeType":"StructuredDocumentation","src":"217:709:20","text":" @dev Wrappers over Solidity's uintXX/intXX casting operators with added overflow\n checks.\n Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n easily result in undesired exploitation or bugs, since developers usually\n assume that overflows raise errors. `SafeCast` restores this intuition by\n reverting the transaction when such an operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always.\n Can be combined with {SafeMath} and {SignedSafeMath} to extend it to smaller types, by performing\n all math on `uint256` and `int256` and then downcasting."},"fullyImplemented":true,"id":5502,"linearizedBaseContracts":[5502],"name":"SafeCast","nameLocation":"935:8:20","nodeType":"ContractDefinition","nodes":[{"body":{"id":3988,"nodeType":"Block","src":"1339:126:20","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3979,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3973,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3967,"src":"1357:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":3976,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1371:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":3975,"name":"uint248","nodeType":"ElementaryTypeName","src":"1371:7:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"}],"id":3974,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1366:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3977,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1366:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint248","typeString":"type(uint248)"}},"id":3978,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1380:3:20","memberName":"max","nodeType":"MemberAccess","src":"1366:17:20","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"src":"1357:26:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203234382062697473","id":3980,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1385:41:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_6ac19bba4607c9b45ff35f54fbc4ca64c29c7457109a16fa180ea77cdbda8593","typeString":"literal_string \"SafeCast: value doesn't fit in 248 bits\""},"value":"SafeCast: value doesn't fit in 248 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6ac19bba4607c9b45ff35f54fbc4ca64c29c7457109a16fa180ea77cdbda8593","typeString":"literal_string \"SafeCast: value doesn't fit in 248 bits\""}],"id":3972,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1349:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3981,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1349:78:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3982,"nodeType":"ExpressionStatement","src":"1349:78:20"},{"expression":{"arguments":[{"id":3985,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3967,"src":"1452:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3984,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1444:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":3983,"name":"uint248","nodeType":"ElementaryTypeName","src":"1444:7:20","typeDescriptions":{}}},"id":3986,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1444:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"functionReturnParameters":3971,"id":3987,"nodeType":"Return","src":"1437:21:20"}]},"documentation":{"id":3965,"nodeType":"StructuredDocumentation","src":"950:318:20","text":" @dev Returns the downcasted uint248 from uint256, reverting on\n overflow (when the input is greater than largest uint248).\n Counterpart to Solidity's `uint248` operator.\n Requirements:\n - input must fit into 248 bits\n _Available since v4.7._"},"id":3989,"implemented":true,"kind":"function","modifiers":[],"name":"toUint248","nameLocation":"1282:9:20","nodeType":"FunctionDefinition","parameters":{"id":3968,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3967,"mutability":"mutable","name":"value","nameLocation":"1300:5:20","nodeType":"VariableDeclaration","scope":3989,"src":"1292:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3966,"name":"uint256","nodeType":"ElementaryTypeName","src":"1292:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1291:15:20"},"returnParameters":{"id":3971,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3970,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3989,"src":"1330:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"},"typeName":{"id":3969,"name":"uint248","nodeType":"ElementaryTypeName","src":"1330:7:20","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"visibility":"internal"}],"src":"1329:9:20"},"scope":5502,"src":"1273:192:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4013,"nodeType":"Block","src":"1860:126:20","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4004,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3998,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3992,"src":"1878:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4001,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1892:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":4000,"name":"uint240","nodeType":"ElementaryTypeName","src":"1892:7:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"}],"id":3999,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1887:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4002,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1887:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint240","typeString":"type(uint240)"}},"id":4003,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1901:3:20","memberName":"max","nodeType":"MemberAccess","src":"1887:17:20","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"src":"1878:26:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203234302062697473","id":4005,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1906:41:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_375fa0f6cb9fb5845d214c630920cedf4424913ed6dc32c297d430efa3d61a87","typeString":"literal_string \"SafeCast: value doesn't fit in 240 bits\""},"value":"SafeCast: value doesn't fit in 240 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_375fa0f6cb9fb5845d214c630920cedf4424913ed6dc32c297d430efa3d61a87","typeString":"literal_string \"SafeCast: value doesn't fit in 240 bits\""}],"id":3997,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1870:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4006,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1870:78:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4007,"nodeType":"ExpressionStatement","src":"1870:78:20"},{"expression":{"arguments":[{"id":4010,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3992,"src":"1973:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4009,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1965:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":4008,"name":"uint240","nodeType":"ElementaryTypeName","src":"1965:7:20","typeDescriptions":{}}},"id":4011,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1965:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"functionReturnParameters":3996,"id":4012,"nodeType":"Return","src":"1958:21:20"}]},"documentation":{"id":3990,"nodeType":"StructuredDocumentation","src":"1471:318:20","text":" @dev Returns the downcasted uint240 from uint256, reverting on\n overflow (when the input is greater than largest uint240).\n Counterpart to Solidity's `uint240` operator.\n Requirements:\n - input must fit into 240 bits\n _Available since v4.7._"},"id":4014,"implemented":true,"kind":"function","modifiers":[],"name":"toUint240","nameLocation":"1803:9:20","nodeType":"FunctionDefinition","parameters":{"id":3993,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3992,"mutability":"mutable","name":"value","nameLocation":"1821:5:20","nodeType":"VariableDeclaration","scope":4014,"src":"1813:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3991,"name":"uint256","nodeType":"ElementaryTypeName","src":"1813:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1812:15:20"},"returnParameters":{"id":3996,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3995,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4014,"src":"1851:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"},"typeName":{"id":3994,"name":"uint240","nodeType":"ElementaryTypeName","src":"1851:7:20","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"visibility":"internal"}],"src":"1850:9:20"},"scope":5502,"src":"1794:192:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4038,"nodeType":"Block","src":"2381:126:20","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4029,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4023,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4017,"src":"2399:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4026,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2413:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":4025,"name":"uint232","nodeType":"ElementaryTypeName","src":"2413:7:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"}],"id":4024,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2408:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4027,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2408:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint232","typeString":"type(uint232)"}},"id":4028,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2422:3:20","memberName":"max","nodeType":"MemberAccess","src":"2408:17:20","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"src":"2399:26:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203233322062697473","id":4030,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2427:41:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_5797fb2c4589bd6a92752ce0eacaac67341e37ab28c96c2284ab897e7ac77957","typeString":"literal_string \"SafeCast: value doesn't fit in 232 bits\""},"value":"SafeCast: value doesn't fit in 232 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5797fb2c4589bd6a92752ce0eacaac67341e37ab28c96c2284ab897e7ac77957","typeString":"literal_string \"SafeCast: value doesn't fit in 232 bits\""}],"id":4022,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2391:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4031,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2391:78:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4032,"nodeType":"ExpressionStatement","src":"2391:78:20"},{"expression":{"arguments":[{"id":4035,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4017,"src":"2494:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4034,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2486:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":4033,"name":"uint232","nodeType":"ElementaryTypeName","src":"2486:7:20","typeDescriptions":{}}},"id":4036,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2486:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"functionReturnParameters":4021,"id":4037,"nodeType":"Return","src":"2479:21:20"}]},"documentation":{"id":4015,"nodeType":"StructuredDocumentation","src":"1992:318:20","text":" @dev Returns the downcasted uint232 from uint256, reverting on\n overflow (when the input is greater than largest uint232).\n Counterpart to Solidity's `uint232` operator.\n Requirements:\n - input must fit into 232 bits\n _Available since v4.7._"},"id":4039,"implemented":true,"kind":"function","modifiers":[],"name":"toUint232","nameLocation":"2324:9:20","nodeType":"FunctionDefinition","parameters":{"id":4018,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4017,"mutability":"mutable","name":"value","nameLocation":"2342:5:20","nodeType":"VariableDeclaration","scope":4039,"src":"2334:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4016,"name":"uint256","nodeType":"ElementaryTypeName","src":"2334:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2333:15:20"},"returnParameters":{"id":4021,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4020,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4039,"src":"2372:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"},"typeName":{"id":4019,"name":"uint232","nodeType":"ElementaryTypeName","src":"2372:7:20","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"visibility":"internal"}],"src":"2371:9:20"},"scope":5502,"src":"2315:192:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4063,"nodeType":"Block","src":"2902:126:20","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4054,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4048,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4042,"src":"2920:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4051,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2934:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":4050,"name":"uint224","nodeType":"ElementaryTypeName","src":"2934:7:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"}],"id":4049,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2929:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4052,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2929:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint224","typeString":"type(uint224)"}},"id":4053,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2943:3:20","memberName":"max","nodeType":"MemberAccess","src":"2929:17:20","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"2920:26:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203232342062697473","id":4055,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2948:41:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79","typeString":"literal_string \"SafeCast: value doesn't fit in 224 bits\""},"value":"SafeCast: value doesn't fit in 224 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79","typeString":"literal_string \"SafeCast: value doesn't fit in 224 bits\""}],"id":4047,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2912:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4056,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2912:78:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4057,"nodeType":"ExpressionStatement","src":"2912:78:20"},{"expression":{"arguments":[{"id":4060,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4042,"src":"3015:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4059,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3007:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":4058,"name":"uint224","nodeType":"ElementaryTypeName","src":"3007:7:20","typeDescriptions":{}}},"id":4061,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3007:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":4046,"id":4062,"nodeType":"Return","src":"3000:21:20"}]},"documentation":{"id":4040,"nodeType":"StructuredDocumentation","src":"2513:318:20","text":" @dev Returns the downcasted uint224 from uint256, reverting on\n overflow (when the input is greater than largest uint224).\n Counterpart to Solidity's `uint224` operator.\n Requirements:\n - input must fit into 224 bits\n _Available since v4.2._"},"id":4064,"implemented":true,"kind":"function","modifiers":[],"name":"toUint224","nameLocation":"2845:9:20","nodeType":"FunctionDefinition","parameters":{"id":4043,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4042,"mutability":"mutable","name":"value","nameLocation":"2863:5:20","nodeType":"VariableDeclaration","scope":4064,"src":"2855:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4041,"name":"uint256","nodeType":"ElementaryTypeName","src":"2855:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2854:15:20"},"returnParameters":{"id":4046,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4045,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4064,"src":"2893:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":4044,"name":"uint224","nodeType":"ElementaryTypeName","src":"2893:7:20","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"2892:9:20"},"scope":5502,"src":"2836:192:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4088,"nodeType":"Block","src":"3423:126:20","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4079,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4073,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4067,"src":"3441:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4076,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3455:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":4075,"name":"uint216","nodeType":"ElementaryTypeName","src":"3455:7:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"}],"id":4074,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3450:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4077,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3450:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint216","typeString":"type(uint216)"}},"id":4078,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3464:3:20","memberName":"max","nodeType":"MemberAccess","src":"3450:17:20","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"src":"3441:26:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203231362062697473","id":4080,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3469:41:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_8966adc0aad8dc91b207c69c3eb4937e498af8cc706cfe7edd55f3a6ea53488d","typeString":"literal_string \"SafeCast: value doesn't fit in 216 bits\""},"value":"SafeCast: value doesn't fit in 216 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8966adc0aad8dc91b207c69c3eb4937e498af8cc706cfe7edd55f3a6ea53488d","typeString":"literal_string \"SafeCast: value doesn't fit in 216 bits\""}],"id":4072,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3433:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4081,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3433:78:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4082,"nodeType":"ExpressionStatement","src":"3433:78:20"},{"expression":{"arguments":[{"id":4085,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4067,"src":"3536:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4084,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3528:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":4083,"name":"uint216","nodeType":"ElementaryTypeName","src":"3528:7:20","typeDescriptions":{}}},"id":4086,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3528:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"functionReturnParameters":4071,"id":4087,"nodeType":"Return","src":"3521:21:20"}]},"documentation":{"id":4065,"nodeType":"StructuredDocumentation","src":"3034:318:20","text":" @dev Returns the downcasted uint216 from uint256, reverting on\n overflow (when the input is greater than largest uint216).\n Counterpart to Solidity's `uint216` operator.\n Requirements:\n - input must fit into 216 bits\n _Available since v4.7._"},"id":4089,"implemented":true,"kind":"function","modifiers":[],"name":"toUint216","nameLocation":"3366:9:20","nodeType":"FunctionDefinition","parameters":{"id":4068,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4067,"mutability":"mutable","name":"value","nameLocation":"3384:5:20","nodeType":"VariableDeclaration","scope":4089,"src":"3376:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4066,"name":"uint256","nodeType":"ElementaryTypeName","src":"3376:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3375:15:20"},"returnParameters":{"id":4071,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4070,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4089,"src":"3414:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"},"typeName":{"id":4069,"name":"uint216","nodeType":"ElementaryTypeName","src":"3414:7:20","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"visibility":"internal"}],"src":"3413:9:20"},"scope":5502,"src":"3357:192:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4113,"nodeType":"Block","src":"3944:126:20","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4098,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4092,"src":"3962:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4101,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3976:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":4100,"name":"uint208","nodeType":"ElementaryTypeName","src":"3976:7:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"}],"id":4099,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3971:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4102,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3971:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint208","typeString":"type(uint208)"}},"id":4103,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3985:3:20","memberName":"max","nodeType":"MemberAccess","src":"3971:17:20","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"src":"3962:26:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203230382062697473","id":4105,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3990:41:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_43d81217fa633fa1c6e88855de94fb990f5831ac266b0a90afa660e986ab5e23","typeString":"literal_string \"SafeCast: value doesn't fit in 208 bits\""},"value":"SafeCast: value doesn't fit in 208 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_43d81217fa633fa1c6e88855de94fb990f5831ac266b0a90afa660e986ab5e23","typeString":"literal_string \"SafeCast: value doesn't fit in 208 bits\""}],"id":4097,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3954:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4106,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3954:78:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4107,"nodeType":"ExpressionStatement","src":"3954:78:20"},{"expression":{"arguments":[{"id":4110,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4092,"src":"4057:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4109,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4049:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":4108,"name":"uint208","nodeType":"ElementaryTypeName","src":"4049:7:20","typeDescriptions":{}}},"id":4111,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4049:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":4096,"id":4112,"nodeType":"Return","src":"4042:21:20"}]},"documentation":{"id":4090,"nodeType":"StructuredDocumentation","src":"3555:318:20","text":" @dev Returns the downcasted uint208 from uint256, reverting on\n overflow (when the input is greater than largest uint208).\n Counterpart to Solidity's `uint208` operator.\n Requirements:\n - input must fit into 208 bits\n _Available since v4.7._"},"id":4114,"implemented":true,"kind":"function","modifiers":[],"name":"toUint208","nameLocation":"3887:9:20","nodeType":"FunctionDefinition","parameters":{"id":4093,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4092,"mutability":"mutable","name":"value","nameLocation":"3905:5:20","nodeType":"VariableDeclaration","scope":4114,"src":"3897:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4091,"name":"uint256","nodeType":"ElementaryTypeName","src":"3897:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3896:15:20"},"returnParameters":{"id":4096,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4095,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4114,"src":"3935:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":4094,"name":"uint208","nodeType":"ElementaryTypeName","src":"3935:7:20","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"3934:9:20"},"scope":5502,"src":"3878:192:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4138,"nodeType":"Block","src":"4465:126:20","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4129,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4123,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4117,"src":"4483:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4126,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4497:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":4125,"name":"uint200","nodeType":"ElementaryTypeName","src":"4497:7:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"}],"id":4124,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4492:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4127,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4492:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint200","typeString":"type(uint200)"}},"id":4128,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4506:3:20","memberName":"max","nodeType":"MemberAccess","src":"4492:17:20","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"src":"4483:26:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203230302062697473","id":4130,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4511:41:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_df8130f294fe2698967ea9ead82c4da9454490567d976d00551e0174e655314c","typeString":"literal_string \"SafeCast: value doesn't fit in 200 bits\""},"value":"SafeCast: value doesn't fit in 200 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_df8130f294fe2698967ea9ead82c4da9454490567d976d00551e0174e655314c","typeString":"literal_string \"SafeCast: value doesn't fit in 200 bits\""}],"id":4122,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4475:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4131,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4475:78:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4132,"nodeType":"ExpressionStatement","src":"4475:78:20"},{"expression":{"arguments":[{"id":4135,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4117,"src":"4578:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4134,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4570:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":4133,"name":"uint200","nodeType":"ElementaryTypeName","src":"4570:7:20","typeDescriptions":{}}},"id":4136,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4570:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"functionReturnParameters":4121,"id":4137,"nodeType":"Return","src":"4563:21:20"}]},"documentation":{"id":4115,"nodeType":"StructuredDocumentation","src":"4076:318:20","text":" @dev Returns the downcasted uint200 from uint256, reverting on\n overflow (when the input is greater than largest uint200).\n Counterpart to Solidity's `uint200` operator.\n Requirements:\n - input must fit into 200 bits\n _Available since v4.7._"},"id":4139,"implemented":true,"kind":"function","modifiers":[],"name":"toUint200","nameLocation":"4408:9:20","nodeType":"FunctionDefinition","parameters":{"id":4118,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4117,"mutability":"mutable","name":"value","nameLocation":"4426:5:20","nodeType":"VariableDeclaration","scope":4139,"src":"4418:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4116,"name":"uint256","nodeType":"ElementaryTypeName","src":"4418:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4417:15:20"},"returnParameters":{"id":4121,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4120,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4139,"src":"4456:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"},"typeName":{"id":4119,"name":"uint200","nodeType":"ElementaryTypeName","src":"4456:7:20","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"visibility":"internal"}],"src":"4455:9:20"},"scope":5502,"src":"4399:192:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4163,"nodeType":"Block","src":"4986:126:20","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4154,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4148,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4142,"src":"5004:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4151,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5018:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":4150,"name":"uint192","nodeType":"ElementaryTypeName","src":"5018:7:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"}],"id":4149,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5013:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4152,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5013:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint192","typeString":"type(uint192)"}},"id":4153,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5027:3:20","memberName":"max","nodeType":"MemberAccess","src":"5013:17:20","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"src":"5004:26:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203139322062697473","id":4155,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5032:41:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_112978800f12a1c4f1eab82789f7b6defd49dc1c17ba270a84ffc28392fb05ae","typeString":"literal_string \"SafeCast: value doesn't fit in 192 bits\""},"value":"SafeCast: value doesn't fit in 192 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_112978800f12a1c4f1eab82789f7b6defd49dc1c17ba270a84ffc28392fb05ae","typeString":"literal_string \"SafeCast: value doesn't fit in 192 bits\""}],"id":4147,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4996:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4156,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4996:78:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4157,"nodeType":"ExpressionStatement","src":"4996:78:20"},{"expression":{"arguments":[{"id":4160,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4142,"src":"5099:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4159,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5091:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":4158,"name":"uint192","nodeType":"ElementaryTypeName","src":"5091:7:20","typeDescriptions":{}}},"id":4161,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5091:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"functionReturnParameters":4146,"id":4162,"nodeType":"Return","src":"5084:21:20"}]},"documentation":{"id":4140,"nodeType":"StructuredDocumentation","src":"4597:318:20","text":" @dev Returns the downcasted uint192 from uint256, reverting on\n overflow (when the input is greater than largest uint192).\n Counterpart to Solidity's `uint192` operator.\n Requirements:\n - input must fit into 192 bits\n _Available since v4.7._"},"id":4164,"implemented":true,"kind":"function","modifiers":[],"name":"toUint192","nameLocation":"4929:9:20","nodeType":"FunctionDefinition","parameters":{"id":4143,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4142,"mutability":"mutable","name":"value","nameLocation":"4947:5:20","nodeType":"VariableDeclaration","scope":4164,"src":"4939:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4141,"name":"uint256","nodeType":"ElementaryTypeName","src":"4939:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4938:15:20"},"returnParameters":{"id":4146,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4145,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4164,"src":"4977:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"},"typeName":{"id":4144,"name":"uint192","nodeType":"ElementaryTypeName","src":"4977:7:20","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"visibility":"internal"}],"src":"4976:9:20"},"scope":5502,"src":"4920:192:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4188,"nodeType":"Block","src":"5507:126:20","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4179,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4173,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4167,"src":"5525:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4176,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5539:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":4175,"name":"uint184","nodeType":"ElementaryTypeName","src":"5539:7:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"}],"id":4174,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5534:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4177,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5534:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint184","typeString":"type(uint184)"}},"id":4178,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5548:3:20","memberName":"max","nodeType":"MemberAccess","src":"5534:17:20","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"src":"5525:26:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203138342062697473","id":4180,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5553:41:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_86c53d89b1944d561ecfa42e859033241d1df6ea8d42a57ae02f79d45de4aa75","typeString":"literal_string \"SafeCast: value doesn't fit in 184 bits\""},"value":"SafeCast: value doesn't fit in 184 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_86c53d89b1944d561ecfa42e859033241d1df6ea8d42a57ae02f79d45de4aa75","typeString":"literal_string \"SafeCast: value doesn't fit in 184 bits\""}],"id":4172,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5517:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4181,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5517:78:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4182,"nodeType":"ExpressionStatement","src":"5517:78:20"},{"expression":{"arguments":[{"id":4185,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4167,"src":"5620:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4184,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5612:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":4183,"name":"uint184","nodeType":"ElementaryTypeName","src":"5612:7:20","typeDescriptions":{}}},"id":4186,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5612:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"functionReturnParameters":4171,"id":4187,"nodeType":"Return","src":"5605:21:20"}]},"documentation":{"id":4165,"nodeType":"StructuredDocumentation","src":"5118:318:20","text":" @dev Returns the downcasted uint184 from uint256, reverting on\n overflow (when the input is greater than largest uint184).\n Counterpart to Solidity's `uint184` operator.\n Requirements:\n - input must fit into 184 bits\n _Available since v4.7._"},"id":4189,"implemented":true,"kind":"function","modifiers":[],"name":"toUint184","nameLocation":"5450:9:20","nodeType":"FunctionDefinition","parameters":{"id":4168,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4167,"mutability":"mutable","name":"value","nameLocation":"5468:5:20","nodeType":"VariableDeclaration","scope":4189,"src":"5460:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4166,"name":"uint256","nodeType":"ElementaryTypeName","src":"5460:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5459:15:20"},"returnParameters":{"id":4171,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4170,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4189,"src":"5498:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"},"typeName":{"id":4169,"name":"uint184","nodeType":"ElementaryTypeName","src":"5498:7:20","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"visibility":"internal"}],"src":"5497:9:20"},"scope":5502,"src":"5441:192:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4213,"nodeType":"Block","src":"6028:126:20","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4204,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4198,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4192,"src":"6046:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4201,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6060:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":4200,"name":"uint176","nodeType":"ElementaryTypeName","src":"6060:7:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"}],"id":4199,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6055:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4202,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6055:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint176","typeString":"type(uint176)"}},"id":4203,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6069:3:20","memberName":"max","nodeType":"MemberAccess","src":"6055:17:20","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"src":"6046:26:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203137362062697473","id":4205,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6074:41:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_4069e970f734339c7841e84a1b26f503bff22b76884c1168dc24e2e6af9b1e30","typeString":"literal_string \"SafeCast: value doesn't fit in 176 bits\""},"value":"SafeCast: value doesn't fit in 176 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4069e970f734339c7841e84a1b26f503bff22b76884c1168dc24e2e6af9b1e30","typeString":"literal_string \"SafeCast: value doesn't fit in 176 bits\""}],"id":4197,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6038:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4206,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6038:78:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4207,"nodeType":"ExpressionStatement","src":"6038:78:20"},{"expression":{"arguments":[{"id":4210,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4192,"src":"6141:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4209,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6133:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":4208,"name":"uint176","nodeType":"ElementaryTypeName","src":"6133:7:20","typeDescriptions":{}}},"id":4211,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6133:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"functionReturnParameters":4196,"id":4212,"nodeType":"Return","src":"6126:21:20"}]},"documentation":{"id":4190,"nodeType":"StructuredDocumentation","src":"5639:318:20","text":" @dev Returns the downcasted uint176 from uint256, reverting on\n overflow (when the input is greater than largest uint176).\n Counterpart to Solidity's `uint176` operator.\n Requirements:\n - input must fit into 176 bits\n _Available since v4.7._"},"id":4214,"implemented":true,"kind":"function","modifiers":[],"name":"toUint176","nameLocation":"5971:9:20","nodeType":"FunctionDefinition","parameters":{"id":4193,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4192,"mutability":"mutable","name":"value","nameLocation":"5989:5:20","nodeType":"VariableDeclaration","scope":4214,"src":"5981:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4191,"name":"uint256","nodeType":"ElementaryTypeName","src":"5981:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5980:15:20"},"returnParameters":{"id":4196,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4195,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4214,"src":"6019:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"},"typeName":{"id":4194,"name":"uint176","nodeType":"ElementaryTypeName","src":"6019:7:20","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"visibility":"internal"}],"src":"6018:9:20"},"scope":5502,"src":"5962:192:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4238,"nodeType":"Block","src":"6549:126:20","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4229,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4223,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4217,"src":"6567:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4226,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6581:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":4225,"name":"uint168","nodeType":"ElementaryTypeName","src":"6581:7:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"}],"id":4224,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6576:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4227,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6576:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint168","typeString":"type(uint168)"}},"id":4228,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6590:3:20","memberName":"max","nodeType":"MemberAccess","src":"6576:17:20","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"src":"6567:26:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203136382062697473","id":4230,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6595:41:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_67ef32a3cbe7b34392347d335b0a7ae95c74a34ca40e4efb58f6c9a3154e85a1","typeString":"literal_string \"SafeCast: value doesn't fit in 168 bits\""},"value":"SafeCast: value doesn't fit in 168 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_67ef32a3cbe7b34392347d335b0a7ae95c74a34ca40e4efb58f6c9a3154e85a1","typeString":"literal_string \"SafeCast: value doesn't fit in 168 bits\""}],"id":4222,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6559:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4231,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6559:78:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4232,"nodeType":"ExpressionStatement","src":"6559:78:20"},{"expression":{"arguments":[{"id":4235,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4217,"src":"6662:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4234,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6654:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":4233,"name":"uint168","nodeType":"ElementaryTypeName","src":"6654:7:20","typeDescriptions":{}}},"id":4236,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6654:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"functionReturnParameters":4221,"id":4237,"nodeType":"Return","src":"6647:21:20"}]},"documentation":{"id":4215,"nodeType":"StructuredDocumentation","src":"6160:318:20","text":" @dev Returns the downcasted uint168 from uint256, reverting on\n overflow (when the input is greater than largest uint168).\n Counterpart to Solidity's `uint168` operator.\n Requirements:\n - input must fit into 168 bits\n _Available since v4.7._"},"id":4239,"implemented":true,"kind":"function","modifiers":[],"name":"toUint168","nameLocation":"6492:9:20","nodeType":"FunctionDefinition","parameters":{"id":4218,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4217,"mutability":"mutable","name":"value","nameLocation":"6510:5:20","nodeType":"VariableDeclaration","scope":4239,"src":"6502:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4216,"name":"uint256","nodeType":"ElementaryTypeName","src":"6502:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6501:15:20"},"returnParameters":{"id":4221,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4220,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4239,"src":"6540:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"},"typeName":{"id":4219,"name":"uint168","nodeType":"ElementaryTypeName","src":"6540:7:20","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"visibility":"internal"}],"src":"6539:9:20"},"scope":5502,"src":"6483:192:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4263,"nodeType":"Block","src":"7070:126:20","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4254,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4248,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4242,"src":"7088:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4251,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7102:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":4250,"name":"uint160","nodeType":"ElementaryTypeName","src":"7102:7:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"}],"id":4249,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7097:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4252,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7097:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint160","typeString":"type(uint160)"}},"id":4253,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7111:3:20","memberName":"max","nodeType":"MemberAccess","src":"7097:17:20","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"7088:26:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203136302062697473","id":4255,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7116:41:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_976ecce9083debfe29d3a99b955facf24b8725f1b964d1a5bb4197ffcd60ab9d","typeString":"literal_string \"SafeCast: value doesn't fit in 160 bits\""},"value":"SafeCast: value doesn't fit in 160 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_976ecce9083debfe29d3a99b955facf24b8725f1b964d1a5bb4197ffcd60ab9d","typeString":"literal_string \"SafeCast: value doesn't fit in 160 bits\""}],"id":4247,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7080:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4256,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7080:78:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4257,"nodeType":"ExpressionStatement","src":"7080:78:20"},{"expression":{"arguments":[{"id":4260,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4242,"src":"7183:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4259,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7175:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":4258,"name":"uint160","nodeType":"ElementaryTypeName","src":"7175:7:20","typeDescriptions":{}}},"id":4261,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7175:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"functionReturnParameters":4246,"id":4262,"nodeType":"Return","src":"7168:21:20"}]},"documentation":{"id":4240,"nodeType":"StructuredDocumentation","src":"6681:318:20","text":" @dev Returns the downcasted uint160 from uint256, reverting on\n overflow (when the input is greater than largest uint160).\n Counterpart to Solidity's `uint160` operator.\n Requirements:\n - input must fit into 160 bits\n _Available since v4.7._"},"id":4264,"implemented":true,"kind":"function","modifiers":[],"name":"toUint160","nameLocation":"7013:9:20","nodeType":"FunctionDefinition","parameters":{"id":4243,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4242,"mutability":"mutable","name":"value","nameLocation":"7031:5:20","nodeType":"VariableDeclaration","scope":4264,"src":"7023:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4241,"name":"uint256","nodeType":"ElementaryTypeName","src":"7023:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7022:15:20"},"returnParameters":{"id":4246,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4245,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4264,"src":"7061:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":4244,"name":"uint160","nodeType":"ElementaryTypeName","src":"7061:7:20","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"7060:9:20"},"scope":5502,"src":"7004:192:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4288,"nodeType":"Block","src":"7591:126:20","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4279,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4273,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4267,"src":"7609:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4276,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7623:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":4275,"name":"uint152","nodeType":"ElementaryTypeName","src":"7623:7:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"}],"id":4274,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7618:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4277,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7618:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint152","typeString":"type(uint152)"}},"id":4278,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7632:3:20","memberName":"max","nodeType":"MemberAccess","src":"7618:17:20","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"src":"7609:26:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203135322062697473","id":4280,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7637:41:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_211cad43a2caf5f01e34af51190b8a7b6f3d9c195bd25586ea12242191b97831","typeString":"literal_string \"SafeCast: value doesn't fit in 152 bits\""},"value":"SafeCast: value doesn't fit in 152 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_211cad43a2caf5f01e34af51190b8a7b6f3d9c195bd25586ea12242191b97831","typeString":"literal_string \"SafeCast: value doesn't fit in 152 bits\""}],"id":4272,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7601:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4281,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7601:78:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4282,"nodeType":"ExpressionStatement","src":"7601:78:20"},{"expression":{"arguments":[{"id":4285,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4267,"src":"7704:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4284,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7696:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":4283,"name":"uint152","nodeType":"ElementaryTypeName","src":"7696:7:20","typeDescriptions":{}}},"id":4286,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7696:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"functionReturnParameters":4271,"id":4287,"nodeType":"Return","src":"7689:21:20"}]},"documentation":{"id":4265,"nodeType":"StructuredDocumentation","src":"7202:318:20","text":" @dev Returns the downcasted uint152 from uint256, reverting on\n overflow (when the input is greater than largest uint152).\n Counterpart to Solidity's `uint152` operator.\n Requirements:\n - input must fit into 152 bits\n _Available since v4.7._"},"id":4289,"implemented":true,"kind":"function","modifiers":[],"name":"toUint152","nameLocation":"7534:9:20","nodeType":"FunctionDefinition","parameters":{"id":4268,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4267,"mutability":"mutable","name":"value","nameLocation":"7552:5:20","nodeType":"VariableDeclaration","scope":4289,"src":"7544:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4266,"name":"uint256","nodeType":"ElementaryTypeName","src":"7544:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7543:15:20"},"returnParameters":{"id":4271,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4270,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4289,"src":"7582:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"},"typeName":{"id":4269,"name":"uint152","nodeType":"ElementaryTypeName","src":"7582:7:20","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"visibility":"internal"}],"src":"7581:9:20"},"scope":5502,"src":"7525:192:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4313,"nodeType":"Block","src":"8112:126:20","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4304,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4298,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4292,"src":"8130:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4301,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8144:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":4300,"name":"uint144","nodeType":"ElementaryTypeName","src":"8144:7:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"}],"id":4299,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8139:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4302,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8139:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint144","typeString":"type(uint144)"}},"id":4303,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8153:3:20","memberName":"max","nodeType":"MemberAccess","src":"8139:17:20","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"src":"8130:26:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203134342062697473","id":4305,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8158:41:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_17d8c5a6d3b2fd2517ba2e4a2ac70a3367cd362448f8338aaa6edf8bfd812bab","typeString":"literal_string \"SafeCast: value doesn't fit in 144 bits\""},"value":"SafeCast: value doesn't fit in 144 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_17d8c5a6d3b2fd2517ba2e4a2ac70a3367cd362448f8338aaa6edf8bfd812bab","typeString":"literal_string \"SafeCast: value doesn't fit in 144 bits\""}],"id":4297,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8122:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4306,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8122:78:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4307,"nodeType":"ExpressionStatement","src":"8122:78:20"},{"expression":{"arguments":[{"id":4310,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4292,"src":"8225:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4309,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8217:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":4308,"name":"uint144","nodeType":"ElementaryTypeName","src":"8217:7:20","typeDescriptions":{}}},"id":4311,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8217:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"functionReturnParameters":4296,"id":4312,"nodeType":"Return","src":"8210:21:20"}]},"documentation":{"id":4290,"nodeType":"StructuredDocumentation","src":"7723:318:20","text":" @dev Returns the downcasted uint144 from uint256, reverting on\n overflow (when the input is greater than largest uint144).\n Counterpart to Solidity's `uint144` operator.\n Requirements:\n - input must fit into 144 bits\n _Available since v4.7._"},"id":4314,"implemented":true,"kind":"function","modifiers":[],"name":"toUint144","nameLocation":"8055:9:20","nodeType":"FunctionDefinition","parameters":{"id":4293,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4292,"mutability":"mutable","name":"value","nameLocation":"8073:5:20","nodeType":"VariableDeclaration","scope":4314,"src":"8065:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4291,"name":"uint256","nodeType":"ElementaryTypeName","src":"8065:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8064:15:20"},"returnParameters":{"id":4296,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4295,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4314,"src":"8103:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"},"typeName":{"id":4294,"name":"uint144","nodeType":"ElementaryTypeName","src":"8103:7:20","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"visibility":"internal"}],"src":"8102:9:20"},"scope":5502,"src":"8046:192:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4338,"nodeType":"Block","src":"8633:126:20","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4323,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4317,"src":"8651:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4326,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8665:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":4325,"name":"uint136","nodeType":"ElementaryTypeName","src":"8665:7:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"}],"id":4324,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8660:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4327,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8660:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint136","typeString":"type(uint136)"}},"id":4328,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8674:3:20","memberName":"max","nodeType":"MemberAccess","src":"8660:17:20","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"src":"8651:26:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203133362062697473","id":4330,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8679:41:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_8b1f81e2e2913e1cee9dba7bcd9837bbf8a8122edaac4afc578271db3c25a56a","typeString":"literal_string \"SafeCast: value doesn't fit in 136 bits\""},"value":"SafeCast: value doesn't fit in 136 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8b1f81e2e2913e1cee9dba7bcd9837bbf8a8122edaac4afc578271db3c25a56a","typeString":"literal_string \"SafeCast: value doesn't fit in 136 bits\""}],"id":4322,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8643:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4331,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8643:78:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4332,"nodeType":"ExpressionStatement","src":"8643:78:20"},{"expression":{"arguments":[{"id":4335,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4317,"src":"8746:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4334,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8738:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":4333,"name":"uint136","nodeType":"ElementaryTypeName","src":"8738:7:20","typeDescriptions":{}}},"id":4336,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8738:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"functionReturnParameters":4321,"id":4337,"nodeType":"Return","src":"8731:21:20"}]},"documentation":{"id":4315,"nodeType":"StructuredDocumentation","src":"8244:318:20","text":" @dev Returns the downcasted uint136 from uint256, reverting on\n overflow (when the input is greater than largest uint136).\n Counterpart to Solidity's `uint136` operator.\n Requirements:\n - input must fit into 136 bits\n _Available since v4.7._"},"id":4339,"implemented":true,"kind":"function","modifiers":[],"name":"toUint136","nameLocation":"8576:9:20","nodeType":"FunctionDefinition","parameters":{"id":4318,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4317,"mutability":"mutable","name":"value","nameLocation":"8594:5:20","nodeType":"VariableDeclaration","scope":4339,"src":"8586:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4316,"name":"uint256","nodeType":"ElementaryTypeName","src":"8586:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8585:15:20"},"returnParameters":{"id":4321,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4320,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4339,"src":"8624:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"},"typeName":{"id":4319,"name":"uint136","nodeType":"ElementaryTypeName","src":"8624:7:20","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"visibility":"internal"}],"src":"8623:9:20"},"scope":5502,"src":"8567:192:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4363,"nodeType":"Block","src":"9154:126:20","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4354,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4348,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4342,"src":"9172:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4351,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9186:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":4350,"name":"uint128","nodeType":"ElementaryTypeName","src":"9186:7:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"}],"id":4349,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9181:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4352,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9181:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint128","typeString":"type(uint128)"}},"id":4353,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9195:3:20","memberName":"max","nodeType":"MemberAccess","src":"9181:17:20","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"9172:26:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203132382062697473","id":4355,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9200:41:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_47a1e201974f94d3d1a31c8b08ae18c6966c758bdcd4400020012b98cc55426c","typeString":"literal_string \"SafeCast: value doesn't fit in 128 bits\""},"value":"SafeCast: value doesn't fit in 128 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_47a1e201974f94d3d1a31c8b08ae18c6966c758bdcd4400020012b98cc55426c","typeString":"literal_string \"SafeCast: value doesn't fit in 128 bits\""}],"id":4347,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9164:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4356,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9164:78:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4357,"nodeType":"ExpressionStatement","src":"9164:78:20"},{"expression":{"arguments":[{"id":4360,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4342,"src":"9267:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4359,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9259:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":4358,"name":"uint128","nodeType":"ElementaryTypeName","src":"9259:7:20","typeDescriptions":{}}},"id":4361,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9259:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"functionReturnParameters":4346,"id":4362,"nodeType":"Return","src":"9252:21:20"}]},"documentation":{"id":4340,"nodeType":"StructuredDocumentation","src":"8765:318:20","text":" @dev Returns the downcasted uint128 from uint256, reverting on\n overflow (when the input is greater than largest uint128).\n Counterpart to Solidity's `uint128` operator.\n Requirements:\n - input must fit into 128 bits\n _Available since v2.5._"},"id":4364,"implemented":true,"kind":"function","modifiers":[],"name":"toUint128","nameLocation":"9097:9:20","nodeType":"FunctionDefinition","parameters":{"id":4343,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4342,"mutability":"mutable","name":"value","nameLocation":"9115:5:20","nodeType":"VariableDeclaration","scope":4364,"src":"9107:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4341,"name":"uint256","nodeType":"ElementaryTypeName","src":"9107:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9106:15:20"},"returnParameters":{"id":4346,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4345,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4364,"src":"9145:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":4344,"name":"uint128","nodeType":"ElementaryTypeName","src":"9145:7:20","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"9144:9:20"},"scope":5502,"src":"9088:192:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4388,"nodeType":"Block","src":"9675:126:20","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4379,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4373,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4367,"src":"9693:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4376,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9707:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":4375,"name":"uint120","nodeType":"ElementaryTypeName","src":"9707:7:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"}],"id":4374,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9702:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4377,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9702:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint120","typeString":"type(uint120)"}},"id":4378,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9716:3:20","memberName":"max","nodeType":"MemberAccess","src":"9702:17:20","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"src":"9693:26:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203132302062697473","id":4380,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9721:41:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_3c40c26bb27060cce77002ca0c426dcc1bef2d367c195ca2eb24bd8b2cc1bb09","typeString":"literal_string \"SafeCast: value doesn't fit in 120 bits\""},"value":"SafeCast: value doesn't fit in 120 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3c40c26bb27060cce77002ca0c426dcc1bef2d367c195ca2eb24bd8b2cc1bb09","typeString":"literal_string \"SafeCast: value doesn't fit in 120 bits\""}],"id":4372,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9685:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4381,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9685:78:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4382,"nodeType":"ExpressionStatement","src":"9685:78:20"},{"expression":{"arguments":[{"id":4385,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4367,"src":"9788:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4384,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9780:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":4383,"name":"uint120","nodeType":"ElementaryTypeName","src":"9780:7:20","typeDescriptions":{}}},"id":4386,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9780:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"functionReturnParameters":4371,"id":4387,"nodeType":"Return","src":"9773:21:20"}]},"documentation":{"id":4365,"nodeType":"StructuredDocumentation","src":"9286:318:20","text":" @dev Returns the downcasted uint120 from uint256, reverting on\n overflow (when the input is greater than largest uint120).\n Counterpart to Solidity's `uint120` operator.\n Requirements:\n - input must fit into 120 bits\n _Available since v4.7._"},"id":4389,"implemented":true,"kind":"function","modifiers":[],"name":"toUint120","nameLocation":"9618:9:20","nodeType":"FunctionDefinition","parameters":{"id":4368,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4367,"mutability":"mutable","name":"value","nameLocation":"9636:5:20","nodeType":"VariableDeclaration","scope":4389,"src":"9628:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4366,"name":"uint256","nodeType":"ElementaryTypeName","src":"9628:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9627:15:20"},"returnParameters":{"id":4371,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4370,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4389,"src":"9666:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"},"typeName":{"id":4369,"name":"uint120","nodeType":"ElementaryTypeName","src":"9666:7:20","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"visibility":"internal"}],"src":"9665:9:20"},"scope":5502,"src":"9609:192:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4413,"nodeType":"Block","src":"10196:126:20","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4404,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4398,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4392,"src":"10214:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4401,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10228:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":4400,"name":"uint112","nodeType":"ElementaryTypeName","src":"10228:7:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"}],"id":4399,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10223:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4402,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10223:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint112","typeString":"type(uint112)"}},"id":4403,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10237:3:20","memberName":"max","nodeType":"MemberAccess","src":"10223:17:20","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"10214:26:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203131322062697473","id":4405,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10242:41:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_45659ae152ef697531e1c1115de07c87af91ac22466c3e76b808821799776efd","typeString":"literal_string \"SafeCast: value doesn't fit in 112 bits\""},"value":"SafeCast: value doesn't fit in 112 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_45659ae152ef697531e1c1115de07c87af91ac22466c3e76b808821799776efd","typeString":"literal_string \"SafeCast: value doesn't fit in 112 bits\""}],"id":4397,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10206:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4406,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10206:78:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4407,"nodeType":"ExpressionStatement","src":"10206:78:20"},{"expression":{"arguments":[{"id":4410,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4392,"src":"10309:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4409,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10301:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":4408,"name":"uint112","nodeType":"ElementaryTypeName","src":"10301:7:20","typeDescriptions":{}}},"id":4411,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10301:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"functionReturnParameters":4396,"id":4412,"nodeType":"Return","src":"10294:21:20"}]},"documentation":{"id":4390,"nodeType":"StructuredDocumentation","src":"9807:318:20","text":" @dev Returns the downcasted uint112 from uint256, reverting on\n overflow (when the input is greater than largest uint112).\n Counterpart to Solidity's `uint112` operator.\n Requirements:\n - input must fit into 112 bits\n _Available since v4.7._"},"id":4414,"implemented":true,"kind":"function","modifiers":[],"name":"toUint112","nameLocation":"10139:9:20","nodeType":"FunctionDefinition","parameters":{"id":4393,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4392,"mutability":"mutable","name":"value","nameLocation":"10157:5:20","nodeType":"VariableDeclaration","scope":4414,"src":"10149:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4391,"name":"uint256","nodeType":"ElementaryTypeName","src":"10149:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10148:15:20"},"returnParameters":{"id":4396,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4395,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4414,"src":"10187:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":4394,"name":"uint112","nodeType":"ElementaryTypeName","src":"10187:7:20","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"}],"src":"10186:9:20"},"scope":5502,"src":"10130:192:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4438,"nodeType":"Block","src":"10717:126:20","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4429,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4423,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4417,"src":"10735:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4426,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10749:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":4425,"name":"uint104","nodeType":"ElementaryTypeName","src":"10749:7:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"}],"id":4424,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10744:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4427,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10744:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint104","typeString":"type(uint104)"}},"id":4428,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10758:3:20","memberName":"max","nodeType":"MemberAccess","src":"10744:17:20","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"src":"10735:26:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203130342062697473","id":4430,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10763:41:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_5d7f3e1b7e9f9a06fded6b093c6fd1473ca0a14cc4bb683db904e803e2482981","typeString":"literal_string \"SafeCast: value doesn't fit in 104 bits\""},"value":"SafeCast: value doesn't fit in 104 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5d7f3e1b7e9f9a06fded6b093c6fd1473ca0a14cc4bb683db904e803e2482981","typeString":"literal_string \"SafeCast: value doesn't fit in 104 bits\""}],"id":4422,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10727:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4431,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10727:78:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4432,"nodeType":"ExpressionStatement","src":"10727:78:20"},{"expression":{"arguments":[{"id":4435,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4417,"src":"10830:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4434,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10822:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":4433,"name":"uint104","nodeType":"ElementaryTypeName","src":"10822:7:20","typeDescriptions":{}}},"id":4436,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10822:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"functionReturnParameters":4421,"id":4437,"nodeType":"Return","src":"10815:21:20"}]},"documentation":{"id":4415,"nodeType":"StructuredDocumentation","src":"10328:318:20","text":" @dev Returns the downcasted uint104 from uint256, reverting on\n overflow (when the input is greater than largest uint104).\n Counterpart to Solidity's `uint104` operator.\n Requirements:\n - input must fit into 104 bits\n _Available since v4.7._"},"id":4439,"implemented":true,"kind":"function","modifiers":[],"name":"toUint104","nameLocation":"10660:9:20","nodeType":"FunctionDefinition","parameters":{"id":4418,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4417,"mutability":"mutable","name":"value","nameLocation":"10678:5:20","nodeType":"VariableDeclaration","scope":4439,"src":"10670:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4416,"name":"uint256","nodeType":"ElementaryTypeName","src":"10670:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10669:15:20"},"returnParameters":{"id":4421,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4420,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4439,"src":"10708:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"},"typeName":{"id":4419,"name":"uint104","nodeType":"ElementaryTypeName","src":"10708:7:20","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"visibility":"internal"}],"src":"10707:9:20"},"scope":5502,"src":"10651:192:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4463,"nodeType":"Block","src":"11232:123:20","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4448,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4442,"src":"11250:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4451,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11264:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":4450,"name":"uint96","nodeType":"ElementaryTypeName","src":"11264:6:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"}],"id":4449,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11259:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4452,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11259:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint96","typeString":"type(uint96)"}},"id":4453,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11272:3:20","memberName":"max","nodeType":"MemberAccess","src":"11259:16:20","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"11250:25:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2039362062697473","id":4455,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11277:40:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_06d20189090e973729391526269baef79c35dd621633195648e5f8309eef9e19","typeString":"literal_string \"SafeCast: value doesn't fit in 96 bits\""},"value":"SafeCast: value doesn't fit in 96 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_06d20189090e973729391526269baef79c35dd621633195648e5f8309eef9e19","typeString":"literal_string \"SafeCast: value doesn't fit in 96 bits\""}],"id":4447,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11242:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4456,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11242:76:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4457,"nodeType":"ExpressionStatement","src":"11242:76:20"},{"expression":{"arguments":[{"id":4460,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4442,"src":"11342:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4459,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11335:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":4458,"name":"uint96","nodeType":"ElementaryTypeName","src":"11335:6:20","typeDescriptions":{}}},"id":4461,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11335:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"functionReturnParameters":4446,"id":4462,"nodeType":"Return","src":"11328:20:20"}]},"documentation":{"id":4440,"nodeType":"StructuredDocumentation","src":"10849:314:20","text":" @dev Returns the downcasted uint96 from uint256, reverting on\n overflow (when the input is greater than largest uint96).\n Counterpart to Solidity's `uint96` operator.\n Requirements:\n - input must fit into 96 bits\n _Available since v4.2._"},"id":4464,"implemented":true,"kind":"function","modifiers":[],"name":"toUint96","nameLocation":"11177:8:20","nodeType":"FunctionDefinition","parameters":{"id":4443,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4442,"mutability":"mutable","name":"value","nameLocation":"11194:5:20","nodeType":"VariableDeclaration","scope":4464,"src":"11186:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4441,"name":"uint256","nodeType":"ElementaryTypeName","src":"11186:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11185:15:20"},"returnParameters":{"id":4446,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4445,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4464,"src":"11224:6:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":4444,"name":"uint96","nodeType":"ElementaryTypeName","src":"11224:6:20","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"11223:8:20"},"scope":5502,"src":"11168:187:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4488,"nodeType":"Block","src":"11744:123:20","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4479,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4473,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4467,"src":"11762:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4476,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11776:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":4475,"name":"uint88","nodeType":"ElementaryTypeName","src":"11776:6:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"}],"id":4474,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11771:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4477,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11771:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint88","typeString":"type(uint88)"}},"id":4478,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11784:3:20","memberName":"max","nodeType":"MemberAccess","src":"11771:16:20","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"src":"11762:25:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2038382062697473","id":4480,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11789:40:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_ae080bd7a76a46f0a0caf00941bc2cdf6002799ca2813a3af7295019576d715d","typeString":"literal_string \"SafeCast: value doesn't fit in 88 bits\""},"value":"SafeCast: value doesn't fit in 88 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ae080bd7a76a46f0a0caf00941bc2cdf6002799ca2813a3af7295019576d715d","typeString":"literal_string \"SafeCast: value doesn't fit in 88 bits\""}],"id":4472,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11754:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4481,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11754:76:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4482,"nodeType":"ExpressionStatement","src":"11754:76:20"},{"expression":{"arguments":[{"id":4485,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4467,"src":"11854:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4484,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11847:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":4483,"name":"uint88","nodeType":"ElementaryTypeName","src":"11847:6:20","typeDescriptions":{}}},"id":4486,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11847:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"functionReturnParameters":4471,"id":4487,"nodeType":"Return","src":"11840:20:20"}]},"documentation":{"id":4465,"nodeType":"StructuredDocumentation","src":"11361:314:20","text":" @dev Returns the downcasted uint88 from uint256, reverting on\n overflow (when the input is greater than largest uint88).\n Counterpart to Solidity's `uint88` operator.\n Requirements:\n - input must fit into 88 bits\n _Available since v4.7._"},"id":4489,"implemented":true,"kind":"function","modifiers":[],"name":"toUint88","nameLocation":"11689:8:20","nodeType":"FunctionDefinition","parameters":{"id":4468,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4467,"mutability":"mutable","name":"value","nameLocation":"11706:5:20","nodeType":"VariableDeclaration","scope":4489,"src":"11698:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4466,"name":"uint256","nodeType":"ElementaryTypeName","src":"11698:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11697:15:20"},"returnParameters":{"id":4471,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4470,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4489,"src":"11736:6:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"},"typeName":{"id":4469,"name":"uint88","nodeType":"ElementaryTypeName","src":"11736:6:20","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"visibility":"internal"}],"src":"11735:8:20"},"scope":5502,"src":"11680:187:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4513,"nodeType":"Block","src":"12256:123:20","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4498,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4492,"src":"12274:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4501,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12288:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":4500,"name":"uint80","nodeType":"ElementaryTypeName","src":"12288:6:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"}],"id":4499,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12283:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4502,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12283:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint80","typeString":"type(uint80)"}},"id":4503,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12296:3:20","memberName":"max","nodeType":"MemberAccess","src":"12283:16:20","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"src":"12274:25:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2038302062697473","id":4505,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12301:40:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_3cba87c71fade7d3cd7b673c159aab98afc040a5369691a33559d905d20ab5d1","typeString":"literal_string \"SafeCast: value doesn't fit in 80 bits\""},"value":"SafeCast: value doesn't fit in 80 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3cba87c71fade7d3cd7b673c159aab98afc040a5369691a33559d905d20ab5d1","typeString":"literal_string \"SafeCast: value doesn't fit in 80 bits\""}],"id":4497,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12266:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4506,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12266:76:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4507,"nodeType":"ExpressionStatement","src":"12266:76:20"},{"expression":{"arguments":[{"id":4510,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4492,"src":"12366:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4509,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12359:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":4508,"name":"uint80","nodeType":"ElementaryTypeName","src":"12359:6:20","typeDescriptions":{}}},"id":4511,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12359:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"functionReturnParameters":4496,"id":4512,"nodeType":"Return","src":"12352:20:20"}]},"documentation":{"id":4490,"nodeType":"StructuredDocumentation","src":"11873:314:20","text":" @dev Returns the downcasted uint80 from uint256, reverting on\n overflow (when the input is greater than largest uint80).\n Counterpart to Solidity's `uint80` operator.\n Requirements:\n - input must fit into 80 bits\n _Available since v4.7._"},"id":4514,"implemented":true,"kind":"function","modifiers":[],"name":"toUint80","nameLocation":"12201:8:20","nodeType":"FunctionDefinition","parameters":{"id":4493,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4492,"mutability":"mutable","name":"value","nameLocation":"12218:5:20","nodeType":"VariableDeclaration","scope":4514,"src":"12210:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4491,"name":"uint256","nodeType":"ElementaryTypeName","src":"12210:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12209:15:20"},"returnParameters":{"id":4496,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4495,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4514,"src":"12248:6:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":4494,"name":"uint80","nodeType":"ElementaryTypeName","src":"12248:6:20","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"12247:8:20"},"scope":5502,"src":"12192:187:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4538,"nodeType":"Block","src":"12768:123:20","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4529,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4523,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4517,"src":"12786:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4526,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12800:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":4525,"name":"uint72","nodeType":"ElementaryTypeName","src":"12800:6:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"}],"id":4524,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12795:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4527,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12795:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint72","typeString":"type(uint72)"}},"id":4528,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12808:3:20","memberName":"max","nodeType":"MemberAccess","src":"12795:16:20","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"src":"12786:25:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2037322062697473","id":4530,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12813:40:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_71584237cc5250b8f417982144a947efe8f4c76feba008ff32ac480e69d60606","typeString":"literal_string \"SafeCast: value doesn't fit in 72 bits\""},"value":"SafeCast: value doesn't fit in 72 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_71584237cc5250b8f417982144a947efe8f4c76feba008ff32ac480e69d60606","typeString":"literal_string \"SafeCast: value doesn't fit in 72 bits\""}],"id":4522,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12778:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4531,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12778:76:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4532,"nodeType":"ExpressionStatement","src":"12778:76:20"},{"expression":{"arguments":[{"id":4535,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4517,"src":"12878:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4534,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12871:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":4533,"name":"uint72","nodeType":"ElementaryTypeName","src":"12871:6:20","typeDescriptions":{}}},"id":4536,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12871:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"functionReturnParameters":4521,"id":4537,"nodeType":"Return","src":"12864:20:20"}]},"documentation":{"id":4515,"nodeType":"StructuredDocumentation","src":"12385:314:20","text":" @dev Returns the downcasted uint72 from uint256, reverting on\n overflow (when the input is greater than largest uint72).\n Counterpart to Solidity's `uint72` operator.\n Requirements:\n - input must fit into 72 bits\n _Available since v4.7._"},"id":4539,"implemented":true,"kind":"function","modifiers":[],"name":"toUint72","nameLocation":"12713:8:20","nodeType":"FunctionDefinition","parameters":{"id":4518,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4517,"mutability":"mutable","name":"value","nameLocation":"12730:5:20","nodeType":"VariableDeclaration","scope":4539,"src":"12722:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4516,"name":"uint256","nodeType":"ElementaryTypeName","src":"12722:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12721:15:20"},"returnParameters":{"id":4521,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4520,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4539,"src":"12760:6:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"},"typeName":{"id":4519,"name":"uint72","nodeType":"ElementaryTypeName","src":"12760:6:20","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"visibility":"internal"}],"src":"12759:8:20"},"scope":5502,"src":"12704:187:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4563,"nodeType":"Block","src":"13280:123:20","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4554,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4548,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4542,"src":"13298:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4551,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13312:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":4550,"name":"uint64","nodeType":"ElementaryTypeName","src":"13312:6:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":4549,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13307:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4552,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13307:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":4553,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13320:3:20","memberName":"max","nodeType":"MemberAccess","src":"13307:16:20","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"13298:25:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2036342062697473","id":4555,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13325:40:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_93ae0c6bf6ffaece591a770b1865daa9f65157e541970aa9d8dc5f89a9490939","typeString":"literal_string \"SafeCast: value doesn't fit in 64 bits\""},"value":"SafeCast: value doesn't fit in 64 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_93ae0c6bf6ffaece591a770b1865daa9f65157e541970aa9d8dc5f89a9490939","typeString":"literal_string \"SafeCast: value doesn't fit in 64 bits\""}],"id":4547,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"13290:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4556,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13290:76:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4557,"nodeType":"ExpressionStatement","src":"13290:76:20"},{"expression":{"arguments":[{"id":4560,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4542,"src":"13390:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4559,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13383:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":4558,"name":"uint64","nodeType":"ElementaryTypeName","src":"13383:6:20","typeDescriptions":{}}},"id":4561,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13383:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":4546,"id":4562,"nodeType":"Return","src":"13376:20:20"}]},"documentation":{"id":4540,"nodeType":"StructuredDocumentation","src":"12897:314:20","text":" @dev Returns the downcasted uint64 from uint256, reverting on\n overflow (when the input is greater than largest uint64).\n Counterpart to Solidity's `uint64` operator.\n Requirements:\n - input must fit into 64 bits\n _Available since v2.5._"},"id":4564,"implemented":true,"kind":"function","modifiers":[],"name":"toUint64","nameLocation":"13225:8:20","nodeType":"FunctionDefinition","parameters":{"id":4543,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4542,"mutability":"mutable","name":"value","nameLocation":"13242:5:20","nodeType":"VariableDeclaration","scope":4564,"src":"13234:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4541,"name":"uint256","nodeType":"ElementaryTypeName","src":"13234:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13233:15:20"},"returnParameters":{"id":4546,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4545,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4564,"src":"13272:6:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":4544,"name":"uint64","nodeType":"ElementaryTypeName","src":"13272:6:20","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"13271:8:20"},"scope":5502,"src":"13216:187:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4588,"nodeType":"Block","src":"13792:123:20","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4579,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4573,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4567,"src":"13810:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4576,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13824:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":4575,"name":"uint56","nodeType":"ElementaryTypeName","src":"13824:6:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"}],"id":4574,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13819:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4577,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13819:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint56","typeString":"type(uint56)"}},"id":4578,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13832:3:20","memberName":"max","nodeType":"MemberAccess","src":"13819:16:20","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"src":"13810:25:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2035362062697473","id":4580,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13837:40:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_656ad93b5ff6665bfe05d97d51fad7c02ad79e6c43bef066c042a6900f450bc5","typeString":"literal_string \"SafeCast: value doesn't fit in 56 bits\""},"value":"SafeCast: value doesn't fit in 56 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_656ad93b5ff6665bfe05d97d51fad7c02ad79e6c43bef066c042a6900f450bc5","typeString":"literal_string \"SafeCast: value doesn't fit in 56 bits\""}],"id":4572,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"13802:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4581,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13802:76:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4582,"nodeType":"ExpressionStatement","src":"13802:76:20"},{"expression":{"arguments":[{"id":4585,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4567,"src":"13902:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4584,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13895:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":4583,"name":"uint56","nodeType":"ElementaryTypeName","src":"13895:6:20","typeDescriptions":{}}},"id":4586,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13895:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"functionReturnParameters":4571,"id":4587,"nodeType":"Return","src":"13888:20:20"}]},"documentation":{"id":4565,"nodeType":"StructuredDocumentation","src":"13409:314:20","text":" @dev Returns the downcasted uint56 from uint256, reverting on\n overflow (when the input is greater than largest uint56).\n Counterpart to Solidity's `uint56` operator.\n Requirements:\n - input must fit into 56 bits\n _Available since v4.7._"},"id":4589,"implemented":true,"kind":"function","modifiers":[],"name":"toUint56","nameLocation":"13737:8:20","nodeType":"FunctionDefinition","parameters":{"id":4568,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4567,"mutability":"mutable","name":"value","nameLocation":"13754:5:20","nodeType":"VariableDeclaration","scope":4589,"src":"13746:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4566,"name":"uint256","nodeType":"ElementaryTypeName","src":"13746:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13745:15:20"},"returnParameters":{"id":4571,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4570,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4589,"src":"13784:6:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"},"typeName":{"id":4569,"name":"uint56","nodeType":"ElementaryTypeName","src":"13784:6:20","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"visibility":"internal"}],"src":"13783:8:20"},"scope":5502,"src":"13728:187:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4613,"nodeType":"Block","src":"14304:123:20","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4604,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4598,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4592,"src":"14322:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4601,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14336:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":4600,"name":"uint48","nodeType":"ElementaryTypeName","src":"14336:6:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"}],"id":4599,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14331:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4602,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14331:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint48","typeString":"type(uint48)"}},"id":4603,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14344:3:20","memberName":"max","nodeType":"MemberAccess","src":"14331:16:20","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"14322:25:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2034382062697473","id":4605,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14349:40:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_599034f9324dd4e988c6cea5a00a30f53147fec1b01559682f18cd840028f495","typeString":"literal_string \"SafeCast: value doesn't fit in 48 bits\""},"value":"SafeCast: value doesn't fit in 48 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_599034f9324dd4e988c6cea5a00a30f53147fec1b01559682f18cd840028f495","typeString":"literal_string \"SafeCast: value doesn't fit in 48 bits\""}],"id":4597,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"14314:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4606,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14314:76:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4607,"nodeType":"ExpressionStatement","src":"14314:76:20"},{"expression":{"arguments":[{"id":4610,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4592,"src":"14414:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4609,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14407:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":4608,"name":"uint48","nodeType":"ElementaryTypeName","src":"14407:6:20","typeDescriptions":{}}},"id":4611,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14407:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"functionReturnParameters":4596,"id":4612,"nodeType":"Return","src":"14400:20:20"}]},"documentation":{"id":4590,"nodeType":"StructuredDocumentation","src":"13921:314:20","text":" @dev Returns the downcasted uint48 from uint256, reverting on\n overflow (when the input is greater than largest uint48).\n Counterpart to Solidity's `uint48` operator.\n Requirements:\n - input must fit into 48 bits\n _Available since v4.7._"},"id":4614,"implemented":true,"kind":"function","modifiers":[],"name":"toUint48","nameLocation":"14249:8:20","nodeType":"FunctionDefinition","parameters":{"id":4593,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4592,"mutability":"mutable","name":"value","nameLocation":"14266:5:20","nodeType":"VariableDeclaration","scope":4614,"src":"14258:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4591,"name":"uint256","nodeType":"ElementaryTypeName","src":"14258:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14257:15:20"},"returnParameters":{"id":4596,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4595,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4614,"src":"14296:6:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":4594,"name":"uint48","nodeType":"ElementaryTypeName","src":"14296:6:20","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"14295:8:20"},"scope":5502,"src":"14240:187:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4638,"nodeType":"Block","src":"14816:123:20","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4629,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4623,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4617,"src":"14834:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4626,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14848:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":4625,"name":"uint40","nodeType":"ElementaryTypeName","src":"14848:6:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"}],"id":4624,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14843:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4627,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14843:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint40","typeString":"type(uint40)"}},"id":4628,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14856:3:20","memberName":"max","nodeType":"MemberAccess","src":"14843:16:20","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"src":"14834:25:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2034302062697473","id":4630,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14861:40:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_b23559c58b98a5d3ed7016699c7171ac8defa5a1d180f9a9ffa60468a5701d37","typeString":"literal_string \"SafeCast: value doesn't fit in 40 bits\""},"value":"SafeCast: value doesn't fit in 40 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b23559c58b98a5d3ed7016699c7171ac8defa5a1d180f9a9ffa60468a5701d37","typeString":"literal_string \"SafeCast: value doesn't fit in 40 bits\""}],"id":4622,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"14826:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4631,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14826:76:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4632,"nodeType":"ExpressionStatement","src":"14826:76:20"},{"expression":{"arguments":[{"id":4635,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4617,"src":"14926:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4634,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14919:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":4633,"name":"uint40","nodeType":"ElementaryTypeName","src":"14919:6:20","typeDescriptions":{}}},"id":4636,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14919:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"functionReturnParameters":4621,"id":4637,"nodeType":"Return","src":"14912:20:20"}]},"documentation":{"id":4615,"nodeType":"StructuredDocumentation","src":"14433:314:20","text":" @dev Returns the downcasted uint40 from uint256, reverting on\n overflow (when the input is greater than largest uint40).\n Counterpart to Solidity's `uint40` operator.\n Requirements:\n - input must fit into 40 bits\n _Available since v4.7._"},"id":4639,"implemented":true,"kind":"function","modifiers":[],"name":"toUint40","nameLocation":"14761:8:20","nodeType":"FunctionDefinition","parameters":{"id":4618,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4617,"mutability":"mutable","name":"value","nameLocation":"14778:5:20","nodeType":"VariableDeclaration","scope":4639,"src":"14770:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4616,"name":"uint256","nodeType":"ElementaryTypeName","src":"14770:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14769:15:20"},"returnParameters":{"id":4621,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4620,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4639,"src":"14808:6:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":4619,"name":"uint40","nodeType":"ElementaryTypeName","src":"14808:6:20","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"}],"src":"14807:8:20"},"scope":5502,"src":"14752:187:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4663,"nodeType":"Block","src":"15328:123:20","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4654,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4648,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4642,"src":"15346:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4651,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15360:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":4650,"name":"uint32","nodeType":"ElementaryTypeName","src":"15360:6:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"}],"id":4649,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15355:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4652,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15355:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint32","typeString":"type(uint32)"}},"id":4653,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15368:3:20","memberName":"max","nodeType":"MemberAccess","src":"15355:16:20","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"15346:25:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2033322062697473","id":4655,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15373:40:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19","typeString":"literal_string \"SafeCast: value doesn't fit in 32 bits\""},"value":"SafeCast: value doesn't fit in 32 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19","typeString":"literal_string \"SafeCast: value doesn't fit in 32 bits\""}],"id":4647,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"15338:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4656,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15338:76:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4657,"nodeType":"ExpressionStatement","src":"15338:76:20"},{"expression":{"arguments":[{"id":4660,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4642,"src":"15438:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4659,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15431:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":4658,"name":"uint32","nodeType":"ElementaryTypeName","src":"15431:6:20","typeDescriptions":{}}},"id":4661,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15431:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":4646,"id":4662,"nodeType":"Return","src":"15424:20:20"}]},"documentation":{"id":4640,"nodeType":"StructuredDocumentation","src":"14945:314:20","text":" @dev Returns the downcasted uint32 from uint256, reverting on\n overflow (when the input is greater than largest uint32).\n Counterpart to Solidity's `uint32` operator.\n Requirements:\n - input must fit into 32 bits\n _Available since v2.5._"},"id":4664,"implemented":true,"kind":"function","modifiers":[],"name":"toUint32","nameLocation":"15273:8:20","nodeType":"FunctionDefinition","parameters":{"id":4643,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4642,"mutability":"mutable","name":"value","nameLocation":"15290:5:20","nodeType":"VariableDeclaration","scope":4664,"src":"15282:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4641,"name":"uint256","nodeType":"ElementaryTypeName","src":"15282:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15281:15:20"},"returnParameters":{"id":4646,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4645,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4664,"src":"15320:6:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":4644,"name":"uint32","nodeType":"ElementaryTypeName","src":"15320:6:20","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"15319:8:20"},"scope":5502,"src":"15264:187:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4688,"nodeType":"Block","src":"15840:123:20","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4679,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4673,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4667,"src":"15858:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4676,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15872:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":4675,"name":"uint24","nodeType":"ElementaryTypeName","src":"15872:6:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"}],"id":4674,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15867:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4677,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15867:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint24","typeString":"type(uint24)"}},"id":4678,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15880:3:20","memberName":"max","nodeType":"MemberAccess","src":"15867:16:20","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"src":"15858:25:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2032342062697473","id":4680,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15885:40:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_f68b65aaf4574c34e9b9d1442d19636c6608b8c4dbd9331c7245f7915c8b2f55","typeString":"literal_string \"SafeCast: value doesn't fit in 24 bits\""},"value":"SafeCast: value doesn't fit in 24 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f68b65aaf4574c34e9b9d1442d19636c6608b8c4dbd9331c7245f7915c8b2f55","typeString":"literal_string \"SafeCast: value doesn't fit in 24 bits\""}],"id":4672,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"15850:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4681,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15850:76:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4682,"nodeType":"ExpressionStatement","src":"15850:76:20"},{"expression":{"arguments":[{"id":4685,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4667,"src":"15950:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4684,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15943:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":4683,"name":"uint24","nodeType":"ElementaryTypeName","src":"15943:6:20","typeDescriptions":{}}},"id":4686,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15943:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"functionReturnParameters":4671,"id":4687,"nodeType":"Return","src":"15936:20:20"}]},"documentation":{"id":4665,"nodeType":"StructuredDocumentation","src":"15457:314:20","text":" @dev Returns the downcasted uint24 from uint256, reverting on\n overflow (when the input is greater than largest uint24).\n Counterpart to Solidity's `uint24` operator.\n Requirements:\n - input must fit into 24 bits\n _Available since v4.7._"},"id":4689,"implemented":true,"kind":"function","modifiers":[],"name":"toUint24","nameLocation":"15785:8:20","nodeType":"FunctionDefinition","parameters":{"id":4668,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4667,"mutability":"mutable","name":"value","nameLocation":"15802:5:20","nodeType":"VariableDeclaration","scope":4689,"src":"15794:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4666,"name":"uint256","nodeType":"ElementaryTypeName","src":"15794:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15793:15:20"},"returnParameters":{"id":4671,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4670,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4689,"src":"15832:6:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":4669,"name":"uint24","nodeType":"ElementaryTypeName","src":"15832:6:20","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"15831:8:20"},"scope":5502,"src":"15776:187:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4713,"nodeType":"Block","src":"16352:123:20","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4704,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4698,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4692,"src":"16370:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4701,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16384:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":4700,"name":"uint16","nodeType":"ElementaryTypeName","src":"16384:6:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"}],"id":4699,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16379:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4702,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16379:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint16","typeString":"type(uint16)"}},"id":4703,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16392:3:20","memberName":"max","nodeType":"MemberAccess","src":"16379:16:20","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"16370:25:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2031362062697473","id":4705,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"16397:40:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_13d3a66f9e0e5c92bbe7743bcd3bdb4695009d5f3a96e5ff49718d715b484033","typeString":"literal_string \"SafeCast: value doesn't fit in 16 bits\""},"value":"SafeCast: value doesn't fit in 16 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_13d3a66f9e0e5c92bbe7743bcd3bdb4695009d5f3a96e5ff49718d715b484033","typeString":"literal_string \"SafeCast: value doesn't fit in 16 bits\""}],"id":4697,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"16362:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4706,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16362:76:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4707,"nodeType":"ExpressionStatement","src":"16362:76:20"},{"expression":{"arguments":[{"id":4710,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4692,"src":"16462:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4709,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16455:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":4708,"name":"uint16","nodeType":"ElementaryTypeName","src":"16455:6:20","typeDescriptions":{}}},"id":4711,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16455:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"functionReturnParameters":4696,"id":4712,"nodeType":"Return","src":"16448:20:20"}]},"documentation":{"id":4690,"nodeType":"StructuredDocumentation","src":"15969:314:20","text":" @dev Returns the downcasted uint16 from uint256, reverting on\n overflow (when the input is greater than largest uint16).\n Counterpart to Solidity's `uint16` operator.\n Requirements:\n - input must fit into 16 bits\n _Available since v2.5._"},"id":4714,"implemented":true,"kind":"function","modifiers":[],"name":"toUint16","nameLocation":"16297:8:20","nodeType":"FunctionDefinition","parameters":{"id":4693,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4692,"mutability":"mutable","name":"value","nameLocation":"16314:5:20","nodeType":"VariableDeclaration","scope":4714,"src":"16306:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4691,"name":"uint256","nodeType":"ElementaryTypeName","src":"16306:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16305:15:20"},"returnParameters":{"id":4696,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4695,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4714,"src":"16344:6:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":4694,"name":"uint16","nodeType":"ElementaryTypeName","src":"16344:6:20","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"16343:8:20"},"scope":5502,"src":"16288:187:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4738,"nodeType":"Block","src":"16858:120:20","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4729,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4723,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4717,"src":"16876:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4726,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16890:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":4725,"name":"uint8","nodeType":"ElementaryTypeName","src":"16890:5:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":4724,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16885:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4727,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16885:11:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":4728,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16897:3:20","memberName":"max","nodeType":"MemberAccess","src":"16885:15:20","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"16876:24:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e20382062697473","id":4730,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"16902:39:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_2610961ba53259047cd57c60366c5ad0b8aabf5eb4132487619b736715a740d1","typeString":"literal_string \"SafeCast: value doesn't fit in 8 bits\""},"value":"SafeCast: value doesn't fit in 8 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2610961ba53259047cd57c60366c5ad0b8aabf5eb4132487619b736715a740d1","typeString":"literal_string \"SafeCast: value doesn't fit in 8 bits\""}],"id":4722,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"16868:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4731,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16868:74:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4732,"nodeType":"ExpressionStatement","src":"16868:74:20"},{"expression":{"arguments":[{"id":4735,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4717,"src":"16965:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4734,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16959:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":4733,"name":"uint8","nodeType":"ElementaryTypeName","src":"16959:5:20","typeDescriptions":{}}},"id":4736,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16959:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":4721,"id":4737,"nodeType":"Return","src":"16952:19:20"}]},"documentation":{"id":4715,"nodeType":"StructuredDocumentation","src":"16481:310:20","text":" @dev Returns the downcasted uint8 from uint256, reverting on\n overflow (when the input is greater than largest uint8).\n Counterpart to Solidity's `uint8` operator.\n Requirements:\n - input must fit into 8 bits\n _Available since v2.5._"},"id":4739,"implemented":true,"kind":"function","modifiers":[],"name":"toUint8","nameLocation":"16805:7:20","nodeType":"FunctionDefinition","parameters":{"id":4718,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4717,"mutability":"mutable","name":"value","nameLocation":"16821:5:20","nodeType":"VariableDeclaration","scope":4739,"src":"16813:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4716,"name":"uint256","nodeType":"ElementaryTypeName","src":"16813:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16812:15:20"},"returnParameters":{"id":4721,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4720,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4739,"src":"16851:5:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4719,"name":"uint8","nodeType":"ElementaryTypeName","src":"16851:5:20","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"16850:7:20"},"scope":5502,"src":"16796:182:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4759,"nodeType":"Block","src":"17252:103:20","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4750,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4748,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4742,"src":"17270:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"30","id":4749,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17279:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17270:10:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c7565206d75737420626520706f736974697665","id":4751,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17282:34:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_74e6d3a4204092bea305532ded31d3763fc378e46be3884a93ceff08a0761807","typeString":"literal_string \"SafeCast: value must be positive\""},"value":"SafeCast: value must be positive"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_74e6d3a4204092bea305532ded31d3763fc378e46be3884a93ceff08a0761807","typeString":"literal_string \"SafeCast: value must be positive\""}],"id":4747,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"17262:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4752,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17262:55:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4753,"nodeType":"ExpressionStatement","src":"17262:55:20"},{"expression":{"arguments":[{"id":4756,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4742,"src":"17342:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4755,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17334:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4754,"name":"uint256","nodeType":"ElementaryTypeName","src":"17334:7:20","typeDescriptions":{}}},"id":4757,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17334:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4746,"id":4758,"nodeType":"Return","src":"17327:21:20"}]},"documentation":{"id":4740,"nodeType":"StructuredDocumentation","src":"16984:198:20","text":" @dev Converts a signed int256 into an unsigned uint256.\n Requirements:\n - input must be greater than or equal to 0.\n _Available since v3.0._"},"id":4760,"implemented":true,"kind":"function","modifiers":[],"name":"toUint256","nameLocation":"17196:9:20","nodeType":"FunctionDefinition","parameters":{"id":4743,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4742,"mutability":"mutable","name":"value","nameLocation":"17213:5:20","nodeType":"VariableDeclaration","scope":4760,"src":"17206:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4741,"name":"int256","nodeType":"ElementaryTypeName","src":"17206:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17205:14:20"},"returnParameters":{"id":4746,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4745,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4760,"src":"17243:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4744,"name":"uint256","nodeType":"ElementaryTypeName","src":"17243:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17242:9:20"},"scope":5502,"src":"17187:168:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4782,"nodeType":"Block","src":"17790:124:20","statements":[{"expression":{"id":4773,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4768,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4766,"src":"17800:10:20","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4771,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4763,"src":"17820:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4770,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17813:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int248_$","typeString":"type(int248)"},"typeName":{"id":4769,"name":"int248","nodeType":"ElementaryTypeName","src":"17813:6:20","typeDescriptions":{}}},"id":4772,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17813:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"src":"17800:26:20","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"id":4774,"nodeType":"ExpressionStatement","src":"17800:26:20"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4778,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4776,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4766,"src":"17844:10:20","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4777,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4763,"src":"17858:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"17844:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203234382062697473","id":4779,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17865:41:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_6ac19bba4607c9b45ff35f54fbc4ca64c29c7457109a16fa180ea77cdbda8593","typeString":"literal_string \"SafeCast: value doesn't fit in 248 bits\""},"value":"SafeCast: value doesn't fit in 248 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6ac19bba4607c9b45ff35f54fbc4ca64c29c7457109a16fa180ea77cdbda8593","typeString":"literal_string \"SafeCast: value doesn't fit in 248 bits\""}],"id":4775,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"17836:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4780,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17836:71:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4781,"nodeType":"ExpressionStatement","src":"17836:71:20"}]},"documentation":{"id":4761,"nodeType":"StructuredDocumentation","src":"17361:350:20","text":" @dev Returns the downcasted int248 from int256, reverting on\n overflow (when the input is less than smallest int248 or\n greater than largest int248).\n Counterpart to Solidity's `int248` operator.\n Requirements:\n - input must fit into 248 bits\n _Available since v4.7._"},"id":4783,"implemented":true,"kind":"function","modifiers":[],"name":"toInt248","nameLocation":"17725:8:20","nodeType":"FunctionDefinition","parameters":{"id":4764,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4763,"mutability":"mutable","name":"value","nameLocation":"17741:5:20","nodeType":"VariableDeclaration","scope":4783,"src":"17734:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4762,"name":"int256","nodeType":"ElementaryTypeName","src":"17734:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17733:14:20"},"returnParameters":{"id":4767,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4766,"mutability":"mutable","name":"downcasted","nameLocation":"17778:10:20","nodeType":"VariableDeclaration","scope":4783,"src":"17771:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"},"typeName":{"id":4765,"name":"int248","nodeType":"ElementaryTypeName","src":"17771:6:20","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"visibility":"internal"}],"src":"17770:19:20"},"scope":5502,"src":"17716:198:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4805,"nodeType":"Block","src":"18349:124:20","statements":[{"expression":{"id":4796,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4791,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4789,"src":"18359:10:20","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4794,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4786,"src":"18379:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4793,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18372:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int240_$","typeString":"type(int240)"},"typeName":{"id":4792,"name":"int240","nodeType":"ElementaryTypeName","src":"18372:6:20","typeDescriptions":{}}},"id":4795,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18372:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"src":"18359:26:20","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"id":4797,"nodeType":"ExpressionStatement","src":"18359:26:20"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4801,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4799,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4789,"src":"18403:10:20","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4800,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4786,"src":"18417:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18403:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203234302062697473","id":4802,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18424:41:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_375fa0f6cb9fb5845d214c630920cedf4424913ed6dc32c297d430efa3d61a87","typeString":"literal_string \"SafeCast: value doesn't fit in 240 bits\""},"value":"SafeCast: value doesn't fit in 240 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_375fa0f6cb9fb5845d214c630920cedf4424913ed6dc32c297d430efa3d61a87","typeString":"literal_string \"SafeCast: value doesn't fit in 240 bits\""}],"id":4798,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"18395:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4803,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18395:71:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4804,"nodeType":"ExpressionStatement","src":"18395:71:20"}]},"documentation":{"id":4784,"nodeType":"StructuredDocumentation","src":"17920:350:20","text":" @dev Returns the downcasted int240 from int256, reverting on\n overflow (when the input is less than smallest int240 or\n greater than largest int240).\n Counterpart to Solidity's `int240` operator.\n Requirements:\n - input must fit into 240 bits\n _Available since v4.7._"},"id":4806,"implemented":true,"kind":"function","modifiers":[],"name":"toInt240","nameLocation":"18284:8:20","nodeType":"FunctionDefinition","parameters":{"id":4787,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4786,"mutability":"mutable","name":"value","nameLocation":"18300:5:20","nodeType":"VariableDeclaration","scope":4806,"src":"18293:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4785,"name":"int256","nodeType":"ElementaryTypeName","src":"18293:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18292:14:20"},"returnParameters":{"id":4790,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4789,"mutability":"mutable","name":"downcasted","nameLocation":"18337:10:20","nodeType":"VariableDeclaration","scope":4806,"src":"18330:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"},"typeName":{"id":4788,"name":"int240","nodeType":"ElementaryTypeName","src":"18330:6:20","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"visibility":"internal"}],"src":"18329:19:20"},"scope":5502,"src":"18275:198:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4828,"nodeType":"Block","src":"18908:124:20","statements":[{"expression":{"id":4819,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4814,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4812,"src":"18918:10:20","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4817,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4809,"src":"18938:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4816,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18931:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int232_$","typeString":"type(int232)"},"typeName":{"id":4815,"name":"int232","nodeType":"ElementaryTypeName","src":"18931:6:20","typeDescriptions":{}}},"id":4818,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18931:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"src":"18918:26:20","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"id":4820,"nodeType":"ExpressionStatement","src":"18918:26:20"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4824,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4822,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4812,"src":"18962:10:20","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4823,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4809,"src":"18976:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18962:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203233322062697473","id":4825,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18983:41:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_5797fb2c4589bd6a92752ce0eacaac67341e37ab28c96c2284ab897e7ac77957","typeString":"literal_string \"SafeCast: value doesn't fit in 232 bits\""},"value":"SafeCast: value doesn't fit in 232 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5797fb2c4589bd6a92752ce0eacaac67341e37ab28c96c2284ab897e7ac77957","typeString":"literal_string \"SafeCast: value doesn't fit in 232 bits\""}],"id":4821,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"18954:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4826,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18954:71:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4827,"nodeType":"ExpressionStatement","src":"18954:71:20"}]},"documentation":{"id":4807,"nodeType":"StructuredDocumentation","src":"18479:350:20","text":" @dev Returns the downcasted int232 from int256, reverting on\n overflow (when the input is less than smallest int232 or\n greater than largest int232).\n Counterpart to Solidity's `int232` operator.\n Requirements:\n - input must fit into 232 bits\n _Available since v4.7._"},"id":4829,"implemented":true,"kind":"function","modifiers":[],"name":"toInt232","nameLocation":"18843:8:20","nodeType":"FunctionDefinition","parameters":{"id":4810,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4809,"mutability":"mutable","name":"value","nameLocation":"18859:5:20","nodeType":"VariableDeclaration","scope":4829,"src":"18852:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4808,"name":"int256","nodeType":"ElementaryTypeName","src":"18852:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18851:14:20"},"returnParameters":{"id":4813,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4812,"mutability":"mutable","name":"downcasted","nameLocation":"18896:10:20","nodeType":"VariableDeclaration","scope":4829,"src":"18889:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"},"typeName":{"id":4811,"name":"int232","nodeType":"ElementaryTypeName","src":"18889:6:20","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"visibility":"internal"}],"src":"18888:19:20"},"scope":5502,"src":"18834:198:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4851,"nodeType":"Block","src":"19467:124:20","statements":[{"expression":{"id":4842,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4837,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4835,"src":"19477:10:20","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4840,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4832,"src":"19497:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4839,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19490:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int224_$","typeString":"type(int224)"},"typeName":{"id":4838,"name":"int224","nodeType":"ElementaryTypeName","src":"19490:6:20","typeDescriptions":{}}},"id":4841,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19490:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"src":"19477:26:20","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"id":4843,"nodeType":"ExpressionStatement","src":"19477:26:20"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4847,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4845,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4835,"src":"19521:10:20","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4846,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4832,"src":"19535:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19521:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203232342062697473","id":4848,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"19542:41:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79","typeString":"literal_string \"SafeCast: value doesn't fit in 224 bits\""},"value":"SafeCast: value doesn't fit in 224 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79","typeString":"literal_string \"SafeCast: value doesn't fit in 224 bits\""}],"id":4844,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"19513:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4849,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19513:71:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4850,"nodeType":"ExpressionStatement","src":"19513:71:20"}]},"documentation":{"id":4830,"nodeType":"StructuredDocumentation","src":"19038:350:20","text":" @dev Returns the downcasted int224 from int256, reverting on\n overflow (when the input is less than smallest int224 or\n greater than largest int224).\n Counterpart to Solidity's `int224` operator.\n Requirements:\n - input must fit into 224 bits\n _Available since v4.7._"},"id":4852,"implemented":true,"kind":"function","modifiers":[],"name":"toInt224","nameLocation":"19402:8:20","nodeType":"FunctionDefinition","parameters":{"id":4833,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4832,"mutability":"mutable","name":"value","nameLocation":"19418:5:20","nodeType":"VariableDeclaration","scope":4852,"src":"19411:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4831,"name":"int256","nodeType":"ElementaryTypeName","src":"19411:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19410:14:20"},"returnParameters":{"id":4836,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4835,"mutability":"mutable","name":"downcasted","nameLocation":"19455:10:20","nodeType":"VariableDeclaration","scope":4852,"src":"19448:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"},"typeName":{"id":4834,"name":"int224","nodeType":"ElementaryTypeName","src":"19448:6:20","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"visibility":"internal"}],"src":"19447:19:20"},"scope":5502,"src":"19393:198:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4874,"nodeType":"Block","src":"20026:124:20","statements":[{"expression":{"id":4865,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4860,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4858,"src":"20036:10:20","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4863,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4855,"src":"20056:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4862,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20049:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int216_$","typeString":"type(int216)"},"typeName":{"id":4861,"name":"int216","nodeType":"ElementaryTypeName","src":"20049:6:20","typeDescriptions":{}}},"id":4864,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20049:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"src":"20036:26:20","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"id":4866,"nodeType":"ExpressionStatement","src":"20036:26:20"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4870,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4868,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4858,"src":"20080:10:20","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4869,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4855,"src":"20094:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"20080:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203231362062697473","id":4871,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"20101:41:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_8966adc0aad8dc91b207c69c3eb4937e498af8cc706cfe7edd55f3a6ea53488d","typeString":"literal_string \"SafeCast: value doesn't fit in 216 bits\""},"value":"SafeCast: value doesn't fit in 216 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8966adc0aad8dc91b207c69c3eb4937e498af8cc706cfe7edd55f3a6ea53488d","typeString":"literal_string \"SafeCast: value doesn't fit in 216 bits\""}],"id":4867,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"20072:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4872,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20072:71:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4873,"nodeType":"ExpressionStatement","src":"20072:71:20"}]},"documentation":{"id":4853,"nodeType":"StructuredDocumentation","src":"19597:350:20","text":" @dev Returns the downcasted int216 from int256, reverting on\n overflow (when the input is less than smallest int216 or\n greater than largest int216).\n Counterpart to Solidity's `int216` operator.\n Requirements:\n - input must fit into 216 bits\n _Available since v4.7._"},"id":4875,"implemented":true,"kind":"function","modifiers":[],"name":"toInt216","nameLocation":"19961:8:20","nodeType":"FunctionDefinition","parameters":{"id":4856,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4855,"mutability":"mutable","name":"value","nameLocation":"19977:5:20","nodeType":"VariableDeclaration","scope":4875,"src":"19970:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4854,"name":"int256","nodeType":"ElementaryTypeName","src":"19970:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19969:14:20"},"returnParameters":{"id":4859,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4858,"mutability":"mutable","name":"downcasted","nameLocation":"20014:10:20","nodeType":"VariableDeclaration","scope":4875,"src":"20007:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"},"typeName":{"id":4857,"name":"int216","nodeType":"ElementaryTypeName","src":"20007:6:20","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"visibility":"internal"}],"src":"20006:19:20"},"scope":5502,"src":"19952:198:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4897,"nodeType":"Block","src":"20585:124:20","statements":[{"expression":{"id":4888,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4883,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4881,"src":"20595:10:20","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4886,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4878,"src":"20615:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4885,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20608:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int208_$","typeString":"type(int208)"},"typeName":{"id":4884,"name":"int208","nodeType":"ElementaryTypeName","src":"20608:6:20","typeDescriptions":{}}},"id":4887,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20608:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"src":"20595:26:20","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"id":4889,"nodeType":"ExpressionStatement","src":"20595:26:20"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4893,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4891,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4881,"src":"20639:10:20","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4892,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4878,"src":"20653:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"20639:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203230382062697473","id":4894,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"20660:41:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_43d81217fa633fa1c6e88855de94fb990f5831ac266b0a90afa660e986ab5e23","typeString":"literal_string \"SafeCast: value doesn't fit in 208 bits\""},"value":"SafeCast: value doesn't fit in 208 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_43d81217fa633fa1c6e88855de94fb990f5831ac266b0a90afa660e986ab5e23","typeString":"literal_string \"SafeCast: value doesn't fit in 208 bits\""}],"id":4890,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"20631:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4895,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20631:71:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4896,"nodeType":"ExpressionStatement","src":"20631:71:20"}]},"documentation":{"id":4876,"nodeType":"StructuredDocumentation","src":"20156:350:20","text":" @dev Returns the downcasted int208 from int256, reverting on\n overflow (when the input is less than smallest int208 or\n greater than largest int208).\n Counterpart to Solidity's `int208` operator.\n Requirements:\n - input must fit into 208 bits\n _Available since v4.7._"},"id":4898,"implemented":true,"kind":"function","modifiers":[],"name":"toInt208","nameLocation":"20520:8:20","nodeType":"FunctionDefinition","parameters":{"id":4879,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4878,"mutability":"mutable","name":"value","nameLocation":"20536:5:20","nodeType":"VariableDeclaration","scope":4898,"src":"20529:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4877,"name":"int256","nodeType":"ElementaryTypeName","src":"20529:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20528:14:20"},"returnParameters":{"id":4882,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4881,"mutability":"mutable","name":"downcasted","nameLocation":"20573:10:20","nodeType":"VariableDeclaration","scope":4898,"src":"20566:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"},"typeName":{"id":4880,"name":"int208","nodeType":"ElementaryTypeName","src":"20566:6:20","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"visibility":"internal"}],"src":"20565:19:20"},"scope":5502,"src":"20511:198:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4920,"nodeType":"Block","src":"21144:124:20","statements":[{"expression":{"id":4911,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4906,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4904,"src":"21154:10:20","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4909,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4901,"src":"21174:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4908,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21167:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int200_$","typeString":"type(int200)"},"typeName":{"id":4907,"name":"int200","nodeType":"ElementaryTypeName","src":"21167:6:20","typeDescriptions":{}}},"id":4910,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21167:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"src":"21154:26:20","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"id":4912,"nodeType":"ExpressionStatement","src":"21154:26:20"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4916,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4914,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4904,"src":"21198:10:20","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4915,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4901,"src":"21212:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21198:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203230302062697473","id":4917,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"21219:41:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_df8130f294fe2698967ea9ead82c4da9454490567d976d00551e0174e655314c","typeString":"literal_string \"SafeCast: value doesn't fit in 200 bits\""},"value":"SafeCast: value doesn't fit in 200 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_df8130f294fe2698967ea9ead82c4da9454490567d976d00551e0174e655314c","typeString":"literal_string \"SafeCast: value doesn't fit in 200 bits\""}],"id":4913,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"21190:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4918,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21190:71:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4919,"nodeType":"ExpressionStatement","src":"21190:71:20"}]},"documentation":{"id":4899,"nodeType":"StructuredDocumentation","src":"20715:350:20","text":" @dev Returns the downcasted int200 from int256, reverting on\n overflow (when the input is less than smallest int200 or\n greater than largest int200).\n Counterpart to Solidity's `int200` operator.\n Requirements:\n - input must fit into 200 bits\n _Available since v4.7._"},"id":4921,"implemented":true,"kind":"function","modifiers":[],"name":"toInt200","nameLocation":"21079:8:20","nodeType":"FunctionDefinition","parameters":{"id":4902,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4901,"mutability":"mutable","name":"value","nameLocation":"21095:5:20","nodeType":"VariableDeclaration","scope":4921,"src":"21088:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4900,"name":"int256","nodeType":"ElementaryTypeName","src":"21088:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"21087:14:20"},"returnParameters":{"id":4905,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4904,"mutability":"mutable","name":"downcasted","nameLocation":"21132:10:20","nodeType":"VariableDeclaration","scope":4921,"src":"21125:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"},"typeName":{"id":4903,"name":"int200","nodeType":"ElementaryTypeName","src":"21125:6:20","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"visibility":"internal"}],"src":"21124:19:20"},"scope":5502,"src":"21070:198:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4943,"nodeType":"Block","src":"21703:124:20","statements":[{"expression":{"id":4934,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4929,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4927,"src":"21713:10:20","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4932,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4924,"src":"21733:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4931,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21726:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int192_$","typeString":"type(int192)"},"typeName":{"id":4930,"name":"int192","nodeType":"ElementaryTypeName","src":"21726:6:20","typeDescriptions":{}}},"id":4933,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21726:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"src":"21713:26:20","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"id":4935,"nodeType":"ExpressionStatement","src":"21713:26:20"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4939,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4937,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4927,"src":"21757:10:20","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4938,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4924,"src":"21771:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21757:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203139322062697473","id":4940,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"21778:41:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_112978800f12a1c4f1eab82789f7b6defd49dc1c17ba270a84ffc28392fb05ae","typeString":"literal_string \"SafeCast: value doesn't fit in 192 bits\""},"value":"SafeCast: value doesn't fit in 192 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_112978800f12a1c4f1eab82789f7b6defd49dc1c17ba270a84ffc28392fb05ae","typeString":"literal_string \"SafeCast: value doesn't fit in 192 bits\""}],"id":4936,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"21749:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4941,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21749:71:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4942,"nodeType":"ExpressionStatement","src":"21749:71:20"}]},"documentation":{"id":4922,"nodeType":"StructuredDocumentation","src":"21274:350:20","text":" @dev Returns the downcasted int192 from int256, reverting on\n overflow (when the input is less than smallest int192 or\n greater than largest int192).\n Counterpart to Solidity's `int192` operator.\n Requirements:\n - input must fit into 192 bits\n _Available since v4.7._"},"id":4944,"implemented":true,"kind":"function","modifiers":[],"name":"toInt192","nameLocation":"21638:8:20","nodeType":"FunctionDefinition","parameters":{"id":4925,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4924,"mutability":"mutable","name":"value","nameLocation":"21654:5:20","nodeType":"VariableDeclaration","scope":4944,"src":"21647:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4923,"name":"int256","nodeType":"ElementaryTypeName","src":"21647:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"21646:14:20"},"returnParameters":{"id":4928,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4927,"mutability":"mutable","name":"downcasted","nameLocation":"21691:10:20","nodeType":"VariableDeclaration","scope":4944,"src":"21684:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"},"typeName":{"id":4926,"name":"int192","nodeType":"ElementaryTypeName","src":"21684:6:20","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"visibility":"internal"}],"src":"21683:19:20"},"scope":5502,"src":"21629:198:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4966,"nodeType":"Block","src":"22262:124:20","statements":[{"expression":{"id":4957,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4952,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4950,"src":"22272:10:20","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4955,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4947,"src":"22292:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4954,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22285:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int184_$","typeString":"type(int184)"},"typeName":{"id":4953,"name":"int184","nodeType":"ElementaryTypeName","src":"22285:6:20","typeDescriptions":{}}},"id":4956,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22285:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"src":"22272:26:20","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"id":4958,"nodeType":"ExpressionStatement","src":"22272:26:20"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4962,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4960,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4950,"src":"22316:10:20","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4961,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4947,"src":"22330:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22316:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203138342062697473","id":4963,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"22337:41:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_86c53d89b1944d561ecfa42e859033241d1df6ea8d42a57ae02f79d45de4aa75","typeString":"literal_string \"SafeCast: value doesn't fit in 184 bits\""},"value":"SafeCast: value doesn't fit in 184 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_86c53d89b1944d561ecfa42e859033241d1df6ea8d42a57ae02f79d45de4aa75","typeString":"literal_string \"SafeCast: value doesn't fit in 184 bits\""}],"id":4959,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"22308:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4964,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22308:71:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4965,"nodeType":"ExpressionStatement","src":"22308:71:20"}]},"documentation":{"id":4945,"nodeType":"StructuredDocumentation","src":"21833:350:20","text":" @dev Returns the downcasted int184 from int256, reverting on\n overflow (when the input is less than smallest int184 or\n greater than largest int184).\n Counterpart to Solidity's `int184` operator.\n Requirements:\n - input must fit into 184 bits\n _Available since v4.7._"},"id":4967,"implemented":true,"kind":"function","modifiers":[],"name":"toInt184","nameLocation":"22197:8:20","nodeType":"FunctionDefinition","parameters":{"id":4948,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4947,"mutability":"mutable","name":"value","nameLocation":"22213:5:20","nodeType":"VariableDeclaration","scope":4967,"src":"22206:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4946,"name":"int256","nodeType":"ElementaryTypeName","src":"22206:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22205:14:20"},"returnParameters":{"id":4951,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4950,"mutability":"mutable","name":"downcasted","nameLocation":"22250:10:20","nodeType":"VariableDeclaration","scope":4967,"src":"22243:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"},"typeName":{"id":4949,"name":"int184","nodeType":"ElementaryTypeName","src":"22243:6:20","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"visibility":"internal"}],"src":"22242:19:20"},"scope":5502,"src":"22188:198:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4989,"nodeType":"Block","src":"22821:124:20","statements":[{"expression":{"id":4980,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4975,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4973,"src":"22831:10:20","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4978,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4970,"src":"22851:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4977,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22844:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int176_$","typeString":"type(int176)"},"typeName":{"id":4976,"name":"int176","nodeType":"ElementaryTypeName","src":"22844:6:20","typeDescriptions":{}}},"id":4979,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22844:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"src":"22831:26:20","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"id":4981,"nodeType":"ExpressionStatement","src":"22831:26:20"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4985,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4983,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4973,"src":"22875:10:20","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4984,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4970,"src":"22889:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22875:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203137362062697473","id":4986,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"22896:41:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_4069e970f734339c7841e84a1b26f503bff22b76884c1168dc24e2e6af9b1e30","typeString":"literal_string \"SafeCast: value doesn't fit in 176 bits\""},"value":"SafeCast: value doesn't fit in 176 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4069e970f734339c7841e84a1b26f503bff22b76884c1168dc24e2e6af9b1e30","typeString":"literal_string \"SafeCast: value doesn't fit in 176 bits\""}],"id":4982,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"22867:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4987,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22867:71:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4988,"nodeType":"ExpressionStatement","src":"22867:71:20"}]},"documentation":{"id":4968,"nodeType":"StructuredDocumentation","src":"22392:350:20","text":" @dev Returns the downcasted int176 from int256, reverting on\n overflow (when the input is less than smallest int176 or\n greater than largest int176).\n Counterpart to Solidity's `int176` operator.\n Requirements:\n - input must fit into 176 bits\n _Available since v4.7._"},"id":4990,"implemented":true,"kind":"function","modifiers":[],"name":"toInt176","nameLocation":"22756:8:20","nodeType":"FunctionDefinition","parameters":{"id":4971,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4970,"mutability":"mutable","name":"value","nameLocation":"22772:5:20","nodeType":"VariableDeclaration","scope":4990,"src":"22765:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4969,"name":"int256","nodeType":"ElementaryTypeName","src":"22765:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22764:14:20"},"returnParameters":{"id":4974,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4973,"mutability":"mutable","name":"downcasted","nameLocation":"22809:10:20","nodeType":"VariableDeclaration","scope":4990,"src":"22802:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"},"typeName":{"id":4972,"name":"int176","nodeType":"ElementaryTypeName","src":"22802:6:20","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"visibility":"internal"}],"src":"22801:19:20"},"scope":5502,"src":"22747:198:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5012,"nodeType":"Block","src":"23380:124:20","statements":[{"expression":{"id":5003,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4998,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4996,"src":"23390:10:20","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5001,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4993,"src":"23410:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5000,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23403:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int168_$","typeString":"type(int168)"},"typeName":{"id":4999,"name":"int168","nodeType":"ElementaryTypeName","src":"23403:6:20","typeDescriptions":{}}},"id":5002,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23403:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"src":"23390:26:20","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"id":5004,"nodeType":"ExpressionStatement","src":"23390:26:20"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5008,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5006,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4996,"src":"23434:10:20","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5007,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4993,"src":"23448:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23434:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203136382062697473","id":5009,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"23455:41:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_67ef32a3cbe7b34392347d335b0a7ae95c74a34ca40e4efb58f6c9a3154e85a1","typeString":"literal_string \"SafeCast: value doesn't fit in 168 bits\""},"value":"SafeCast: value doesn't fit in 168 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_67ef32a3cbe7b34392347d335b0a7ae95c74a34ca40e4efb58f6c9a3154e85a1","typeString":"literal_string \"SafeCast: value doesn't fit in 168 bits\""}],"id":5005,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"23426:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5010,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23426:71:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5011,"nodeType":"ExpressionStatement","src":"23426:71:20"}]},"documentation":{"id":4991,"nodeType":"StructuredDocumentation","src":"22951:350:20","text":" @dev Returns the downcasted int168 from int256, reverting on\n overflow (when the input is less than smallest int168 or\n greater than largest int168).\n Counterpart to Solidity's `int168` operator.\n Requirements:\n - input must fit into 168 bits\n _Available since v4.7._"},"id":5013,"implemented":true,"kind":"function","modifiers":[],"name":"toInt168","nameLocation":"23315:8:20","nodeType":"FunctionDefinition","parameters":{"id":4994,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4993,"mutability":"mutable","name":"value","nameLocation":"23331:5:20","nodeType":"VariableDeclaration","scope":5013,"src":"23324:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4992,"name":"int256","nodeType":"ElementaryTypeName","src":"23324:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23323:14:20"},"returnParameters":{"id":4997,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4996,"mutability":"mutable","name":"downcasted","nameLocation":"23368:10:20","nodeType":"VariableDeclaration","scope":5013,"src":"23361:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"},"typeName":{"id":4995,"name":"int168","nodeType":"ElementaryTypeName","src":"23361:6:20","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"visibility":"internal"}],"src":"23360:19:20"},"scope":5502,"src":"23306:198:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5035,"nodeType":"Block","src":"23939:124:20","statements":[{"expression":{"id":5026,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5021,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5019,"src":"23949:10:20","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5024,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5016,"src":"23969:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5023,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23962:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int160_$","typeString":"type(int160)"},"typeName":{"id":5022,"name":"int160","nodeType":"ElementaryTypeName","src":"23962:6:20","typeDescriptions":{}}},"id":5025,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23962:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"src":"23949:26:20","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"id":5027,"nodeType":"ExpressionStatement","src":"23949:26:20"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5031,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5029,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5019,"src":"23993:10:20","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5030,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5016,"src":"24007:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23993:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203136302062697473","id":5032,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"24014:41:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_976ecce9083debfe29d3a99b955facf24b8725f1b964d1a5bb4197ffcd60ab9d","typeString":"literal_string \"SafeCast: value doesn't fit in 160 bits\""},"value":"SafeCast: value doesn't fit in 160 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_976ecce9083debfe29d3a99b955facf24b8725f1b964d1a5bb4197ffcd60ab9d","typeString":"literal_string \"SafeCast: value doesn't fit in 160 bits\""}],"id":5028,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"23985:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5033,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23985:71:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5034,"nodeType":"ExpressionStatement","src":"23985:71:20"}]},"documentation":{"id":5014,"nodeType":"StructuredDocumentation","src":"23510:350:20","text":" @dev Returns the downcasted int160 from int256, reverting on\n overflow (when the input is less than smallest int160 or\n greater than largest int160).\n Counterpart to Solidity's `int160` operator.\n Requirements:\n - input must fit into 160 bits\n _Available since v4.7._"},"id":5036,"implemented":true,"kind":"function","modifiers":[],"name":"toInt160","nameLocation":"23874:8:20","nodeType":"FunctionDefinition","parameters":{"id":5017,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5016,"mutability":"mutable","name":"value","nameLocation":"23890:5:20","nodeType":"VariableDeclaration","scope":5036,"src":"23883:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5015,"name":"int256","nodeType":"ElementaryTypeName","src":"23883:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23882:14:20"},"returnParameters":{"id":5020,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5019,"mutability":"mutable","name":"downcasted","nameLocation":"23927:10:20","nodeType":"VariableDeclaration","scope":5036,"src":"23920:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"},"typeName":{"id":5018,"name":"int160","nodeType":"ElementaryTypeName","src":"23920:6:20","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"visibility":"internal"}],"src":"23919:19:20"},"scope":5502,"src":"23865:198:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5058,"nodeType":"Block","src":"24498:124:20","statements":[{"expression":{"id":5049,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5044,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5042,"src":"24508:10:20","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5047,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5039,"src":"24528:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5046,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24521:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int152_$","typeString":"type(int152)"},"typeName":{"id":5045,"name":"int152","nodeType":"ElementaryTypeName","src":"24521:6:20","typeDescriptions":{}}},"id":5048,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24521:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"src":"24508:26:20","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"id":5050,"nodeType":"ExpressionStatement","src":"24508:26:20"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5054,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5052,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5042,"src":"24552:10:20","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5053,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5039,"src":"24566:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24552:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203135322062697473","id":5055,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"24573:41:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_211cad43a2caf5f01e34af51190b8a7b6f3d9c195bd25586ea12242191b97831","typeString":"literal_string \"SafeCast: value doesn't fit in 152 bits\""},"value":"SafeCast: value doesn't fit in 152 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_211cad43a2caf5f01e34af51190b8a7b6f3d9c195bd25586ea12242191b97831","typeString":"literal_string \"SafeCast: value doesn't fit in 152 bits\""}],"id":5051,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"24544:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5056,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24544:71:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5057,"nodeType":"ExpressionStatement","src":"24544:71:20"}]},"documentation":{"id":5037,"nodeType":"StructuredDocumentation","src":"24069:350:20","text":" @dev Returns the downcasted int152 from int256, reverting on\n overflow (when the input is less than smallest int152 or\n greater than largest int152).\n Counterpart to Solidity's `int152` operator.\n Requirements:\n - input must fit into 152 bits\n _Available since v4.7._"},"id":5059,"implemented":true,"kind":"function","modifiers":[],"name":"toInt152","nameLocation":"24433:8:20","nodeType":"FunctionDefinition","parameters":{"id":5040,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5039,"mutability":"mutable","name":"value","nameLocation":"24449:5:20","nodeType":"VariableDeclaration","scope":5059,"src":"24442:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5038,"name":"int256","nodeType":"ElementaryTypeName","src":"24442:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24441:14:20"},"returnParameters":{"id":5043,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5042,"mutability":"mutable","name":"downcasted","nameLocation":"24486:10:20","nodeType":"VariableDeclaration","scope":5059,"src":"24479:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"},"typeName":{"id":5041,"name":"int152","nodeType":"ElementaryTypeName","src":"24479:6:20","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"visibility":"internal"}],"src":"24478:19:20"},"scope":5502,"src":"24424:198:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5081,"nodeType":"Block","src":"25057:124:20","statements":[{"expression":{"id":5072,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5067,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5065,"src":"25067:10:20","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5070,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5062,"src":"25087:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5069,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25080:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int144_$","typeString":"type(int144)"},"typeName":{"id":5068,"name":"int144","nodeType":"ElementaryTypeName","src":"25080:6:20","typeDescriptions":{}}},"id":5071,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25080:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"src":"25067:26:20","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"id":5073,"nodeType":"ExpressionStatement","src":"25067:26:20"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5077,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5075,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5065,"src":"25111:10:20","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5076,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5062,"src":"25125:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"25111:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203134342062697473","id":5078,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"25132:41:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_17d8c5a6d3b2fd2517ba2e4a2ac70a3367cd362448f8338aaa6edf8bfd812bab","typeString":"literal_string \"SafeCast: value doesn't fit in 144 bits\""},"value":"SafeCast: value doesn't fit in 144 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_17d8c5a6d3b2fd2517ba2e4a2ac70a3367cd362448f8338aaa6edf8bfd812bab","typeString":"literal_string \"SafeCast: value doesn't fit in 144 bits\""}],"id":5074,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"25103:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5079,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25103:71:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5080,"nodeType":"ExpressionStatement","src":"25103:71:20"}]},"documentation":{"id":5060,"nodeType":"StructuredDocumentation","src":"24628:350:20","text":" @dev Returns the downcasted int144 from int256, reverting on\n overflow (when the input is less than smallest int144 or\n greater than largest int144).\n Counterpart to Solidity's `int144` operator.\n Requirements:\n - input must fit into 144 bits\n _Available since v4.7._"},"id":5082,"implemented":true,"kind":"function","modifiers":[],"name":"toInt144","nameLocation":"24992:8:20","nodeType":"FunctionDefinition","parameters":{"id":5063,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5062,"mutability":"mutable","name":"value","nameLocation":"25008:5:20","nodeType":"VariableDeclaration","scope":5082,"src":"25001:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5061,"name":"int256","nodeType":"ElementaryTypeName","src":"25001:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25000:14:20"},"returnParameters":{"id":5066,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5065,"mutability":"mutable","name":"downcasted","nameLocation":"25045:10:20","nodeType":"VariableDeclaration","scope":5082,"src":"25038:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"},"typeName":{"id":5064,"name":"int144","nodeType":"ElementaryTypeName","src":"25038:6:20","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"visibility":"internal"}],"src":"25037:19:20"},"scope":5502,"src":"24983:198:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5104,"nodeType":"Block","src":"25616:124:20","statements":[{"expression":{"id":5095,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5090,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5088,"src":"25626:10:20","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5093,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5085,"src":"25646:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5092,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25639:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int136_$","typeString":"type(int136)"},"typeName":{"id":5091,"name":"int136","nodeType":"ElementaryTypeName","src":"25639:6:20","typeDescriptions":{}}},"id":5094,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25639:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"src":"25626:26:20","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"id":5096,"nodeType":"ExpressionStatement","src":"25626:26:20"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5100,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5098,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5088,"src":"25670:10:20","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5099,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5085,"src":"25684:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"25670:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203133362062697473","id":5101,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"25691:41:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_8b1f81e2e2913e1cee9dba7bcd9837bbf8a8122edaac4afc578271db3c25a56a","typeString":"literal_string \"SafeCast: value doesn't fit in 136 bits\""},"value":"SafeCast: value doesn't fit in 136 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8b1f81e2e2913e1cee9dba7bcd9837bbf8a8122edaac4afc578271db3c25a56a","typeString":"literal_string \"SafeCast: value doesn't fit in 136 bits\""}],"id":5097,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"25662:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5102,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25662:71:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5103,"nodeType":"ExpressionStatement","src":"25662:71:20"}]},"documentation":{"id":5083,"nodeType":"StructuredDocumentation","src":"25187:350:20","text":" @dev Returns the downcasted int136 from int256, reverting on\n overflow (when the input is less than smallest int136 or\n greater than largest int136).\n Counterpart to Solidity's `int136` operator.\n Requirements:\n - input must fit into 136 bits\n _Available since v4.7._"},"id":5105,"implemented":true,"kind":"function","modifiers":[],"name":"toInt136","nameLocation":"25551:8:20","nodeType":"FunctionDefinition","parameters":{"id":5086,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5085,"mutability":"mutable","name":"value","nameLocation":"25567:5:20","nodeType":"VariableDeclaration","scope":5105,"src":"25560:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5084,"name":"int256","nodeType":"ElementaryTypeName","src":"25560:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25559:14:20"},"returnParameters":{"id":5089,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5088,"mutability":"mutable","name":"downcasted","nameLocation":"25604:10:20","nodeType":"VariableDeclaration","scope":5105,"src":"25597:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"},"typeName":{"id":5087,"name":"int136","nodeType":"ElementaryTypeName","src":"25597:6:20","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"visibility":"internal"}],"src":"25596:19:20"},"scope":5502,"src":"25542:198:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5127,"nodeType":"Block","src":"26175:124:20","statements":[{"expression":{"id":5118,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5113,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5111,"src":"26185:10:20","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5116,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5108,"src":"26205:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5115,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26198:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int128_$","typeString":"type(int128)"},"typeName":{"id":5114,"name":"int128","nodeType":"ElementaryTypeName","src":"26198:6:20","typeDescriptions":{}}},"id":5117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26198:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"src":"26185:26:20","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"id":5119,"nodeType":"ExpressionStatement","src":"26185:26:20"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5123,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5121,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5111,"src":"26229:10:20","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5122,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5108,"src":"26243:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26229:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203132382062697473","id":5124,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"26250:41:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_47a1e201974f94d3d1a31c8b08ae18c6966c758bdcd4400020012b98cc55426c","typeString":"literal_string \"SafeCast: value doesn't fit in 128 bits\""},"value":"SafeCast: value doesn't fit in 128 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_47a1e201974f94d3d1a31c8b08ae18c6966c758bdcd4400020012b98cc55426c","typeString":"literal_string \"SafeCast: value doesn't fit in 128 bits\""}],"id":5120,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"26221:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5125,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26221:71:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5126,"nodeType":"ExpressionStatement","src":"26221:71:20"}]},"documentation":{"id":5106,"nodeType":"StructuredDocumentation","src":"25746:350:20","text":" @dev Returns the downcasted int128 from int256, reverting on\n overflow (when the input is less than smallest int128 or\n greater than largest int128).\n Counterpart to Solidity's `int128` operator.\n Requirements:\n - input must fit into 128 bits\n _Available since v3.1._"},"id":5128,"implemented":true,"kind":"function","modifiers":[],"name":"toInt128","nameLocation":"26110:8:20","nodeType":"FunctionDefinition","parameters":{"id":5109,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5108,"mutability":"mutable","name":"value","nameLocation":"26126:5:20","nodeType":"VariableDeclaration","scope":5128,"src":"26119:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5107,"name":"int256","nodeType":"ElementaryTypeName","src":"26119:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"26118:14:20"},"returnParameters":{"id":5112,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5111,"mutability":"mutable","name":"downcasted","nameLocation":"26163:10:20","nodeType":"VariableDeclaration","scope":5128,"src":"26156:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":5110,"name":"int128","nodeType":"ElementaryTypeName","src":"26156:6:20","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"src":"26155:19:20"},"scope":5502,"src":"26101:198:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5150,"nodeType":"Block","src":"26734:124:20","statements":[{"expression":{"id":5141,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5136,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5134,"src":"26744:10:20","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5139,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5131,"src":"26764:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5138,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26757:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int120_$","typeString":"type(int120)"},"typeName":{"id":5137,"name":"int120","nodeType":"ElementaryTypeName","src":"26757:6:20","typeDescriptions":{}}},"id":5140,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26757:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"src":"26744:26:20","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"id":5142,"nodeType":"ExpressionStatement","src":"26744:26:20"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5146,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5144,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5134,"src":"26788:10:20","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5145,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5131,"src":"26802:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26788:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203132302062697473","id":5147,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"26809:41:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_3c40c26bb27060cce77002ca0c426dcc1bef2d367c195ca2eb24bd8b2cc1bb09","typeString":"literal_string \"SafeCast: value doesn't fit in 120 bits\""},"value":"SafeCast: value doesn't fit in 120 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3c40c26bb27060cce77002ca0c426dcc1bef2d367c195ca2eb24bd8b2cc1bb09","typeString":"literal_string \"SafeCast: value doesn't fit in 120 bits\""}],"id":5143,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"26780:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5148,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26780:71:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5149,"nodeType":"ExpressionStatement","src":"26780:71:20"}]},"documentation":{"id":5129,"nodeType":"StructuredDocumentation","src":"26305:350:20","text":" @dev Returns the downcasted int120 from int256, reverting on\n overflow (when the input is less than smallest int120 or\n greater than largest int120).\n Counterpart to Solidity's `int120` operator.\n Requirements:\n - input must fit into 120 bits\n _Available since v4.7._"},"id":5151,"implemented":true,"kind":"function","modifiers":[],"name":"toInt120","nameLocation":"26669:8:20","nodeType":"FunctionDefinition","parameters":{"id":5132,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5131,"mutability":"mutable","name":"value","nameLocation":"26685:5:20","nodeType":"VariableDeclaration","scope":5151,"src":"26678:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5130,"name":"int256","nodeType":"ElementaryTypeName","src":"26678:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"26677:14:20"},"returnParameters":{"id":5135,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5134,"mutability":"mutable","name":"downcasted","nameLocation":"26722:10:20","nodeType":"VariableDeclaration","scope":5151,"src":"26715:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"},"typeName":{"id":5133,"name":"int120","nodeType":"ElementaryTypeName","src":"26715:6:20","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"visibility":"internal"}],"src":"26714:19:20"},"scope":5502,"src":"26660:198:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5173,"nodeType":"Block","src":"27293:124:20","statements":[{"expression":{"id":5164,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5159,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5157,"src":"27303:10:20","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5162,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5154,"src":"27323:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5161,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27316:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int112_$","typeString":"type(int112)"},"typeName":{"id":5160,"name":"int112","nodeType":"ElementaryTypeName","src":"27316:6:20","typeDescriptions":{}}},"id":5163,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27316:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"src":"27303:26:20","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"id":5165,"nodeType":"ExpressionStatement","src":"27303:26:20"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5169,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5167,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5157,"src":"27347:10:20","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5168,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5154,"src":"27361:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27347:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203131322062697473","id":5170,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"27368:41:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_45659ae152ef697531e1c1115de07c87af91ac22466c3e76b808821799776efd","typeString":"literal_string \"SafeCast: value doesn't fit in 112 bits\""},"value":"SafeCast: value doesn't fit in 112 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_45659ae152ef697531e1c1115de07c87af91ac22466c3e76b808821799776efd","typeString":"literal_string \"SafeCast: value doesn't fit in 112 bits\""}],"id":5166,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"27339:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5171,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27339:71:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5172,"nodeType":"ExpressionStatement","src":"27339:71:20"}]},"documentation":{"id":5152,"nodeType":"StructuredDocumentation","src":"26864:350:20","text":" @dev Returns the downcasted int112 from int256, reverting on\n overflow (when the input is less than smallest int112 or\n greater than largest int112).\n Counterpart to Solidity's `int112` operator.\n Requirements:\n - input must fit into 112 bits\n _Available since v4.7._"},"id":5174,"implemented":true,"kind":"function","modifiers":[],"name":"toInt112","nameLocation":"27228:8:20","nodeType":"FunctionDefinition","parameters":{"id":5155,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5154,"mutability":"mutable","name":"value","nameLocation":"27244:5:20","nodeType":"VariableDeclaration","scope":5174,"src":"27237:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5153,"name":"int256","nodeType":"ElementaryTypeName","src":"27237:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27236:14:20"},"returnParameters":{"id":5158,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5157,"mutability":"mutable","name":"downcasted","nameLocation":"27281:10:20","nodeType":"VariableDeclaration","scope":5174,"src":"27274:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"},"typeName":{"id":5156,"name":"int112","nodeType":"ElementaryTypeName","src":"27274:6:20","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"visibility":"internal"}],"src":"27273:19:20"},"scope":5502,"src":"27219:198:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5196,"nodeType":"Block","src":"27852:124:20","statements":[{"expression":{"id":5187,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5182,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5180,"src":"27862:10:20","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5185,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5177,"src":"27882:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5184,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27875:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int104_$","typeString":"type(int104)"},"typeName":{"id":5183,"name":"int104","nodeType":"ElementaryTypeName","src":"27875:6:20","typeDescriptions":{}}},"id":5186,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27875:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"src":"27862:26:20","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"id":5188,"nodeType":"ExpressionStatement","src":"27862:26:20"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5192,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5190,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5180,"src":"27906:10:20","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5191,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5177,"src":"27920:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27906:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203130342062697473","id":5193,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"27927:41:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_5d7f3e1b7e9f9a06fded6b093c6fd1473ca0a14cc4bb683db904e803e2482981","typeString":"literal_string \"SafeCast: value doesn't fit in 104 bits\""},"value":"SafeCast: value doesn't fit in 104 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5d7f3e1b7e9f9a06fded6b093c6fd1473ca0a14cc4bb683db904e803e2482981","typeString":"literal_string \"SafeCast: value doesn't fit in 104 bits\""}],"id":5189,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"27898:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5194,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27898:71:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5195,"nodeType":"ExpressionStatement","src":"27898:71:20"}]},"documentation":{"id":5175,"nodeType":"StructuredDocumentation","src":"27423:350:20","text":" @dev Returns the downcasted int104 from int256, reverting on\n overflow (when the input is less than smallest int104 or\n greater than largest int104).\n Counterpart to Solidity's `int104` operator.\n Requirements:\n - input must fit into 104 bits\n _Available since v4.7._"},"id":5197,"implemented":true,"kind":"function","modifiers":[],"name":"toInt104","nameLocation":"27787:8:20","nodeType":"FunctionDefinition","parameters":{"id":5178,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5177,"mutability":"mutable","name":"value","nameLocation":"27803:5:20","nodeType":"VariableDeclaration","scope":5197,"src":"27796:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5176,"name":"int256","nodeType":"ElementaryTypeName","src":"27796:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27795:14:20"},"returnParameters":{"id":5181,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5180,"mutability":"mutable","name":"downcasted","nameLocation":"27840:10:20","nodeType":"VariableDeclaration","scope":5197,"src":"27833:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"},"typeName":{"id":5179,"name":"int104","nodeType":"ElementaryTypeName","src":"27833:6:20","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"visibility":"internal"}],"src":"27832:19:20"},"scope":5502,"src":"27778:198:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5219,"nodeType":"Block","src":"28404:122:20","statements":[{"expression":{"id":5210,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5205,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5203,"src":"28414:10:20","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5208,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5200,"src":"28433:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5207,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28427:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int96_$","typeString":"type(int96)"},"typeName":{"id":5206,"name":"int96","nodeType":"ElementaryTypeName","src":"28427:5:20","typeDescriptions":{}}},"id":5209,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28427:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"src":"28414:25:20","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"id":5211,"nodeType":"ExpressionStatement","src":"28414:25:20"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5215,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5213,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5203,"src":"28457:10:20","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5214,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5200,"src":"28471:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28457:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2039362062697473","id":5216,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"28478:40:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_06d20189090e973729391526269baef79c35dd621633195648e5f8309eef9e19","typeString":"literal_string \"SafeCast: value doesn't fit in 96 bits\""},"value":"SafeCast: value doesn't fit in 96 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_06d20189090e973729391526269baef79c35dd621633195648e5f8309eef9e19","typeString":"literal_string \"SafeCast: value doesn't fit in 96 bits\""}],"id":5212,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"28449:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5217,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28449:70:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5218,"nodeType":"ExpressionStatement","src":"28449:70:20"}]},"documentation":{"id":5198,"nodeType":"StructuredDocumentation","src":"27982:345:20","text":" @dev Returns the downcasted int96 from int256, reverting on\n overflow (when the input is less than smallest int96 or\n greater than largest int96).\n Counterpart to Solidity's `int96` operator.\n Requirements:\n - input must fit into 96 bits\n _Available since v4.7._"},"id":5220,"implemented":true,"kind":"function","modifiers":[],"name":"toInt96","nameLocation":"28341:7:20","nodeType":"FunctionDefinition","parameters":{"id":5201,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5200,"mutability":"mutable","name":"value","nameLocation":"28356:5:20","nodeType":"VariableDeclaration","scope":5220,"src":"28349:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5199,"name":"int256","nodeType":"ElementaryTypeName","src":"28349:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28348:14:20"},"returnParameters":{"id":5204,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5203,"mutability":"mutable","name":"downcasted","nameLocation":"28392:10:20","nodeType":"VariableDeclaration","scope":5220,"src":"28386:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"},"typeName":{"id":5202,"name":"int96","nodeType":"ElementaryTypeName","src":"28386:5:20","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"visibility":"internal"}],"src":"28385:18:20"},"scope":5502,"src":"28332:194:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5242,"nodeType":"Block","src":"28954:122:20","statements":[{"expression":{"id":5233,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5228,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5226,"src":"28964:10:20","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5231,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5223,"src":"28983:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5230,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28977:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int88_$","typeString":"type(int88)"},"typeName":{"id":5229,"name":"int88","nodeType":"ElementaryTypeName","src":"28977:5:20","typeDescriptions":{}}},"id":5232,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28977:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"src":"28964:25:20","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"id":5234,"nodeType":"ExpressionStatement","src":"28964:25:20"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5238,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5236,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5226,"src":"29007:10:20","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5237,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5223,"src":"29021:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29007:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2038382062697473","id":5239,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"29028:40:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_ae080bd7a76a46f0a0caf00941bc2cdf6002799ca2813a3af7295019576d715d","typeString":"literal_string \"SafeCast: value doesn't fit in 88 bits\""},"value":"SafeCast: value doesn't fit in 88 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ae080bd7a76a46f0a0caf00941bc2cdf6002799ca2813a3af7295019576d715d","typeString":"literal_string \"SafeCast: value doesn't fit in 88 bits\""}],"id":5235,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"28999:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5240,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28999:70:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5241,"nodeType":"ExpressionStatement","src":"28999:70:20"}]},"documentation":{"id":5221,"nodeType":"StructuredDocumentation","src":"28532:345:20","text":" @dev Returns the downcasted int88 from int256, reverting on\n overflow (when the input is less than smallest int88 or\n greater than largest int88).\n Counterpart to Solidity's `int88` operator.\n Requirements:\n - input must fit into 88 bits\n _Available since v4.7._"},"id":5243,"implemented":true,"kind":"function","modifiers":[],"name":"toInt88","nameLocation":"28891:7:20","nodeType":"FunctionDefinition","parameters":{"id":5224,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5223,"mutability":"mutable","name":"value","nameLocation":"28906:5:20","nodeType":"VariableDeclaration","scope":5243,"src":"28899:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5222,"name":"int256","nodeType":"ElementaryTypeName","src":"28899:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28898:14:20"},"returnParameters":{"id":5227,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5226,"mutability":"mutable","name":"downcasted","nameLocation":"28942:10:20","nodeType":"VariableDeclaration","scope":5243,"src":"28936:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"},"typeName":{"id":5225,"name":"int88","nodeType":"ElementaryTypeName","src":"28936:5:20","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"visibility":"internal"}],"src":"28935:18:20"},"scope":5502,"src":"28882:194:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5265,"nodeType":"Block","src":"29504:122:20","statements":[{"expression":{"id":5256,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5251,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5249,"src":"29514:10:20","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5254,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5246,"src":"29533:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5253,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29527:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int80_$","typeString":"type(int80)"},"typeName":{"id":5252,"name":"int80","nodeType":"ElementaryTypeName","src":"29527:5:20","typeDescriptions":{}}},"id":5255,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29527:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"src":"29514:25:20","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"id":5257,"nodeType":"ExpressionStatement","src":"29514:25:20"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5261,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5259,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5249,"src":"29557:10:20","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5260,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5246,"src":"29571:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29557:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2038302062697473","id":5262,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"29578:40:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_3cba87c71fade7d3cd7b673c159aab98afc040a5369691a33559d905d20ab5d1","typeString":"literal_string \"SafeCast: value doesn't fit in 80 bits\""},"value":"SafeCast: value doesn't fit in 80 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3cba87c71fade7d3cd7b673c159aab98afc040a5369691a33559d905d20ab5d1","typeString":"literal_string \"SafeCast: value doesn't fit in 80 bits\""}],"id":5258,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"29549:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5263,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29549:70:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5264,"nodeType":"ExpressionStatement","src":"29549:70:20"}]},"documentation":{"id":5244,"nodeType":"StructuredDocumentation","src":"29082:345:20","text":" @dev Returns the downcasted int80 from int256, reverting on\n overflow (when the input is less than smallest int80 or\n greater than largest int80).\n Counterpart to Solidity's `int80` operator.\n Requirements:\n - input must fit into 80 bits\n _Available since v4.7._"},"id":5266,"implemented":true,"kind":"function","modifiers":[],"name":"toInt80","nameLocation":"29441:7:20","nodeType":"FunctionDefinition","parameters":{"id":5247,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5246,"mutability":"mutable","name":"value","nameLocation":"29456:5:20","nodeType":"VariableDeclaration","scope":5266,"src":"29449:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5245,"name":"int256","nodeType":"ElementaryTypeName","src":"29449:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29448:14:20"},"returnParameters":{"id":5250,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5249,"mutability":"mutable","name":"downcasted","nameLocation":"29492:10:20","nodeType":"VariableDeclaration","scope":5266,"src":"29486:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"},"typeName":{"id":5248,"name":"int80","nodeType":"ElementaryTypeName","src":"29486:5:20","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"visibility":"internal"}],"src":"29485:18:20"},"scope":5502,"src":"29432:194:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5288,"nodeType":"Block","src":"30054:122:20","statements":[{"expression":{"id":5279,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5274,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5272,"src":"30064:10:20","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5277,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5269,"src":"30083:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5276,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30077:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int72_$","typeString":"type(int72)"},"typeName":{"id":5275,"name":"int72","nodeType":"ElementaryTypeName","src":"30077:5:20","typeDescriptions":{}}},"id":5278,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30077:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"src":"30064:25:20","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"id":5280,"nodeType":"ExpressionStatement","src":"30064:25:20"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5284,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5282,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5272,"src":"30107:10:20","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5283,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5269,"src":"30121:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30107:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2037322062697473","id":5285,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"30128:40:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_71584237cc5250b8f417982144a947efe8f4c76feba008ff32ac480e69d60606","typeString":"literal_string \"SafeCast: value doesn't fit in 72 bits\""},"value":"SafeCast: value doesn't fit in 72 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_71584237cc5250b8f417982144a947efe8f4c76feba008ff32ac480e69d60606","typeString":"literal_string \"SafeCast: value doesn't fit in 72 bits\""}],"id":5281,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"30099:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5286,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30099:70:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5287,"nodeType":"ExpressionStatement","src":"30099:70:20"}]},"documentation":{"id":5267,"nodeType":"StructuredDocumentation","src":"29632:345:20","text":" @dev Returns the downcasted int72 from int256, reverting on\n overflow (when the input is less than smallest int72 or\n greater than largest int72).\n Counterpart to Solidity's `int72` operator.\n Requirements:\n - input must fit into 72 bits\n _Available since v4.7._"},"id":5289,"implemented":true,"kind":"function","modifiers":[],"name":"toInt72","nameLocation":"29991:7:20","nodeType":"FunctionDefinition","parameters":{"id":5270,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5269,"mutability":"mutable","name":"value","nameLocation":"30006:5:20","nodeType":"VariableDeclaration","scope":5289,"src":"29999:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5268,"name":"int256","nodeType":"ElementaryTypeName","src":"29999:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29998:14:20"},"returnParameters":{"id":5273,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5272,"mutability":"mutable","name":"downcasted","nameLocation":"30042:10:20","nodeType":"VariableDeclaration","scope":5289,"src":"30036:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"},"typeName":{"id":5271,"name":"int72","nodeType":"ElementaryTypeName","src":"30036:5:20","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"visibility":"internal"}],"src":"30035:18:20"},"scope":5502,"src":"29982:194:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5311,"nodeType":"Block","src":"30604:122:20","statements":[{"expression":{"id":5302,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5297,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5295,"src":"30614:10:20","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5300,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5292,"src":"30633:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5299,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30627:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int64_$","typeString":"type(int64)"},"typeName":{"id":5298,"name":"int64","nodeType":"ElementaryTypeName","src":"30627:5:20","typeDescriptions":{}}},"id":5301,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30627:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"src":"30614:25:20","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"id":5303,"nodeType":"ExpressionStatement","src":"30614:25:20"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5307,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5305,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5295,"src":"30657:10:20","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5306,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5292,"src":"30671:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30657:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2036342062697473","id":5308,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"30678:40:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_93ae0c6bf6ffaece591a770b1865daa9f65157e541970aa9d8dc5f89a9490939","typeString":"literal_string \"SafeCast: value doesn't fit in 64 bits\""},"value":"SafeCast: value doesn't fit in 64 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_93ae0c6bf6ffaece591a770b1865daa9f65157e541970aa9d8dc5f89a9490939","typeString":"literal_string \"SafeCast: value doesn't fit in 64 bits\""}],"id":5304,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"30649:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5309,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30649:70:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5310,"nodeType":"ExpressionStatement","src":"30649:70:20"}]},"documentation":{"id":5290,"nodeType":"StructuredDocumentation","src":"30182:345:20","text":" @dev Returns the downcasted int64 from int256, reverting on\n overflow (when the input is less than smallest int64 or\n greater than largest int64).\n Counterpart to Solidity's `int64` operator.\n Requirements:\n - input must fit into 64 bits\n _Available since v3.1._"},"id":5312,"implemented":true,"kind":"function","modifiers":[],"name":"toInt64","nameLocation":"30541:7:20","nodeType":"FunctionDefinition","parameters":{"id":5293,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5292,"mutability":"mutable","name":"value","nameLocation":"30556:5:20","nodeType":"VariableDeclaration","scope":5312,"src":"30549:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5291,"name":"int256","nodeType":"ElementaryTypeName","src":"30549:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30548:14:20"},"returnParameters":{"id":5296,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5295,"mutability":"mutable","name":"downcasted","nameLocation":"30592:10:20","nodeType":"VariableDeclaration","scope":5312,"src":"30586:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":5294,"name":"int64","nodeType":"ElementaryTypeName","src":"30586:5:20","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"src":"30585:18:20"},"scope":5502,"src":"30532:194:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5334,"nodeType":"Block","src":"31154:122:20","statements":[{"expression":{"id":5325,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5320,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5318,"src":"31164:10:20","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5323,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5315,"src":"31183:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5322,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31177:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int56_$","typeString":"type(int56)"},"typeName":{"id":5321,"name":"int56","nodeType":"ElementaryTypeName","src":"31177:5:20","typeDescriptions":{}}},"id":5324,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31177:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"src":"31164:25:20","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"id":5326,"nodeType":"ExpressionStatement","src":"31164:25:20"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5330,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5328,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5318,"src":"31207:10:20","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5329,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5315,"src":"31221:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31207:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2035362062697473","id":5331,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"31228:40:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_656ad93b5ff6665bfe05d97d51fad7c02ad79e6c43bef066c042a6900f450bc5","typeString":"literal_string \"SafeCast: value doesn't fit in 56 bits\""},"value":"SafeCast: value doesn't fit in 56 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_656ad93b5ff6665bfe05d97d51fad7c02ad79e6c43bef066c042a6900f450bc5","typeString":"literal_string \"SafeCast: value doesn't fit in 56 bits\""}],"id":5327,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"31199:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5332,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31199:70:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5333,"nodeType":"ExpressionStatement","src":"31199:70:20"}]},"documentation":{"id":5313,"nodeType":"StructuredDocumentation","src":"30732:345:20","text":" @dev Returns the downcasted int56 from int256, reverting on\n overflow (when the input is less than smallest int56 or\n greater than largest int56).\n Counterpart to Solidity's `int56` operator.\n Requirements:\n - input must fit into 56 bits\n _Available since v4.7._"},"id":5335,"implemented":true,"kind":"function","modifiers":[],"name":"toInt56","nameLocation":"31091:7:20","nodeType":"FunctionDefinition","parameters":{"id":5316,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5315,"mutability":"mutable","name":"value","nameLocation":"31106:5:20","nodeType":"VariableDeclaration","scope":5335,"src":"31099:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5314,"name":"int256","nodeType":"ElementaryTypeName","src":"31099:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31098:14:20"},"returnParameters":{"id":5319,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5318,"mutability":"mutable","name":"downcasted","nameLocation":"31142:10:20","nodeType":"VariableDeclaration","scope":5335,"src":"31136:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"},"typeName":{"id":5317,"name":"int56","nodeType":"ElementaryTypeName","src":"31136:5:20","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"visibility":"internal"}],"src":"31135:18:20"},"scope":5502,"src":"31082:194:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5357,"nodeType":"Block","src":"31704:122:20","statements":[{"expression":{"id":5348,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5343,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5341,"src":"31714:10:20","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5346,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5338,"src":"31733:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5345,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31727:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int48_$","typeString":"type(int48)"},"typeName":{"id":5344,"name":"int48","nodeType":"ElementaryTypeName","src":"31727:5:20","typeDescriptions":{}}},"id":5347,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31727:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"src":"31714:25:20","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"id":5349,"nodeType":"ExpressionStatement","src":"31714:25:20"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5351,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5341,"src":"31757:10:20","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5352,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5338,"src":"31771:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31757:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2034382062697473","id":5354,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"31778:40:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_599034f9324dd4e988c6cea5a00a30f53147fec1b01559682f18cd840028f495","typeString":"literal_string \"SafeCast: value doesn't fit in 48 bits\""},"value":"SafeCast: value doesn't fit in 48 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_599034f9324dd4e988c6cea5a00a30f53147fec1b01559682f18cd840028f495","typeString":"literal_string \"SafeCast: value doesn't fit in 48 bits\""}],"id":5350,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"31749:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5355,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31749:70:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5356,"nodeType":"ExpressionStatement","src":"31749:70:20"}]},"documentation":{"id":5336,"nodeType":"StructuredDocumentation","src":"31282:345:20","text":" @dev Returns the downcasted int48 from int256, reverting on\n overflow (when the input is less than smallest int48 or\n greater than largest int48).\n Counterpart to Solidity's `int48` operator.\n Requirements:\n - input must fit into 48 bits\n _Available since v4.7._"},"id":5358,"implemented":true,"kind":"function","modifiers":[],"name":"toInt48","nameLocation":"31641:7:20","nodeType":"FunctionDefinition","parameters":{"id":5339,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5338,"mutability":"mutable","name":"value","nameLocation":"31656:5:20","nodeType":"VariableDeclaration","scope":5358,"src":"31649:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5337,"name":"int256","nodeType":"ElementaryTypeName","src":"31649:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31648:14:20"},"returnParameters":{"id":5342,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5341,"mutability":"mutable","name":"downcasted","nameLocation":"31692:10:20","nodeType":"VariableDeclaration","scope":5358,"src":"31686:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"},"typeName":{"id":5340,"name":"int48","nodeType":"ElementaryTypeName","src":"31686:5:20","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"visibility":"internal"}],"src":"31685:18:20"},"scope":5502,"src":"31632:194:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5380,"nodeType":"Block","src":"32254:122:20","statements":[{"expression":{"id":5371,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5366,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5364,"src":"32264:10:20","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5369,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5361,"src":"32283:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5368,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32277:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int40_$","typeString":"type(int40)"},"typeName":{"id":5367,"name":"int40","nodeType":"ElementaryTypeName","src":"32277:5:20","typeDescriptions":{}}},"id":5370,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32277:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"src":"32264:25:20","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"id":5372,"nodeType":"ExpressionStatement","src":"32264:25:20"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5376,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5374,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5364,"src":"32307:10:20","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5375,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5361,"src":"32321:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"32307:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2034302062697473","id":5377,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"32328:40:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_b23559c58b98a5d3ed7016699c7171ac8defa5a1d180f9a9ffa60468a5701d37","typeString":"literal_string \"SafeCast: value doesn't fit in 40 bits\""},"value":"SafeCast: value doesn't fit in 40 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b23559c58b98a5d3ed7016699c7171ac8defa5a1d180f9a9ffa60468a5701d37","typeString":"literal_string \"SafeCast: value doesn't fit in 40 bits\""}],"id":5373,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"32299:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5378,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32299:70:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5379,"nodeType":"ExpressionStatement","src":"32299:70:20"}]},"documentation":{"id":5359,"nodeType":"StructuredDocumentation","src":"31832:345:20","text":" @dev Returns the downcasted int40 from int256, reverting on\n overflow (when the input is less than smallest int40 or\n greater than largest int40).\n Counterpart to Solidity's `int40` operator.\n Requirements:\n - input must fit into 40 bits\n _Available since v4.7._"},"id":5381,"implemented":true,"kind":"function","modifiers":[],"name":"toInt40","nameLocation":"32191:7:20","nodeType":"FunctionDefinition","parameters":{"id":5362,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5361,"mutability":"mutable","name":"value","nameLocation":"32206:5:20","nodeType":"VariableDeclaration","scope":5381,"src":"32199:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5360,"name":"int256","nodeType":"ElementaryTypeName","src":"32199:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32198:14:20"},"returnParameters":{"id":5365,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5364,"mutability":"mutable","name":"downcasted","nameLocation":"32242:10:20","nodeType":"VariableDeclaration","scope":5381,"src":"32236:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"},"typeName":{"id":5363,"name":"int40","nodeType":"ElementaryTypeName","src":"32236:5:20","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"visibility":"internal"}],"src":"32235:18:20"},"scope":5502,"src":"32182:194:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5403,"nodeType":"Block","src":"32804:122:20","statements":[{"expression":{"id":5394,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5389,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5387,"src":"32814:10:20","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5392,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5384,"src":"32833:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5391,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32827:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"},"typeName":{"id":5390,"name":"int32","nodeType":"ElementaryTypeName","src":"32827:5:20","typeDescriptions":{}}},"id":5393,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32827:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"src":"32814:25:20","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"id":5395,"nodeType":"ExpressionStatement","src":"32814:25:20"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5399,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5397,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5387,"src":"32857:10:20","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5398,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5384,"src":"32871:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"32857:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2033322062697473","id":5400,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"32878:40:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19","typeString":"literal_string \"SafeCast: value doesn't fit in 32 bits\""},"value":"SafeCast: value doesn't fit in 32 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19","typeString":"literal_string \"SafeCast: value doesn't fit in 32 bits\""}],"id":5396,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"32849:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5401,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32849:70:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5402,"nodeType":"ExpressionStatement","src":"32849:70:20"}]},"documentation":{"id":5382,"nodeType":"StructuredDocumentation","src":"32382:345:20","text":" @dev Returns the downcasted int32 from int256, reverting on\n overflow (when the input is less than smallest int32 or\n greater than largest int32).\n Counterpart to Solidity's `int32` operator.\n Requirements:\n - input must fit into 32 bits\n _Available since v3.1._"},"id":5404,"implemented":true,"kind":"function","modifiers":[],"name":"toInt32","nameLocation":"32741:7:20","nodeType":"FunctionDefinition","parameters":{"id":5385,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5384,"mutability":"mutable","name":"value","nameLocation":"32756:5:20","nodeType":"VariableDeclaration","scope":5404,"src":"32749:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5383,"name":"int256","nodeType":"ElementaryTypeName","src":"32749:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32748:14:20"},"returnParameters":{"id":5388,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5387,"mutability":"mutable","name":"downcasted","nameLocation":"32792:10:20","nodeType":"VariableDeclaration","scope":5404,"src":"32786:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":5386,"name":"int32","nodeType":"ElementaryTypeName","src":"32786:5:20","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"visibility":"internal"}],"src":"32785:18:20"},"scope":5502,"src":"32732:194:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5426,"nodeType":"Block","src":"33354:122:20","statements":[{"expression":{"id":5417,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5412,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5410,"src":"33364:10:20","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5415,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5407,"src":"33383:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5414,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33377:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int24_$","typeString":"type(int24)"},"typeName":{"id":5413,"name":"int24","nodeType":"ElementaryTypeName","src":"33377:5:20","typeDescriptions":{}}},"id":5416,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33377:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"src":"33364:25:20","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"id":5418,"nodeType":"ExpressionStatement","src":"33364:25:20"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5422,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5420,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5410,"src":"33407:10:20","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5421,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5407,"src":"33421:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33407:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2032342062697473","id":5423,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"33428:40:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_f68b65aaf4574c34e9b9d1442d19636c6608b8c4dbd9331c7245f7915c8b2f55","typeString":"literal_string \"SafeCast: value doesn't fit in 24 bits\""},"value":"SafeCast: value doesn't fit in 24 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f68b65aaf4574c34e9b9d1442d19636c6608b8c4dbd9331c7245f7915c8b2f55","typeString":"literal_string \"SafeCast: value doesn't fit in 24 bits\""}],"id":5419,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"33399:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5424,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33399:70:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5425,"nodeType":"ExpressionStatement","src":"33399:70:20"}]},"documentation":{"id":5405,"nodeType":"StructuredDocumentation","src":"32932:345:20","text":" @dev Returns the downcasted int24 from int256, reverting on\n overflow (when the input is less than smallest int24 or\n greater than largest int24).\n Counterpart to Solidity's `int24` operator.\n Requirements:\n - input must fit into 24 bits\n _Available since v4.7._"},"id":5427,"implemented":true,"kind":"function","modifiers":[],"name":"toInt24","nameLocation":"33291:7:20","nodeType":"FunctionDefinition","parameters":{"id":5408,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5407,"mutability":"mutable","name":"value","nameLocation":"33306:5:20","nodeType":"VariableDeclaration","scope":5427,"src":"33299:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5406,"name":"int256","nodeType":"ElementaryTypeName","src":"33299:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"33298:14:20"},"returnParameters":{"id":5411,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5410,"mutability":"mutable","name":"downcasted","nameLocation":"33342:10:20","nodeType":"VariableDeclaration","scope":5427,"src":"33336:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":5409,"name":"int24","nodeType":"ElementaryTypeName","src":"33336:5:20","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"33335:18:20"},"scope":5502,"src":"33282:194:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5449,"nodeType":"Block","src":"33904:122:20","statements":[{"expression":{"id":5440,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5435,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5433,"src":"33914:10:20","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5438,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5430,"src":"33933:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5437,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33927:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int16_$","typeString":"type(int16)"},"typeName":{"id":5436,"name":"int16","nodeType":"ElementaryTypeName","src":"33927:5:20","typeDescriptions":{}}},"id":5439,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33927:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"src":"33914:25:20","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"id":5441,"nodeType":"ExpressionStatement","src":"33914:25:20"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5445,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5443,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5433,"src":"33957:10:20","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5444,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5430,"src":"33971:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33957:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2031362062697473","id":5446,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"33978:40:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_13d3a66f9e0e5c92bbe7743bcd3bdb4695009d5f3a96e5ff49718d715b484033","typeString":"literal_string \"SafeCast: value doesn't fit in 16 bits\""},"value":"SafeCast: value doesn't fit in 16 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_13d3a66f9e0e5c92bbe7743bcd3bdb4695009d5f3a96e5ff49718d715b484033","typeString":"literal_string \"SafeCast: value doesn't fit in 16 bits\""}],"id":5442,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"33949:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5447,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33949:70:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5448,"nodeType":"ExpressionStatement","src":"33949:70:20"}]},"documentation":{"id":5428,"nodeType":"StructuredDocumentation","src":"33482:345:20","text":" @dev Returns the downcasted int16 from int256, reverting on\n overflow (when the input is less than smallest int16 or\n greater than largest int16).\n Counterpart to Solidity's `int16` operator.\n Requirements:\n - input must fit into 16 bits\n _Available since v3.1._"},"id":5450,"implemented":true,"kind":"function","modifiers":[],"name":"toInt16","nameLocation":"33841:7:20","nodeType":"FunctionDefinition","parameters":{"id":5431,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5430,"mutability":"mutable","name":"value","nameLocation":"33856:5:20","nodeType":"VariableDeclaration","scope":5450,"src":"33849:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5429,"name":"int256","nodeType":"ElementaryTypeName","src":"33849:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"33848:14:20"},"returnParameters":{"id":5434,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5433,"mutability":"mutable","name":"downcasted","nameLocation":"33892:10:20","nodeType":"VariableDeclaration","scope":5450,"src":"33886:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"},"typeName":{"id":5432,"name":"int16","nodeType":"ElementaryTypeName","src":"33886:5:20","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"visibility":"internal"}],"src":"33885:18:20"},"scope":5502,"src":"33832:194:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5472,"nodeType":"Block","src":"34447:120:20","statements":[{"expression":{"id":5463,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5458,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5456,"src":"34457:10:20","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5461,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5453,"src":"34475:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5460,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34470:4:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int8_$","typeString":"type(int8)"},"typeName":{"id":5459,"name":"int8","nodeType":"ElementaryTypeName","src":"34470:4:20","typeDescriptions":{}}},"id":5462,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34470:11:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"src":"34457:24:20","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"id":5464,"nodeType":"ExpressionStatement","src":"34457:24:20"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5468,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5466,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5456,"src":"34499:10:20","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5467,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5453,"src":"34513:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"34499:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e20382062697473","id":5469,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"34520:39:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_2610961ba53259047cd57c60366c5ad0b8aabf5eb4132487619b736715a740d1","typeString":"literal_string \"SafeCast: value doesn't fit in 8 bits\""},"value":"SafeCast: value doesn't fit in 8 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2610961ba53259047cd57c60366c5ad0b8aabf5eb4132487619b736715a740d1","typeString":"literal_string \"SafeCast: value doesn't fit in 8 bits\""}],"id":5465,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"34491:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5470,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34491:69:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5471,"nodeType":"ExpressionStatement","src":"34491:69:20"}]},"documentation":{"id":5451,"nodeType":"StructuredDocumentation","src":"34032:340:20","text":" @dev Returns the downcasted int8 from int256, reverting on\n overflow (when the input is less than smallest int8 or\n greater than largest int8).\n Counterpart to Solidity's `int8` operator.\n Requirements:\n - input must fit into 8 bits\n _Available since v3.1._"},"id":5473,"implemented":true,"kind":"function","modifiers":[],"name":"toInt8","nameLocation":"34386:6:20","nodeType":"FunctionDefinition","parameters":{"id":5454,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5453,"mutability":"mutable","name":"value","nameLocation":"34400:5:20","nodeType":"VariableDeclaration","scope":5473,"src":"34393:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5452,"name":"int256","nodeType":"ElementaryTypeName","src":"34393:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34392:14:20"},"returnParameters":{"id":5457,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5456,"mutability":"mutable","name":"downcasted","nameLocation":"34435:10:20","nodeType":"VariableDeclaration","scope":5473,"src":"34430:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"},"typeName":{"id":5455,"name":"int8","nodeType":"ElementaryTypeName","src":"34430:4:20","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"visibility":"internal"}],"src":"34429:17:20"},"scope":5502,"src":"34377:190:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5500,"nodeType":"Block","src":"34845:233:20","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5491,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5482,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5476,"src":"34962:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"arguments":[{"expression":{"arguments":[{"id":5487,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34984:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":5486,"name":"int256","nodeType":"ElementaryTypeName","src":"34984:6:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":5485,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"34979:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5488,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34979:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":5489,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"34992:3:20","memberName":"max","nodeType":"MemberAccess","src":"34979:16:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5484,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34971:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5483,"name":"uint256","nodeType":"ElementaryTypeName","src":"34971:7:20","typeDescriptions":{}}},"id":5490,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34971:25:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"34962:34:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e20616e20696e74323536","id":5492,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"34998:42:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_d70dcf21692b3c91b4c5fbb89ed57f464aa42efbe5b0ea96c4acb7c080144227","typeString":"literal_string \"SafeCast: value doesn't fit in an int256\""},"value":"SafeCast: value doesn't fit in an int256"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d70dcf21692b3c91b4c5fbb89ed57f464aa42efbe5b0ea96c4acb7c080144227","typeString":"literal_string \"SafeCast: value doesn't fit in an int256\""}],"id":5481,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"34954:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5493,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34954:87:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5494,"nodeType":"ExpressionStatement","src":"34954:87:20"},{"expression":{"arguments":[{"id":5497,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5476,"src":"35065:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5496,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"35058:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":5495,"name":"int256","nodeType":"ElementaryTypeName","src":"35058:6:20","typeDescriptions":{}}},"id":5498,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"35058:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":5480,"id":5499,"nodeType":"Return","src":"35051:20:20"}]},"documentation":{"id":5474,"nodeType":"StructuredDocumentation","src":"34573:203:20","text":" @dev Converts an unsigned uint256 into a signed int256.\n Requirements:\n - input must be less than or equal to maxInt256.\n _Available since v3.0._"},"id":5501,"implemented":true,"kind":"function","modifiers":[],"name":"toInt256","nameLocation":"34790:8:20","nodeType":"FunctionDefinition","parameters":{"id":5477,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5476,"mutability":"mutable","name":"value","nameLocation":"34807:5:20","nodeType":"VariableDeclaration","scope":5501,"src":"34799:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5475,"name":"uint256","nodeType":"ElementaryTypeName","src":"34799:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34798:15:20"},"returnParameters":{"id":5480,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5479,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5501,"src":"34837:6:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5478,"name":"int256","nodeType":"ElementaryTypeName","src":"34837:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34836:8:20"},"scope":5502,"src":"34781:297:20","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":5503,"src":"927:34153:20","usedErrors":[]}],"src":"192:34889:20"},"id":20},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","exportedSymbols":{"SignedMath":[5607]},"id":5608,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":5504,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"109:23:21"},{"abstract":false,"baseContracts":[],"canonicalName":"SignedMath","contractDependencies":[],"contractKind":"library","documentation":{"id":5505,"nodeType":"StructuredDocumentation","src":"134:80:21","text":" @dev Standard signed math utilities missing in the Solidity language."},"fullyImplemented":true,"id":5607,"linearizedBaseContracts":[5607],"name":"SignedMath","nameLocation":"223:10:21","nodeType":"ContractDefinition","nodes":[{"body":{"id":5522,"nodeType":"Block","src":"375:37:21","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5517,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5515,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5508,"src":"392:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":5516,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5510,"src":"396:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"392:5:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":5519,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5510,"src":"404:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":5520,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"392:13:21","trueExpression":{"id":5518,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5508,"src":"400:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":5514,"id":5521,"nodeType":"Return","src":"385:20:21"}]},"documentation":{"id":5506,"nodeType":"StructuredDocumentation","src":"240:66:21","text":" @dev Returns the largest of two signed numbers."},"id":5523,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"320:3:21","nodeType":"FunctionDefinition","parameters":{"id":5511,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5508,"mutability":"mutable","name":"a","nameLocation":"331:1:21","nodeType":"VariableDeclaration","scope":5523,"src":"324:8:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5507,"name":"int256","nodeType":"ElementaryTypeName","src":"324:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":5510,"mutability":"mutable","name":"b","nameLocation":"341:1:21","nodeType":"VariableDeclaration","scope":5523,"src":"334:8:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5509,"name":"int256","nodeType":"ElementaryTypeName","src":"334:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"323:20:21"},"returnParameters":{"id":5514,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5513,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5523,"src":"367:6:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5512,"name":"int256","nodeType":"ElementaryTypeName","src":"367:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"366:8:21"},"scope":5607,"src":"311:101:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5540,"nodeType":"Block","src":"554:37:21","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5535,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5533,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5526,"src":"571:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5534,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5528,"src":"575:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"571:5:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":5537,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5528,"src":"583:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":5538,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"571:13:21","trueExpression":{"id":5536,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5526,"src":"579:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":5532,"id":5539,"nodeType":"Return","src":"564:20:21"}]},"documentation":{"id":5524,"nodeType":"StructuredDocumentation","src":"418:67:21","text":" @dev Returns the smallest of two signed numbers."},"id":5541,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"499:3:21","nodeType":"FunctionDefinition","parameters":{"id":5529,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5526,"mutability":"mutable","name":"a","nameLocation":"510:1:21","nodeType":"VariableDeclaration","scope":5541,"src":"503:8:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5525,"name":"int256","nodeType":"ElementaryTypeName","src":"503:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":5528,"mutability":"mutable","name":"b","nameLocation":"520:1:21","nodeType":"VariableDeclaration","scope":5541,"src":"513:8:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5527,"name":"int256","nodeType":"ElementaryTypeName","src":"513:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"502:20:21"},"returnParameters":{"id":5532,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5531,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5541,"src":"546:6:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5530,"name":"int256","nodeType":"ElementaryTypeName","src":"546:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"545:8:21"},"scope":5607,"src":"490:101:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5584,"nodeType":"Block","src":"796:162:21","statements":[{"assignments":[5552],"declarations":[{"constant":false,"id":5552,"mutability":"mutable","name":"x","nameLocation":"865:1:21","nodeType":"VariableDeclaration","scope":5584,"src":"858:8:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5551,"name":"int256","nodeType":"ElementaryTypeName","src":"858:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":5565,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5564,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5555,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5553,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5544,"src":"870:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":5554,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5546,"src":"874:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"870:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":5556,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"869:7:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5562,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5559,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5557,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5544,"src":"881:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":5558,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5546,"src":"885:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"881:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":5560,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"880:7:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5561,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"891:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"880:12:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":5563,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"879:14:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"869:24:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"858:35:21"},{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5582,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5566,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5552,"src":"910:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5580,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5574,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5571,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5552,"src":"930:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5570,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"922:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5569,"name":"uint256","nodeType":"ElementaryTypeName","src":"922:7:21","typeDescriptions":{}}},"id":5572,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"922:10:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":5573,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"936:3:21","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"922:17:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5568,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"915:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":5567,"name":"int256","nodeType":"ElementaryTypeName","src":"915:6:21","typeDescriptions":{}}},"id":5575,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"915:25:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5578,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5576,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5544,"src":"944:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":5577,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5546,"src":"948:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"944:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":5579,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"943:7:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"915:35:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":5581,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"914:37:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"910:41:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":5550,"id":5583,"nodeType":"Return","src":"903:48:21"}]},"documentation":{"id":5542,"nodeType":"StructuredDocumentation","src":"597:126:21","text":" @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."},"id":5585,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"737:7:21","nodeType":"FunctionDefinition","parameters":{"id":5547,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5544,"mutability":"mutable","name":"a","nameLocation":"752:1:21","nodeType":"VariableDeclaration","scope":5585,"src":"745:8:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5543,"name":"int256","nodeType":"ElementaryTypeName","src":"745:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":5546,"mutability":"mutable","name":"b","nameLocation":"762:1:21","nodeType":"VariableDeclaration","scope":5585,"src":"755:8:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5545,"name":"int256","nodeType":"ElementaryTypeName","src":"755:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"744:20:21"},"returnParameters":{"id":5550,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5549,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5585,"src":"788:6:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5548,"name":"int256","nodeType":"ElementaryTypeName","src":"788:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"787:8:21"},"scope":5607,"src":"728:230:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5605,"nodeType":"Block","src":"1102:158:21","statements":[{"id":5604,"nodeType":"UncheckedBlock","src":"1112:142:21","statements":[{"expression":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5597,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5595,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5588,"src":"1227:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"30","id":5596,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1232:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1227:6:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":5600,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"1240:2:21","subExpression":{"id":5599,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5588,"src":"1241:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":5601,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1227:15:21","trueExpression":{"id":5598,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5588,"src":"1236:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5594,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1219:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5593,"name":"uint256","nodeType":"ElementaryTypeName","src":"1219:7:21","typeDescriptions":{}}},"id":5602,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1219:24:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5592,"id":5603,"nodeType":"Return","src":"1212:31:21"}]}]},"documentation":{"id":5586,"nodeType":"StructuredDocumentation","src":"964:78:21","text":" @dev Returns the absolute unsigned value of a signed value."},"id":5606,"implemented":true,"kind":"function","modifiers":[],"name":"abs","nameLocation":"1056:3:21","nodeType":"FunctionDefinition","parameters":{"id":5589,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5588,"mutability":"mutable","name":"n","nameLocation":"1067:1:21","nodeType":"VariableDeclaration","scope":5606,"src":"1060:8:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5587,"name":"int256","nodeType":"ElementaryTypeName","src":"1060:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1059:10:21"},"returnParameters":{"id":5592,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5591,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5606,"src":"1093:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5590,"name":"uint256","nodeType":"ElementaryTypeName","src":"1093:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1092:9:21"},"scope":5607,"src":"1047:213:21","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":5608,"src":"215:1047:21","usedErrors":[]}],"src":"109:1154:21"},"id":21},"contracts/Token.sol":{"ast":{"absolutePath":"contracts/Token.sol","exportedSymbols":{"Context":[1896],"Counters":[1970],"ECDSA":[2891],"EIP712":[3095],"ERC20":[826],"ERC20Permit":[1076],"ERC20Votes":[1810],"IERC20":[904],"IERC20Metadata":[1835],"IERC20Permit":[1871],"IERC5267":[215],"IERC5805":[224],"IERC6372":[239],"IVotes":[190],"Math":[3961],"Ownable":[112],"SafeCast":[5502],"ShortString":[1975],"ShortStrings":[2186],"SignedMath":[5607],"StorageSlot":[2296],"Strings":[2525],"Token":[5700]},"id":5701,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":5609,"literals":["solidity",">=","0.8",".19"],"nodeType":"PragmaDirective","src":"32:25:22"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"@openzeppelin/contracts/token/ERC20/ERC20.sol","id":5610,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5701,"sourceUnit":827,"src":"128:55:22","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/draft-ERC20Permit.sol","file":"@openzeppelin/contracts/token/ERC20/extensions/draft-ERC20Permit.sol","id":5611,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5701,"sourceUnit":1875,"src":"185:78:22","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol","file":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol","id":5612,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5701,"sourceUnit":1811,"src":"265:71:22","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":5613,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5701,"sourceUnit":113,"src":"338:52:22","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":5614,"name":"ERC20","nameLocations":["414:5:22"],"nodeType":"IdentifierPath","referencedDeclaration":826,"src":"414:5:22"},"id":5615,"nodeType":"InheritanceSpecifier","src":"414:5:22"},{"baseName":{"id":5616,"name":"ERC20Permit","nameLocations":["421:11:22"],"nodeType":"IdentifierPath","referencedDeclaration":1076,"src":"421:11:22"},"id":5617,"nodeType":"InheritanceSpecifier","src":"421:11:22"},{"baseName":{"id":5618,"name":"ERC20Votes","nameLocations":["434:10:22"],"nodeType":"IdentifierPath","referencedDeclaration":1810,"src":"434:10:22"},"id":5619,"nodeType":"InheritanceSpecifier","src":"434:10:22"},{"baseName":{"id":5620,"name":"Ownable","nameLocations":["446:7:22"],"nodeType":"IdentifierPath","referencedDeclaration":112,"src":"446:7:22"},"id":5621,"nodeType":"InheritanceSpecifier","src":"446:7:22"}],"canonicalName":"Token","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":5700,"linearizedBaseContracts":[5700,112,1810,224,190,239,1076,3095,215,1871,826,1835,904,1896],"name":"Token","nameLocation":"405:5:22","nodeType":"ContractDefinition","nodes":[{"body":{"id":5641,"nodeType":"Block","src":"551:53:22","statements":[{"expression":{"arguments":[{"expression":{"id":5632,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"568:3:22","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5633,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"572:6:22","memberName":"sender","nodeType":"MemberAccess","src":"568:10:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000_by_1","typeString":"int_const 10000000000000000000000000"},"id":5638,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130303030303030","id":5634,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"580:8:22","typeDescriptions":{"typeIdentifier":"t_rational_10000000_by_1","typeString":"int_const 10000000"},"value":"10000000"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"commonType":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"id":5637,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5635,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"589:2:22","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3138","id":5636,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"593:2:22","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"src":"589:6:22","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"}},"src":"580:15:22","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000_by_1","typeString":"int_const 10000000000000000000000000"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_10000000000000000000000000_by_1","typeString":"int_const 10000000000000000000000000"}],"id":5631,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[5681],"referencedDeclaration":5681,"src":"562:5:22","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":5639,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"562:34:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5640,"nodeType":"ExpressionStatement","src":"562:34:22"}]},"id":5642,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"hexValue":"476f72696c6c6120546f6b656e73","id":5624,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"481:16:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_2114e3ffdf4113c66e206f813b019d1ce389d510a89b087f8889ee0e774ebba0","typeString":"literal_string \"Gorilla Tokens\""},"value":"Gorilla Tokens"},{"hexValue":"474f52494c4c415a","id":5625,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"499:10:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_0a6ff7faeff61e1b171be669a96cea54cf3fdfac9b57a76e52c31a2898f00916","typeString":"literal_string \"GORILLAZ\""},"value":"GORILLAZ"}],"id":5626,"kind":"baseConstructorSpecifier","modifierName":{"id":5623,"name":"ERC20","nameLocations":["475:5:22"],"nodeType":"IdentifierPath","referencedDeclaration":826,"src":"475:5:22"},"nodeType":"ModifierInvocation","src":"475:35:22"},{"arguments":[{"hexValue":"476f72696c6c6120476f7665726e616e636520546f6b656e","id":5628,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"523:26:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_f1038d30f63fdd0e0f3369603146343c49d733ab4a8f871ea520ebe3dd734a7a","typeString":"literal_string \"Gorilla Governance Token\""},"value":"Gorilla Governance Token"}],"id":5629,"kind":"baseConstructorSpecifier","modifierName":{"id":5627,"name":"ERC20Permit","nameLocations":["511:11:22"],"nodeType":"IdentifierPath","referencedDeclaration":1076,"src":"511:11:22"},"nodeType":"ModifierInvocation","src":"511:39:22"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":5622,"nodeType":"ParameterList","parameters":[],"src":"472:2:22"},"returnParameters":{"id":5630,"nodeType":"ParameterList","parameters":[],"src":"551:0:22"},"scope":5700,"src":"461:143:22","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[825,1555],"body":{"id":5662,"nodeType":"Block","src":"838:62:22","statements":[{"expression":{"arguments":[{"id":5657,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5644,"src":"875:4:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5658,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5646,"src":"881:2:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5659,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5648,"src":"885:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5654,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"849:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_Token_$5700_$","typeString":"type(contract super Token)"}},"id":5656,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"855:19:22","memberName":"_afterTokenTransfer","nodeType":"MemberAccess","referencedDeclaration":1555,"src":"849:25:22","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":5660,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"849:43:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5661,"nodeType":"ExpressionStatement","src":"849:43:22"}]},"id":5663,"implemented":true,"kind":"function","modifiers":[],"name":"_afterTokenTransfer","nameLocation":"716:19:22","nodeType":"FunctionDefinition","overrides":{"id":5652,"nodeType":"OverrideSpecifier","overrides":[{"id":5650,"name":"ERC20","nameLocations":["814:5:22"],"nodeType":"IdentifierPath","referencedDeclaration":826,"src":"814:5:22"},{"id":5651,"name":"ERC20Votes","nameLocations":["821:10:22"],"nodeType":"IdentifierPath","referencedDeclaration":1810,"src":"821:10:22"}],"src":"805:27:22"},"parameters":{"id":5649,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5644,"mutability":"mutable","name":"from","nameLocation":"744:4:22","nodeType":"VariableDeclaration","scope":5663,"src":"736:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5643,"name":"address","nodeType":"ElementaryTypeName","src":"736:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5646,"mutability":"mutable","name":"to","nameLocation":"758:2:22","nodeType":"VariableDeclaration","scope":5663,"src":"750:10:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5645,"name":"address","nodeType":"ElementaryTypeName","src":"750:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5648,"mutability":"mutable","name":"amount","nameLocation":"770:6:22","nodeType":"VariableDeclaration","scope":5663,"src":"762:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5647,"name":"uint256","nodeType":"ElementaryTypeName","src":"762:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"735:42:22"},"returnParameters":{"id":5653,"nodeType":"ParameterList","parameters":[],"src":"838:0:22"},"scope":5700,"src":"707:193:22","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[643,1502],"body":{"id":5680,"nodeType":"Block","src":"1024:42:22","statements":[{"expression":{"arguments":[{"id":5676,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5665,"src":"1047:2:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5677,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5667,"src":"1051:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5673,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1035:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_Token_$5700_$","typeString":"type(contract super Token)"}},"id":5675,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1041:5:22","memberName":"_mint","nodeType":"MemberAccess","referencedDeclaration":1502,"src":"1035:11:22","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":5678,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1035:23:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5679,"nodeType":"ExpressionStatement","src":"1035:23:22"}]},"id":5681,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"930:5:22","nodeType":"FunctionDefinition","overrides":{"id":5671,"nodeType":"OverrideSpecifier","overrides":[{"id":5669,"name":"ERC20","nameLocations":["1000:5:22"],"nodeType":"IdentifierPath","referencedDeclaration":826,"src":"1000:5:22"},{"id":5670,"name":"ERC20Votes","nameLocations":["1007:10:22"],"nodeType":"IdentifierPath","referencedDeclaration":1810,"src":"1007:10:22"}],"src":"991:27:22"},"parameters":{"id":5668,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5665,"mutability":"mutable","name":"to","nameLocation":"944:2:22","nodeType":"VariableDeclaration","scope":5681,"src":"936:10:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5664,"name":"address","nodeType":"ElementaryTypeName","src":"936:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5667,"mutability":"mutable","name":"amount","nameLocation":"956:6:22","nodeType":"VariableDeclaration","scope":5681,"src":"948:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5666,"name":"uint256","nodeType":"ElementaryTypeName","src":"948:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"935:28:22"},"returnParameters":{"id":5672,"nodeType":"ParameterList","parameters":[],"src":"1024:0:22"},"scope":5700,"src":"921:145:22","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[715,1525],"body":{"id":5698,"nodeType":"Block","src":"1195:47:22","statements":[{"expression":{"arguments":[{"id":5694,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5683,"src":"1218:7:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5695,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5685,"src":"1227:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5691,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1206:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_Token_$5700_$","typeString":"type(contract super Token)"}},"id":5693,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1212:5:22","memberName":"_burn","nodeType":"MemberAccess","referencedDeclaration":1525,"src":"1206:11:22","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":5696,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1206:28:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5697,"nodeType":"ExpressionStatement","src":"1206:28:22"}]},"id":5699,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"1096:5:22","nodeType":"FunctionDefinition","overrides":{"id":5689,"nodeType":"OverrideSpecifier","overrides":[{"id":5687,"name":"ERC20","nameLocations":["1171:5:22"],"nodeType":"IdentifierPath","referencedDeclaration":826,"src":"1171:5:22"},{"id":5688,"name":"ERC20Votes","nameLocations":["1178:10:22"],"nodeType":"IdentifierPath","referencedDeclaration":1810,"src":"1178:10:22"}],"src":"1162:27:22"},"parameters":{"id":5686,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5683,"mutability":"mutable","name":"account","nameLocation":"1110:7:22","nodeType":"VariableDeclaration","scope":5699,"src":"1102:15:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5682,"name":"address","nodeType":"ElementaryTypeName","src":"1102:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5685,"mutability":"mutable","name":"amount","nameLocation":"1127:6:22","nodeType":"VariableDeclaration","scope":5699,"src":"1119:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5684,"name":"uint256","nodeType":"ElementaryTypeName","src":"1119:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1101:33:22"},"returnParameters":{"id":5690,"nodeType":"ParameterList","parameters":[],"src":"1195:0:22"},"scope":5700,"src":"1087:155:22","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":5701,"src":"396:853:22","usedErrors":[1983,1985]}],"src":"32:1217:22"},"id":22}},"contracts":{"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}"}},"@openzeppelin/contracts/governance/utils/IVotes.sol":{"IVotes":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegator","type":"address"},{"indexed":true,"internalType":"address","name":"fromDelegate","type":"address"},{"indexed":true,"internalType":"address","name":"toDelegate","type":"address"}],"name":"DelegateChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegate","type":"address"},{"indexed":false,"internalType":"uint256","name":"previousBalance","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newBalance","type":"uint256"}],"name":"DelegateVotesChanged","type":"event"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"}],"name":"delegate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"uint256","name":"expiry","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"delegateBySig","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"delegates","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"timepoint","type":"uint256"}],"name":"getPastTotalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"timepoint","type":"uint256"}],"name":"getPastVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"getVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"delegate(address)":"5c19a95c","delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)":"c3cda520","delegates(address)":"587cde1e","getPastTotalSupply(uint256)":"8e539e8c","getPastVotes(address,uint256)":"3a46b1a8","getVotes(address)":"9ab24eb0"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fromDelegate\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"toDelegate\",\"type\":\"address\"}],\"name\":\"DelegateChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"previousBalance\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newBalance\",\"type\":\"uint256\"}],\"name\":\"DelegateVotesChanged\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"}],\"name\":\"delegate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"delegateBySig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"delegates\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"timepoint\",\"type\":\"uint256\"}],\"name\":\"getPastTotalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timepoint\",\"type\":\"uint256\"}],\"name\":\"getPastVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Common interface for {ERC20Votes}, {ERC721Votes}, and other {Votes}-enabled contracts. _Available since v4.5._\",\"events\":{\"DelegateChanged(address,address,address)\":{\"details\":\"Emitted when an account changes their delegate.\"},\"DelegateVotesChanged(address,uint256,uint256)\":{\"details\":\"Emitted when a token transfer or delegate change results in changes to a delegate's number of votes.\"}},\"kind\":\"dev\",\"methods\":{\"delegate(address)\":{\"details\":\"Delegates votes from the sender to `delegatee`.\"},\"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Delegates votes from signer to `delegatee`.\"},\"delegates(address)\":{\"details\":\"Returns the delegate that `account` has chosen.\"},\"getPastTotalSupply(uint256)\":{\"details\":\"Returns the total supply of votes available at a specific moment in the past. If the `clock()` is configured to use block numbers, this will return the value at the end of the corresponding block. NOTE: This value is the sum of all available votes, which is not necessarily the sum of all delegated votes. Votes that have not been delegated are still part of total supply, even though they would not participate in a vote.\"},\"getPastVotes(address,uint256)\":{\"details\":\"Returns the amount of votes that `account` had at a specific moment in the past. If the `clock()` is configured to use block numbers, this will return the value at the end of the corresponding block.\"},\"getVotes(address)\":{\"details\":\"Returns the current amount of votes that `account` has.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/governance/utils/IVotes.sol\":\"IVotes\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/governance/utils/IVotes.sol\":{\"keccak256\":\"0x1618ddebe73377660f6da71afcba35d5ac4c4600918b3a381d9c6f37eba613eb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://666c8d7c62478b55e082f1835275b7acfc1595491998df6d67183ff2c70eab96\",\"dweb:/ipfs/QmVXmnXfxNaLhoX283dqyKJ8DJbF5thUd9sMuRoFpNMwr7\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/IERC5267.sol":{"IERC5267":{"abi":[{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"eip712Domain()":"84b0196e"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"}},\"kind\":\"dev\",\"methods\":{\"eip712Domain()\":{\"details\":\"returns the fields and values that describe the domain separator used by this contract for EIP-712 signature.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":\"IERC5267\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0xac6c2efc64baccbde4904ae18ed45139c9aa8cff96d6888344d1e4d2eb8b659f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e416a280c610b6b7a5f158e4a41aacfaec01ef14d5d1de13b46be9e090265fc\",\"dweb:/ipfs/QmYZP2KrdyccBbhLZT42auhvBTMkwiwUS3V6HWb42rbwbG\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/IERC5805.sol":{"IERC5805":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegator","type":"address"},{"indexed":true,"internalType":"address","name":"fromDelegate","type":"address"},{"indexed":true,"internalType":"address","name":"toDelegate","type":"address"}],"name":"DelegateChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegate","type":"address"},{"indexed":false,"internalType":"uint256","name":"previousBalance","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newBalance","type":"uint256"}],"name":"DelegateVotesChanged","type":"event"},{"inputs":[],"name":"CLOCK_MODE","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"clock","outputs":[{"internalType":"uint48","name":"","type":"uint48"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"}],"name":"delegate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"uint256","name":"expiry","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"delegateBySig","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"delegates","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"timepoint","type":"uint256"}],"name":"getPastTotalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"timepoint","type":"uint256"}],"name":"getPastVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"getVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"CLOCK_MODE()":"4bf5d7e9","clock()":"91ddadf4","delegate(address)":"5c19a95c","delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)":"c3cda520","delegates(address)":"587cde1e","getPastTotalSupply(uint256)":"8e539e8c","getPastVotes(address,uint256)":"3a46b1a8","getVotes(address)":"9ab24eb0"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fromDelegate\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"toDelegate\",\"type\":\"address\"}],\"name\":\"DelegateChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"previousBalance\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newBalance\",\"type\":\"uint256\"}],\"name\":\"DelegateVotesChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CLOCK_MODE\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"clock\",\"outputs\":[{\"internalType\":\"uint48\",\"name\":\"\",\"type\":\"uint48\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"}],\"name\":\"delegate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"delegateBySig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"delegates\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"timepoint\",\"type\":\"uint256\"}],\"name\":\"getPastTotalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timepoint\",\"type\":\"uint256\"}],\"name\":\"getPastVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"DelegateChanged(address,address,address)\":{\"details\":\"Emitted when an account changes their delegate.\"},\"DelegateVotesChanged(address,uint256,uint256)\":{\"details\":\"Emitted when a token transfer or delegate change results in changes to a delegate's number of votes.\"}},\"kind\":\"dev\",\"methods\":{\"CLOCK_MODE()\":{\"details\":\"Description of the clock\"},\"clock()\":{\"details\":\"Clock used for flagging checkpoints. Can be overridden to implement timestamp based checkpoints (and voting).\"},\"delegate(address)\":{\"details\":\"Delegates votes from the sender to `delegatee`.\"},\"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Delegates votes from signer to `delegatee`.\"},\"delegates(address)\":{\"details\":\"Returns the delegate that `account` has chosen.\"},\"getPastTotalSupply(uint256)\":{\"details\":\"Returns the total supply of votes available at a specific moment in the past. If the `clock()` is configured to use block numbers, this will return the value at the end of the corresponding block. NOTE: This value is the sum of all available votes, which is not necessarily the sum of all delegated votes. Votes that have not been delegated are still part of total supply, even though they would not participate in a vote.\"},\"getPastVotes(address,uint256)\":{\"details\":\"Returns the amount of votes that `account` had at a specific moment in the past. If the `clock()` is configured to use block numbers, this will return the value at the end of the corresponding block.\"},\"getVotes(address)\":{\"details\":\"Returns the current amount of votes that `account` has.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC5805.sol\":\"IERC5805\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/governance/utils/IVotes.sol\":{\"keccak256\":\"0x1618ddebe73377660f6da71afcba35d5ac4c4600918b3a381d9c6f37eba613eb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://666c8d7c62478b55e082f1835275b7acfc1595491998df6d67183ff2c70eab96\",\"dweb:/ipfs/QmVXmnXfxNaLhoX283dqyKJ8DJbF5thUd9sMuRoFpNMwr7\"]},\"@openzeppelin/contracts/interfaces/IERC5805.sol\":{\"keccak256\":\"0xfc12b717f6a2cd0d67adc8700097d4464d37f18ce933d4fc9c948ab6aec35e80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://82386e69ebe902a2edfd4f8a5ecbeaeb2e00f6cc6481a973729e974373fb492e\",\"dweb:/ipfs/QmSXg4wBMBd83mQvkekT1GsiRX2Qyv5gvrqzv5qJx2M7Kc\"]},\"@openzeppelin/contracts/interfaces/IERC6372.sol\":{\"keccak256\":\"0xcaea9aeda3816ba872358c828f4f01455c22ae48ced49c4c7d72bd74176c09b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://16ff22d8df5aee94510ee43d361b6147caef164941a684cedcb75be44f351fe6\",\"dweb:/ipfs/QmaCCwMdHVdPApuEJHLZapSJyA7mp5dAugpma3VUzWGd8E\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/IERC6372.sol":{"IERC6372":{"abi":[{"inputs":[],"name":"CLOCK_MODE","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"clock","outputs":[{"internalType":"uint48","name":"","type":"uint48"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"CLOCK_MODE()":"4bf5d7e9","clock()":"91ddadf4"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"CLOCK_MODE\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"clock\",\"outputs\":[{\"internalType\":\"uint48\",\"name\":\"\",\"type\":\"uint48\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"CLOCK_MODE()\":{\"details\":\"Description of the clock\"},\"clock()\":{\"details\":\"Clock used for flagging checkpoints. Can be overridden to implement timestamp based checkpoints (and voting).\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC6372.sol\":\"IERC6372\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC6372.sol\":{\"keccak256\":\"0xcaea9aeda3816ba872358c828f4f01455c22ae48ced49c4c7d72bd74176c09b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://16ff22d8df5aee94510ee43d361b6147caef164941a684cedcb75be44f351fe6\",\"dweb:/ipfs/QmaCCwMdHVdPApuEJHLZapSJyA7mp5dAugpma3VUzWGd8E\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ERC20":{"abi":[{"inputs":[{"internalType":"string","name":"name_","type":"string"},{"internalType":"string","name":"symbol_","type":"string"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_284":{"entryPoint":null,"id":284,"parameterSlots":2,"returnSlots":0},"abi_decode_available_length_t_string_memory_ptr_fromMemory":{"entryPoint":376,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_string_memory_ptr_fromMemory":{"entryPoint":451,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory":{"entryPoint":502,"id":null,"parameterSlots":2,"returnSlots":2},"allocate_memory":{"entryPoint":247,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":99,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_string_memory_ptr":{"entryPoint":278,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_string_storage":{"entryPoint":746,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":635,"id":null,"parameterSlots":1,"returnSlots":1},"clean_up_bytearray_end_slots_t_string_storage":{"entryPoint":1067,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_t_uint256":{"entryPoint":882,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_t_bytes1":{"entryPoint":1028,"id":null,"parameterSlots":2,"returnSlots":0},"convert_t_uint256_to_t_uint256":{"entryPoint":902,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":1222,"id":null,"parameterSlots":2,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":332,"id":null,"parameterSlots":3,"returnSlots":0},"divide_by_32_ceil":{"entryPoint":767,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":693,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":1192,"id":null,"parameterSlots":2,"returnSlots":1},"finalize_allocation":{"entryPoint":193,"id":null,"parameterSlots":2,"returnSlots":0},"identity":{"entryPoint":892,"id":null,"parameterSlots":1,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":1160,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x22":{"entryPoint":646,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":146,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_t_uint256":{"entryPoint":942,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":119,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":124,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":114,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":109,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":129,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":783,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":1147,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_t_uint256":{"entryPoint":1000,"id":null,"parameterSlots":2,"returnSlots":0},"update_byte_slice_dynamic32":{"entryPoint":796,"id":null,"parameterSlots":3,"returnSlots":1},"update_storage_value_t_uint256_to_t_uint256":{"entryPoint":952,"id":null,"parameterSlots":3,"returnSlots":0},"zero_value_for_split_t_uint256":{"entryPoint":995,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:8574:23","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:23","statements":[{"nodeType":"YulAssignment","src":"57:19:23","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:23","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:23"},"nodeType":"YulFunctionCall","src":"67:9:23"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:23"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:23","type":""}],"src":"7:75:23"},{"body":{"nodeType":"YulBlock","src":"177:28:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:23"},"nodeType":"YulFunctionCall","src":"187:12:23"},"nodeType":"YulExpressionStatement","src":"187:12:23"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:23"},{"body":{"nodeType":"YulBlock","src":"300:28:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:23"},"nodeType":"YulFunctionCall","src":"310:12:23"},"nodeType":"YulExpressionStatement","src":"310:12:23"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:23"},{"body":{"nodeType":"YulBlock","src":"423:28:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"440:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"443:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"433:6:23"},"nodeType":"YulFunctionCall","src":"433:12:23"},"nodeType":"YulExpressionStatement","src":"433:12:23"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"334:117:23"},{"body":{"nodeType":"YulBlock","src":"546:28:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"563:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"566:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"556:6:23"},"nodeType":"YulFunctionCall","src":"556:12:23"},"nodeType":"YulExpressionStatement","src":"556:12:23"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"457:117:23"},{"body":{"nodeType":"YulBlock","src":"628:54:23","statements":[{"nodeType":"YulAssignment","src":"638:38:23","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"656:5:23"},{"kind":"number","nodeType":"YulLiteral","src":"663:2:23","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"652:3:23"},"nodeType":"YulFunctionCall","src":"652:14:23"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"672:2:23","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"668:3:23"},"nodeType":"YulFunctionCall","src":"668:7:23"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"648:3:23"},"nodeType":"YulFunctionCall","src":"648:28:23"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"638:6:23"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"611:5:23","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"621:6:23","type":""}],"src":"580:102:23"},{"body":{"nodeType":"YulBlock","src":"716:152:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"733:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"736:77:23","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"726:6:23"},"nodeType":"YulFunctionCall","src":"726:88:23"},"nodeType":"YulExpressionStatement","src":"726:88:23"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"830:1:23","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"833:4:23","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"823:6:23"},"nodeType":"YulFunctionCall","src":"823:15:23"},"nodeType":"YulExpressionStatement","src":"823:15:23"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"854:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"857:4:23","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"847:6:23"},"nodeType":"YulFunctionCall","src":"847:15:23"},"nodeType":"YulExpressionStatement","src":"847:15:23"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"688:180:23"},{"body":{"nodeType":"YulBlock","src":"917:238:23","statements":[{"nodeType":"YulVariableDeclaration","src":"927:58:23","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"949:6:23"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"979:4:23"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"957:21:23"},"nodeType":"YulFunctionCall","src":"957:27:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"945:3:23"},"nodeType":"YulFunctionCall","src":"945:40:23"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"931:10:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"1096:22:23","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1098:16:23"},"nodeType":"YulFunctionCall","src":"1098:18:23"},"nodeType":"YulExpressionStatement","src":"1098:18:23"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1039:10:23"},{"kind":"number","nodeType":"YulLiteral","src":"1051:18:23","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1036:2:23"},"nodeType":"YulFunctionCall","src":"1036:34:23"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1075:10:23"},{"name":"memPtr","nodeType":"YulIdentifier","src":"1087:6:23"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1072:2:23"},"nodeType":"YulFunctionCall","src":"1072:22:23"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"1033:2:23"},"nodeType":"YulFunctionCall","src":"1033:62:23"},"nodeType":"YulIf","src":"1030:88:23"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1134:2:23","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1138:10:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1127:6:23"},"nodeType":"YulFunctionCall","src":"1127:22:23"},"nodeType":"YulExpressionStatement","src":"1127:22:23"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"903:6:23","type":""},{"name":"size","nodeType":"YulTypedName","src":"911:4:23","type":""}],"src":"874:281:23"},{"body":{"nodeType":"YulBlock","src":"1202:88:23","statements":[{"nodeType":"YulAssignment","src":"1212:30:23","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"1222:18:23"},"nodeType":"YulFunctionCall","src":"1222:20:23"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1212:6:23"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1271:6:23"},{"name":"size","nodeType":"YulIdentifier","src":"1279:4:23"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"1251:19:23"},"nodeType":"YulFunctionCall","src":"1251:33:23"},"nodeType":"YulExpressionStatement","src":"1251:33:23"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"1186:4:23","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1195:6:23","type":""}],"src":"1161:129:23"},{"body":{"nodeType":"YulBlock","src":"1363:241:23","statements":[{"body":{"nodeType":"YulBlock","src":"1468:22:23","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1470:16:23"},"nodeType":"YulFunctionCall","src":"1470:18:23"},"nodeType":"YulExpressionStatement","src":"1470:18:23"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1440:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"1448:18:23","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1437:2:23"},"nodeType":"YulFunctionCall","src":"1437:30:23"},"nodeType":"YulIf","src":"1434:56:23"},{"nodeType":"YulAssignment","src":"1500:37:23","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1530:6:23"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"1508:21:23"},"nodeType":"YulFunctionCall","src":"1508:29:23"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"1500:4:23"}]},{"nodeType":"YulAssignment","src":"1574:23:23","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"1586:4:23"},{"kind":"number","nodeType":"YulLiteral","src":"1592:4:23","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1582:3:23"},"nodeType":"YulFunctionCall","src":"1582:15:23"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"1574:4:23"}]}]},"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"1347:6:23","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"1358:4:23","type":""}],"src":"1296:308:23"},{"body":{"nodeType":"YulBlock","src":"1672:184:23","statements":[{"nodeType":"YulVariableDeclaration","src":"1682:10:23","value":{"kind":"number","nodeType":"YulLiteral","src":"1691:1:23","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"1686:1:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"1751:63:23","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1776:3:23"},{"name":"i","nodeType":"YulIdentifier","src":"1781:1:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1772:3:23"},"nodeType":"YulFunctionCall","src":"1772:11:23"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"1795:3:23"},{"name":"i","nodeType":"YulIdentifier","src":"1800:1:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1791:3:23"},"nodeType":"YulFunctionCall","src":"1791:11:23"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1785:5:23"},"nodeType":"YulFunctionCall","src":"1785:18:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1765:6:23"},"nodeType":"YulFunctionCall","src":"1765:39:23"},"nodeType":"YulExpressionStatement","src":"1765:39:23"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1712:1:23"},{"name":"length","nodeType":"YulIdentifier","src":"1715:6:23"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1709:2:23"},"nodeType":"YulFunctionCall","src":"1709:13:23"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1723:19:23","statements":[{"nodeType":"YulAssignment","src":"1725:15:23","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1734:1:23"},{"kind":"number","nodeType":"YulLiteral","src":"1737:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1730:3:23"},"nodeType":"YulFunctionCall","src":"1730:10:23"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"1725:1:23"}]}]},"pre":{"nodeType":"YulBlock","src":"1705:3:23","statements":[]},"src":"1701:113:23"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1834:3:23"},{"name":"length","nodeType":"YulIdentifier","src":"1839:6:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1830:3:23"},"nodeType":"YulFunctionCall","src":"1830:16:23"},{"kind":"number","nodeType":"YulLiteral","src":"1848:1:23","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1823:6:23"},"nodeType":"YulFunctionCall","src":"1823:27:23"},"nodeType":"YulExpressionStatement","src":"1823:27:23"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"1654:3:23","type":""},{"name":"dst","nodeType":"YulTypedName","src":"1659:3:23","type":""},{"name":"length","nodeType":"YulTypedName","src":"1664:6:23","type":""}],"src":"1610:246:23"},{"body":{"nodeType":"YulBlock","src":"1957:339:23","statements":[{"nodeType":"YulAssignment","src":"1967:75:23","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2034:6:23"}],"functionName":{"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulIdentifier","src":"1992:41:23"},"nodeType":"YulFunctionCall","src":"1992:49:23"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"1976:15:23"},"nodeType":"YulFunctionCall","src":"1976:66:23"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"1967:5:23"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"2058:5:23"},{"name":"length","nodeType":"YulIdentifier","src":"2065:6:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2051:6:23"},"nodeType":"YulFunctionCall","src":"2051:21:23"},"nodeType":"YulExpressionStatement","src":"2051:21:23"},{"nodeType":"YulVariableDeclaration","src":"2081:27:23","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"2096:5:23"},{"kind":"number","nodeType":"YulLiteral","src":"2103:4:23","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2092:3:23"},"nodeType":"YulFunctionCall","src":"2092:16:23"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"2085:3:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"2146:83:23","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"2148:77:23"},"nodeType":"YulFunctionCall","src":"2148:79:23"},"nodeType":"YulExpressionStatement","src":"2148:79:23"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2127:3:23"},{"name":"length","nodeType":"YulIdentifier","src":"2132:6:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2123:3:23"},"nodeType":"YulFunctionCall","src":"2123:16:23"},{"name":"end","nodeType":"YulIdentifier","src":"2141:3:23"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2120:2:23"},"nodeType":"YulFunctionCall","src":"2120:25:23"},"nodeType":"YulIf","src":"2117:112:23"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2273:3:23"},{"name":"dst","nodeType":"YulIdentifier","src":"2278:3:23"},{"name":"length","nodeType":"YulIdentifier","src":"2283:6:23"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"2238:34:23"},"nodeType":"YulFunctionCall","src":"2238:52:23"},"nodeType":"YulExpressionStatement","src":"2238:52:23"}]},"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"1930:3:23","type":""},{"name":"length","nodeType":"YulTypedName","src":"1935:6:23","type":""},{"name":"end","nodeType":"YulTypedName","src":"1943:3:23","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"1951:5:23","type":""}],"src":"1862:434:23"},{"body":{"nodeType":"YulBlock","src":"2389:282:23","statements":[{"body":{"nodeType":"YulBlock","src":"2438:83:23","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"2440:77:23"},"nodeType":"YulFunctionCall","src":"2440:79:23"},"nodeType":"YulExpressionStatement","src":"2440:79:23"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2417:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"2425:4:23","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2413:3:23"},"nodeType":"YulFunctionCall","src":"2413:17:23"},{"name":"end","nodeType":"YulIdentifier","src":"2432:3:23"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2409:3:23"},"nodeType":"YulFunctionCall","src":"2409:27:23"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2402:6:23"},"nodeType":"YulFunctionCall","src":"2402:35:23"},"nodeType":"YulIf","src":"2399:122:23"},{"nodeType":"YulVariableDeclaration","src":"2530:27:23","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2550:6:23"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2544:5:23"},"nodeType":"YulFunctionCall","src":"2544:13:23"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"2534:6:23","type":""}]},{"nodeType":"YulAssignment","src":"2566:99:23","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2638:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"2646:4:23","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2634:3:23"},"nodeType":"YulFunctionCall","src":"2634:17:23"},{"name":"length","nodeType":"YulIdentifier","src":"2653:6:23"},{"name":"end","nodeType":"YulIdentifier","src":"2661:3:23"}],"functionName":{"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"2575:58:23"},"nodeType":"YulFunctionCall","src":"2575:90:23"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"2566:5:23"}]}]},"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2367:6:23","type":""},{"name":"end","nodeType":"YulTypedName","src":"2375:3:23","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"2383:5:23","type":""}],"src":"2316:355:23"},{"body":{"nodeType":"YulBlock","src":"2791:739:23","statements":[{"body":{"nodeType":"YulBlock","src":"2837:83:23","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2839:77:23"},"nodeType":"YulFunctionCall","src":"2839:79:23"},"nodeType":"YulExpressionStatement","src":"2839:79:23"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2812:7:23"},{"name":"headStart","nodeType":"YulIdentifier","src":"2821:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2808:3:23"},"nodeType":"YulFunctionCall","src":"2808:23:23"},{"kind":"number","nodeType":"YulLiteral","src":"2833:2:23","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2804:3:23"},"nodeType":"YulFunctionCall","src":"2804:32:23"},"nodeType":"YulIf","src":"2801:119:23"},{"nodeType":"YulBlock","src":"2930:291:23","statements":[{"nodeType":"YulVariableDeclaration","src":"2945:38:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2969:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"2980:1:23","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2965:3:23"},"nodeType":"YulFunctionCall","src":"2965:17:23"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2959:5:23"},"nodeType":"YulFunctionCall","src":"2959:24:23"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2949:6:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"3030:83:23","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"3032:77:23"},"nodeType":"YulFunctionCall","src":"3032:79:23"},"nodeType":"YulExpressionStatement","src":"3032:79:23"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3002:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"3010:18:23","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2999:2:23"},"nodeType":"YulFunctionCall","src":"2999:30:23"},"nodeType":"YulIf","src":"2996:117:23"},{"nodeType":"YulAssignment","src":"3127:84:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3183:9:23"},{"name":"offset","nodeType":"YulIdentifier","src":"3194:6:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3179:3:23"},"nodeType":"YulFunctionCall","src":"3179:22:23"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3203:7:23"}],"functionName":{"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"3137:41:23"},"nodeType":"YulFunctionCall","src":"3137:74:23"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3127:6:23"}]}]},{"nodeType":"YulBlock","src":"3231:292:23","statements":[{"nodeType":"YulVariableDeclaration","src":"3246:39:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3270:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"3281:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3266:3:23"},"nodeType":"YulFunctionCall","src":"3266:18:23"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3260:5:23"},"nodeType":"YulFunctionCall","src":"3260:25:23"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3250:6:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"3332:83:23","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"3334:77:23"},"nodeType":"YulFunctionCall","src":"3334:79:23"},"nodeType":"YulExpressionStatement","src":"3334:79:23"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3304:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"3312:18:23","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3301:2:23"},"nodeType":"YulFunctionCall","src":"3301:30:23"},"nodeType":"YulIf","src":"3298:117:23"},{"nodeType":"YulAssignment","src":"3429:84:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3485:9:23"},{"name":"offset","nodeType":"YulIdentifier","src":"3496:6:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3481:3:23"},"nodeType":"YulFunctionCall","src":"3481:22:23"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3505:7:23"}],"functionName":{"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"3439:41:23"},"nodeType":"YulFunctionCall","src":"3439:74:23"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3429:6:23"}]}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2753:9:23","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2764:7:23","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2776:6:23","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2784:6:23","type":""}],"src":"2677:853:23"},{"body":{"nodeType":"YulBlock","src":"3595:40:23","statements":[{"nodeType":"YulAssignment","src":"3606:22:23","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3622:5:23"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3616:5:23"},"nodeType":"YulFunctionCall","src":"3616:12:23"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"3606:6:23"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3578:5:23","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"3588:6:23","type":""}],"src":"3536:99:23"},{"body":{"nodeType":"YulBlock","src":"3669:152:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3686:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3689:77:23","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3679:6:23"},"nodeType":"YulFunctionCall","src":"3679:88:23"},"nodeType":"YulExpressionStatement","src":"3679:88:23"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3783:1:23","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"3786:4:23","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3776:6:23"},"nodeType":"YulFunctionCall","src":"3776:15:23"},"nodeType":"YulExpressionStatement","src":"3776:15:23"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3807:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3810:4:23","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3800:6:23"},"nodeType":"YulFunctionCall","src":"3800:15:23"},"nodeType":"YulExpressionStatement","src":"3800:15:23"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"3641:180:23"},{"body":{"nodeType":"YulBlock","src":"3878:269:23","statements":[{"nodeType":"YulAssignment","src":"3888:22:23","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3902:4:23"},{"kind":"number","nodeType":"YulLiteral","src":"3908:1:23","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"3898:3:23"},"nodeType":"YulFunctionCall","src":"3898:12:23"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"3888:6:23"}]},{"nodeType":"YulVariableDeclaration","src":"3919:38:23","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3949:4:23"},{"kind":"number","nodeType":"YulLiteral","src":"3955:1:23","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3945:3:23"},"nodeType":"YulFunctionCall","src":"3945:12:23"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"3923:18:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"3996:51:23","statements":[{"nodeType":"YulAssignment","src":"4010:27:23","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4024:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"4032:4:23","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4020:3:23"},"nodeType":"YulFunctionCall","src":"4020:17:23"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"4010:6:23"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"3976:18:23"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3969:6:23"},"nodeType":"YulFunctionCall","src":"3969:26:23"},"nodeType":"YulIf","src":"3966:81:23"},{"body":{"nodeType":"YulBlock","src":"4099:42:23","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"4113:16:23"},"nodeType":"YulFunctionCall","src":"4113:18:23"},"nodeType":"YulExpressionStatement","src":"4113:18:23"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"4063:18:23"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4086:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"4094:2:23","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4083:2:23"},"nodeType":"YulFunctionCall","src":"4083:14:23"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"4060:2:23"},"nodeType":"YulFunctionCall","src":"4060:38:23"},"nodeType":"YulIf","src":"4057:84:23"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"3862:4:23","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"3871:6:23","type":""}],"src":"3827:320:23"},{"body":{"nodeType":"YulBlock","src":"4207:87:23","statements":[{"nodeType":"YulAssignment","src":"4217:11:23","value":{"name":"ptr","nodeType":"YulIdentifier","src":"4225:3:23"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"4217:4:23"}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4245:1:23","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"4248:3:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4238:6:23"},"nodeType":"YulFunctionCall","src":"4238:14:23"},"nodeType":"YulExpressionStatement","src":"4238:14:23"},{"nodeType":"YulAssignment","src":"4261:26:23","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4279:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4282:4:23","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"4269:9:23"},"nodeType":"YulFunctionCall","src":"4269:18:23"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"4261:4:23"}]}]},"name":"array_dataslot_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"4194:3:23","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"4202:4:23","type":""}],"src":"4153:141:23"},{"body":{"nodeType":"YulBlock","src":"4344:49:23","statements":[{"nodeType":"YulAssignment","src":"4354:33:23","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4372:5:23"},{"kind":"number","nodeType":"YulLiteral","src":"4379:2:23","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4368:3:23"},"nodeType":"YulFunctionCall","src":"4368:14:23"},{"kind":"number","nodeType":"YulLiteral","src":"4384:2:23","type":"","value":"32"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4364:3:23"},"nodeType":"YulFunctionCall","src":"4364:23:23"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"4354:6:23"}]}]},"name":"divide_by_32_ceil","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4327:5:23","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"4337:6:23","type":""}],"src":"4300:93:23"},{"body":{"nodeType":"YulBlock","src":"4452:54:23","statements":[{"nodeType":"YulAssignment","src":"4462:37:23","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"4487:4:23"},{"name":"value","nodeType":"YulIdentifier","src":"4493:5:23"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4483:3:23"},"nodeType":"YulFunctionCall","src":"4483:16:23"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"4462:8:23"}]}]},"name":"shift_left_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"4427:4:23","type":""},{"name":"value","nodeType":"YulTypedName","src":"4433:5:23","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"4443:8:23","type":""}],"src":"4399:107:23"},{"body":{"nodeType":"YulBlock","src":"4588:317:23","statements":[{"nodeType":"YulVariableDeclaration","src":"4598:35:23","value":{"arguments":[{"name":"shiftBytes","nodeType":"YulIdentifier","src":"4619:10:23"},{"kind":"number","nodeType":"YulLiteral","src":"4631:1:23","type":"","value":"8"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"4615:3:23"},"nodeType":"YulFunctionCall","src":"4615:18:23"},"variables":[{"name":"shiftBits","nodeType":"YulTypedName","src":"4602:9:23","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4642:109:23","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"4673:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"4684:66:23","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"4654:18:23"},"nodeType":"YulFunctionCall","src":"4654:97:23"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"4646:4:23","type":""}]},{"nodeType":"YulAssignment","src":"4760:51:23","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"4791:9:23"},{"name":"toInsert","nodeType":"YulIdentifier","src":"4802:8:23"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"4772:18:23"},"nodeType":"YulFunctionCall","src":"4772:39:23"},"variableNames":[{"name":"toInsert","nodeType":"YulIdentifier","src":"4760:8:23"}]},{"nodeType":"YulAssignment","src":"4820:30:23","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4833:5:23"},{"arguments":[{"name":"mask","nodeType":"YulIdentifier","src":"4844:4:23"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4840:3:23"},"nodeType":"YulFunctionCall","src":"4840:9:23"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4829:3:23"},"nodeType":"YulFunctionCall","src":"4829:21:23"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"4820:5:23"}]},{"nodeType":"YulAssignment","src":"4859:40:23","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4872:5:23"},{"arguments":[{"name":"toInsert","nodeType":"YulIdentifier","src":"4883:8:23"},{"name":"mask","nodeType":"YulIdentifier","src":"4893:4:23"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4879:3:23"},"nodeType":"YulFunctionCall","src":"4879:19:23"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"4869:2:23"},"nodeType":"YulFunctionCall","src":"4869:30:23"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"4859:6:23"}]}]},"name":"update_byte_slice_dynamic32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4549:5:23","type":""},{"name":"shiftBytes","nodeType":"YulTypedName","src":"4556:10:23","type":""},{"name":"toInsert","nodeType":"YulTypedName","src":"4568:8:23","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"4581:6:23","type":""}],"src":"4512:393:23"},{"body":{"nodeType":"YulBlock","src":"4956:32:23","statements":[{"nodeType":"YulAssignment","src":"4966:16:23","value":{"name":"value","nodeType":"YulIdentifier","src":"4977:5:23"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"4966:7:23"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4938:5:23","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"4948:7:23","type":""}],"src":"4911:77:23"},{"body":{"nodeType":"YulBlock","src":"5026:28:23","statements":[{"nodeType":"YulAssignment","src":"5036:12:23","value":{"name":"value","nodeType":"YulIdentifier","src":"5043:5:23"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"5036:3:23"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5012:5:23","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"5022:3:23","type":""}],"src":"4994:60:23"},{"body":{"nodeType":"YulBlock","src":"5120:82:23","statements":[{"nodeType":"YulAssignment","src":"5130:66:23","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5188:5:23"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"5170:17:23"},"nodeType":"YulFunctionCall","src":"5170:24:23"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"5161:8:23"},"nodeType":"YulFunctionCall","src":"5161:34:23"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"5143:17:23"},"nodeType":"YulFunctionCall","src":"5143:53:23"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"5130:9:23"}]}]},"name":"convert_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5100:5:23","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"5110:9:23","type":""}],"src":"5060:142:23"},{"body":{"nodeType":"YulBlock","src":"5255:28:23","statements":[{"nodeType":"YulAssignment","src":"5265:12:23","value":{"name":"value","nodeType":"YulIdentifier","src":"5272:5:23"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"5265:3:23"}]}]},"name":"prepare_store_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5241:5:23","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"5251:3:23","type":""}],"src":"5208:75:23"},{"body":{"nodeType":"YulBlock","src":"5365:193:23","statements":[{"nodeType":"YulVariableDeclaration","src":"5375:63:23","value":{"arguments":[{"name":"value_0","nodeType":"YulIdentifier","src":"5430:7:23"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"5399:30:23"},"nodeType":"YulFunctionCall","src":"5399:39:23"},"variables":[{"name":"convertedValue_0","nodeType":"YulTypedName","src":"5379:16:23","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"5454:4:23"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"5494:4:23"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"5488:5:23"},"nodeType":"YulFunctionCall","src":"5488:11:23"},{"name":"offset","nodeType":"YulIdentifier","src":"5501:6:23"},{"arguments":[{"name":"convertedValue_0","nodeType":"YulIdentifier","src":"5533:16:23"}],"functionName":{"name":"prepare_store_t_uint256","nodeType":"YulIdentifier","src":"5509:23:23"},"nodeType":"YulFunctionCall","src":"5509:41:23"}],"functionName":{"name":"update_byte_slice_dynamic32","nodeType":"YulIdentifier","src":"5460:27:23"},"nodeType":"YulFunctionCall","src":"5460:91:23"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"5447:6:23"},"nodeType":"YulFunctionCall","src":"5447:105:23"},"nodeType":"YulExpressionStatement","src":"5447:105:23"}]},"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"5342:4:23","type":""},{"name":"offset","nodeType":"YulTypedName","src":"5348:6:23","type":""},{"name":"value_0","nodeType":"YulTypedName","src":"5356:7:23","type":""}],"src":"5289:269:23"},{"body":{"nodeType":"YulBlock","src":"5613:24:23","statements":[{"nodeType":"YulAssignment","src":"5623:8:23","value":{"kind":"number","nodeType":"YulLiteral","src":"5630:1:23","type":"","value":"0"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"5623:3:23"}]}]},"name":"zero_value_for_split_t_uint256","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"5609:3:23","type":""}],"src":"5564:73:23"},{"body":{"nodeType":"YulBlock","src":"5696:136:23","statements":[{"nodeType":"YulVariableDeclaration","src":"5706:46:23","value":{"arguments":[],"functionName":{"name":"zero_value_for_split_t_uint256","nodeType":"YulIdentifier","src":"5720:30:23"},"nodeType":"YulFunctionCall","src":"5720:32:23"},"variables":[{"name":"zero_0","nodeType":"YulTypedName","src":"5710:6:23","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"5805:4:23"},{"name":"offset","nodeType":"YulIdentifier","src":"5811:6:23"},{"name":"zero_0","nodeType":"YulIdentifier","src":"5819:6:23"}],"functionName":{"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"5761:43:23"},"nodeType":"YulFunctionCall","src":"5761:65:23"},"nodeType":"YulExpressionStatement","src":"5761:65:23"}]},"name":"storage_set_to_zero_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"5682:4:23","type":""},{"name":"offset","nodeType":"YulTypedName","src":"5688:6:23","type":""}],"src":"5643:189:23"},{"body":{"nodeType":"YulBlock","src":"5888:136:23","statements":[{"body":{"nodeType":"YulBlock","src":"5955:63:23","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"5999:5:23"},{"kind":"number","nodeType":"YulLiteral","src":"6006:1:23","type":"","value":"0"}],"functionName":{"name":"storage_set_to_zero_t_uint256","nodeType":"YulIdentifier","src":"5969:29:23"},"nodeType":"YulFunctionCall","src":"5969:39:23"},"nodeType":"YulExpressionStatement","src":"5969:39:23"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"5908:5:23"},{"name":"end","nodeType":"YulIdentifier","src":"5915:3:23"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5905:2:23"},"nodeType":"YulFunctionCall","src":"5905:14:23"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"5920:26:23","statements":[{"nodeType":"YulAssignment","src":"5922:22:23","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"5935:5:23"},{"kind":"number","nodeType":"YulLiteral","src":"5942:1:23","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5931:3:23"},"nodeType":"YulFunctionCall","src":"5931:13:23"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"5922:5:23"}]}]},"pre":{"nodeType":"YulBlock","src":"5902:2:23","statements":[]},"src":"5898:120:23"}]},"name":"clear_storage_range_t_bytes1","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nodeType":"YulTypedName","src":"5876:5:23","type":""},{"name":"end","nodeType":"YulTypedName","src":"5883:3:23","type":""}],"src":"5838:186:23"},{"body":{"nodeType":"YulBlock","src":"6109:464:23","statements":[{"body":{"nodeType":"YulBlock","src":"6135:431:23","statements":[{"nodeType":"YulVariableDeclaration","src":"6149:54:23","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"6197:5:23"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"6165:31:23"},"nodeType":"YulFunctionCall","src":"6165:38:23"},"variables":[{"name":"dataArea","nodeType":"YulTypedName","src":"6153:8:23","type":""}]},{"nodeType":"YulVariableDeclaration","src":"6216:63:23","value":{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"6239:8:23"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"6267:10:23"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"6249:17:23"},"nodeType":"YulFunctionCall","src":"6249:29:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6235:3:23"},"nodeType":"YulFunctionCall","src":"6235:44:23"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"6220:11:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"6436:27:23","statements":[{"nodeType":"YulAssignment","src":"6438:23:23","value":{"name":"dataArea","nodeType":"YulIdentifier","src":"6453:8:23"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"6438:11:23"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"6420:10:23"},{"kind":"number","nodeType":"YulLiteral","src":"6432:2:23","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6417:2:23"},"nodeType":"YulFunctionCall","src":"6417:18:23"},"nodeType":"YulIf","src":"6414:49:23"},{"expression":{"arguments":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"6505:11:23"},{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"6522:8:23"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"6550:3:23"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"6532:17:23"},"nodeType":"YulFunctionCall","src":"6532:22:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6518:3:23"},"nodeType":"YulFunctionCall","src":"6518:37:23"}],"functionName":{"name":"clear_storage_range_t_bytes1","nodeType":"YulIdentifier","src":"6476:28:23"},"nodeType":"YulFunctionCall","src":"6476:80:23"},"nodeType":"YulExpressionStatement","src":"6476:80:23"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"6126:3:23"},{"kind":"number","nodeType":"YulLiteral","src":"6131:2:23","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6123:2:23"},"nodeType":"YulFunctionCall","src":"6123:11:23"},"nodeType":"YulIf","src":"6120:446:23"}]},"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"6085:5:23","type":""},{"name":"len","nodeType":"YulTypedName","src":"6092:3:23","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"6097:10:23","type":""}],"src":"6030:543:23"},{"body":{"nodeType":"YulBlock","src":"6642:54:23","statements":[{"nodeType":"YulAssignment","src":"6652:37:23","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"6677:4:23"},{"name":"value","nodeType":"YulIdentifier","src":"6683:5:23"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"6673:3:23"},"nodeType":"YulFunctionCall","src":"6673:16:23"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"6652:8:23"}]}]},"name":"shift_right_unsigned_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"6617:4:23","type":""},{"name":"value","nodeType":"YulTypedName","src":"6623:5:23","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"6633:8:23","type":""}],"src":"6579:117:23"},{"body":{"nodeType":"YulBlock","src":"6753:118:23","statements":[{"nodeType":"YulVariableDeclaration","src":"6763:68:23","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6812:1:23","type":"","value":"8"},{"name":"bytes","nodeType":"YulIdentifier","src":"6815:5:23"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"6808:3:23"},"nodeType":"YulFunctionCall","src":"6808:13:23"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6827:1:23","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"6823:3:23"},"nodeType":"YulFunctionCall","src":"6823:6:23"}],"functionName":{"name":"shift_right_unsigned_dynamic","nodeType":"YulIdentifier","src":"6779:28:23"},"nodeType":"YulFunctionCall","src":"6779:51:23"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"6775:3:23"},"nodeType":"YulFunctionCall","src":"6775:56:23"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"6767:4:23","type":""}]},{"nodeType":"YulAssignment","src":"6840:25:23","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"6854:4:23"},{"name":"mask","nodeType":"YulIdentifier","src":"6860:4:23"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6850:3:23"},"nodeType":"YulFunctionCall","src":"6850:15:23"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"6840:6:23"}]}]},"name":"mask_bytes_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"6730:4:23","type":""},{"name":"bytes","nodeType":"YulTypedName","src":"6736:5:23","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"6746:6:23","type":""}],"src":"6702:169:23"},{"body":{"nodeType":"YulBlock","src":"6957:214:23","statements":[{"nodeType":"YulAssignment","src":"7090:37:23","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"7117:4:23"},{"name":"len","nodeType":"YulIdentifier","src":"7123:3:23"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"7098:18:23"},"nodeType":"YulFunctionCall","src":"7098:29:23"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"7090:4:23"}]},{"nodeType":"YulAssignment","src":"7136:29:23","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"7147:4:23"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7157:1:23","type":"","value":"2"},{"name":"len","nodeType":"YulIdentifier","src":"7160:3:23"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"7153:3:23"},"nodeType":"YulFunctionCall","src":"7153:11:23"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"7144:2:23"},"nodeType":"YulFunctionCall","src":"7144:21:23"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"7136:4:23"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"6938:4:23","type":""},{"name":"len","nodeType":"YulTypedName","src":"6944:3:23","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"6952:4:23","type":""}],"src":"6876:295:23"},{"body":{"nodeType":"YulBlock","src":"7268:1303:23","statements":[{"nodeType":"YulVariableDeclaration","src":"7279:51:23","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"7326:3:23"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"7293:32:23"},"nodeType":"YulFunctionCall","src":"7293:37:23"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"7283:6:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"7415:22:23","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"7417:16:23"},"nodeType":"YulFunctionCall","src":"7417:18:23"},"nodeType":"YulExpressionStatement","src":"7417:18:23"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"7387:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"7395:18:23","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7384:2:23"},"nodeType":"YulFunctionCall","src":"7384:30:23"},"nodeType":"YulIf","src":"7381:56:23"},{"nodeType":"YulVariableDeclaration","src":"7447:52:23","value":{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"7493:4:23"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"7487:5:23"},"nodeType":"YulFunctionCall","src":"7487:11:23"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"7461:25:23"},"nodeType":"YulFunctionCall","src":"7461:38:23"},"variables":[{"name":"oldLen","nodeType":"YulTypedName","src":"7451:6:23","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"7592:4:23"},{"name":"oldLen","nodeType":"YulIdentifier","src":"7598:6:23"},{"name":"newLen","nodeType":"YulIdentifier","src":"7606:6:23"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulIdentifier","src":"7546:45:23"},"nodeType":"YulFunctionCall","src":"7546:67:23"},"nodeType":"YulExpressionStatement","src":"7546:67:23"},{"nodeType":"YulVariableDeclaration","src":"7623:18:23","value":{"kind":"number","nodeType":"YulLiteral","src":"7640:1:23","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"7627:9:23","type":""}]},{"nodeType":"YulAssignment","src":"7651:17:23","value":{"kind":"number","nodeType":"YulLiteral","src":"7664:4:23","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"7651:9:23"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"7715:611:23","statements":[{"nodeType":"YulVariableDeclaration","src":"7729:37:23","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"7748:6:23"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7760:4:23","type":"","value":"0x1f"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"7756:3:23"},"nodeType":"YulFunctionCall","src":"7756:9:23"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7744:3:23"},"nodeType":"YulFunctionCall","src":"7744:22:23"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"7733:7:23","type":""}]},{"nodeType":"YulVariableDeclaration","src":"7780:51:23","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"7826:4:23"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"7794:31:23"},"nodeType":"YulFunctionCall","src":"7794:37:23"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"7784:6:23","type":""}]},{"nodeType":"YulVariableDeclaration","src":"7844:10:23","value":{"kind":"number","nodeType":"YulLiteral","src":"7853:1:23","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"7848:1:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"7912:163:23","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"7937:6:23"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"7955:3:23"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"7960:9:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7951:3:23"},"nodeType":"YulFunctionCall","src":"7951:19:23"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7945:5:23"},"nodeType":"YulFunctionCall","src":"7945:26:23"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"7930:6:23"},"nodeType":"YulFunctionCall","src":"7930:42:23"},"nodeType":"YulExpressionStatement","src":"7930:42:23"},{"nodeType":"YulAssignment","src":"7989:24:23","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"8003:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"8011:1:23","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7999:3:23"},"nodeType":"YulFunctionCall","src":"7999:14:23"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"7989:6:23"}]},{"nodeType":"YulAssignment","src":"8030:31:23","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"8047:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"8058:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8043:3:23"},"nodeType":"YulFunctionCall","src":"8043:18:23"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"8030:9:23"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"7878:1:23"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"7881:7:23"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"7875:2:23"},"nodeType":"YulFunctionCall","src":"7875:14:23"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"7890:21:23","statements":[{"nodeType":"YulAssignment","src":"7892:17:23","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"7901:1:23"},{"kind":"number","nodeType":"YulLiteral","src":"7904:4:23","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7897:3:23"},"nodeType":"YulFunctionCall","src":"7897:12:23"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"7892:1:23"}]}]},"pre":{"nodeType":"YulBlock","src":"7871:3:23","statements":[]},"src":"7867:208:23"},{"body":{"nodeType":"YulBlock","src":"8111:156:23","statements":[{"nodeType":"YulVariableDeclaration","src":"8129:43:23","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"8156:3:23"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"8161:9:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8152:3:23"},"nodeType":"YulFunctionCall","src":"8152:19:23"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8146:5:23"},"nodeType":"YulFunctionCall","src":"8146:26:23"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"8133:9:23","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"8196:6:23"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"8223:9:23"},{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"8238:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"8246:4:23","type":"","value":"0x1f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8234:3:23"},"nodeType":"YulFunctionCall","src":"8234:17:23"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"8204:18:23"},"nodeType":"YulFunctionCall","src":"8204:48:23"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"8189:6:23"},"nodeType":"YulFunctionCall","src":"8189:64:23"},"nodeType":"YulExpressionStatement","src":"8189:64:23"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"8094:7:23"},{"name":"newLen","nodeType":"YulIdentifier","src":"8103:6:23"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"8091:2:23"},"nodeType":"YulFunctionCall","src":"8091:19:23"},"nodeType":"YulIf","src":"8088:179:23"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"8287:4:23"},{"arguments":[{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"8301:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"8309:1:23","type":"","value":"2"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"8297:3:23"},"nodeType":"YulFunctionCall","src":"8297:14:23"},{"kind":"number","nodeType":"YulLiteral","src":"8313:1:23","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8293:3:23"},"nodeType":"YulFunctionCall","src":"8293:22:23"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"8280:6:23"},"nodeType":"YulFunctionCall","src":"8280:36:23"},"nodeType":"YulExpressionStatement","src":"8280:36:23"}]},"nodeType":"YulCase","src":"7708:618:23","value":{"kind":"number","nodeType":"YulLiteral","src":"7713:1:23","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"8343:222:23","statements":[{"nodeType":"YulVariableDeclaration","src":"8357:14:23","value":{"kind":"number","nodeType":"YulLiteral","src":"8370:1:23","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"8361:5:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"8394:67:23","statements":[{"nodeType":"YulAssignment","src":"8412:35:23","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"8431:3:23"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"8436:9:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8427:3:23"},"nodeType":"YulFunctionCall","src":"8427:19:23"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8421:5:23"},"nodeType":"YulFunctionCall","src":"8421:26:23"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"8412:5:23"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"8387:6:23"},"nodeType":"YulIf","src":"8384:77:23"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"8481:4:23"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8540:5:23"},{"name":"newLen","nodeType":"YulIdentifier","src":"8547:6:23"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"8487:52:23"},"nodeType":"YulFunctionCall","src":"8487:67:23"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"8474:6:23"},"nodeType":"YulFunctionCall","src":"8474:81:23"},"nodeType":"YulExpressionStatement","src":"8474:81:23"}]},"nodeType":"YulCase","src":"8335:230:23","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"7688:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"7696:2:23","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7685:2:23"},"nodeType":"YulFunctionCall","src":"7685:14:23"},"nodeType":"YulSwitch","src":"7678:887:23"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"7257:4:23","type":""},{"name":"src","nodeType":"YulTypedName","src":"7263:3:23","type":""}],"src":"7176:1395:23"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n}\n","id":23,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60806040523480156200001157600080fd5b50604051620017ec380380620017ec8339818101604052810190620000379190620001f6565b8160039081620000489190620004c6565b5080600490816200005a9190620004c6565b505050620005ad565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620000cc8262000081565b810181811067ffffffffffffffff82111715620000ee57620000ed62000092565b5b80604052505050565b60006200010362000063565b9050620001118282620000c1565b919050565b600067ffffffffffffffff82111562000134576200013362000092565b5b6200013f8262000081565b9050602081019050919050565b60005b838110156200016c5780820151818401526020810190506200014f565b60008484015250505050565b60006200018f620001898462000116565b620000f7565b905082815260208101848484011115620001ae57620001ad6200007c565b5b620001bb8482856200014c565b509392505050565b600082601f830112620001db57620001da62000077565b5b8151620001ed84826020860162000178565b91505092915050565b6000806040838503121562000210576200020f6200006d565b5b600083015167ffffffffffffffff81111562000231576200023062000072565b5b6200023f85828601620001c3565b925050602083015167ffffffffffffffff81111562000263576200026262000072565b5b6200027185828601620001c3565b9150509250929050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680620002ce57607f821691505b602082108103620002e457620002e362000286565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026200034e7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826200030f565b6200035a86836200030f565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b6000620003a7620003a16200039b8462000372565b6200037c565b62000372565b9050919050565b6000819050919050565b620003c38362000386565b620003db620003d282620003ae565b8484546200031c565b825550505050565b600090565b620003f2620003e3565b620003ff818484620003b8565b505050565b5b8181101562000427576200041b600082620003e8565b60018101905062000405565b5050565b601f82111562000476576200044081620002ea565b6200044b84620002ff565b810160208510156200045b578190505b620004736200046a85620002ff565b83018262000404565b50505b505050565b600082821c905092915050565b60006200049b600019846008026200047b565b1980831691505092915050565b6000620004b6838362000488565b9150826002028217905092915050565b620004d1826200027b565b67ffffffffffffffff811115620004ed57620004ec62000092565b5b620004f98254620002b5565b620005068282856200042b565b600060209050601f8311600181146200053e576000841562000529578287015190505b620005358582620004a8565b865550620005a5565b601f1984166200054e86620002ea565b60005b82811015620005785784890151825560018201915060208501945060208101905062000551565b8683101562000598578489015162000594601f89168262000488565b8355505b6001600288020188555050505b505050505050565b61122f80620005bd6000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461016857806370a082311461019857806395d89b41146101c8578063a457c2d7146101e6578063a9059cbb14610216578063dd62ed3e14610246576100a9565b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100fc57806323b872dd1461011a578063313ce5671461014a575b600080fd5b6100b6610276565b6040516100c39190610b0c565b60405180910390f35b6100e660048036038101906100e19190610bc7565b610308565b6040516100f39190610c22565b60405180910390f35b61010461032b565b6040516101119190610c4c565b60405180910390f35b610134600480360381019061012f9190610c67565b610335565b6040516101419190610c22565b60405180910390f35b610152610364565b60405161015f9190610cd6565b60405180910390f35b610182600480360381019061017d9190610bc7565b61036d565b60405161018f9190610c22565b60405180910390f35b6101b260048036038101906101ad9190610cf1565b6103a4565b6040516101bf9190610c4c565b60405180910390f35b6101d06103ec565b6040516101dd9190610b0c565b60405180910390f35b61020060048036038101906101fb9190610bc7565b61047e565b60405161020d9190610c22565b60405180910390f35b610230600480360381019061022b9190610bc7565b6104f5565b60405161023d9190610c22565b60405180910390f35b610260600480360381019061025b9190610d1e565b610518565b60405161026d9190610c4c565b60405180910390f35b60606003805461028590610d8d565b80601f01602080910402602001604051908101604052809291908181526020018280546102b190610d8d565b80156102fe5780601f106102d3576101008083540402835291602001916102fe565b820191906000526020600020905b8154815290600101906020018083116102e157829003601f168201915b5050505050905090565b60008061031361059f565b90506103208185856105a7565b600191505092915050565b6000600254905090565b60008061034061059f565b905061034d858285610770565b6103588585856107fc565b60019150509392505050565b60006012905090565b60008061037861059f565b905061039981858561038a8589610518565b6103949190610ded565b6105a7565b600191505092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6060600480546103fb90610d8d565b80601f016020809104026020016040519081016040528092919081815260200182805461042790610d8d565b80156104745780601f1061044957610100808354040283529160200191610474565b820191906000526020600020905b81548152906001019060200180831161045757829003601f168201915b5050505050905090565b60008061048961059f565b905060006104978286610518565b9050838110156104dc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d390610e93565b60405180910390fd5b6104e982868684036105a7565b60019250505092915050565b60008061050061059f565b905061050d8185856107fc565b600191505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610616576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060d90610f25565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610685576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161067c90610fb7565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516107639190610c4c565b60405180910390a3505050565b600061077c8484610518565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146107f657818110156107e8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107df90611023565b60405180910390fd5b6107f584848484036105a7565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361086b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610862906110b5565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036108da576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108d190611147565b60405180910390fd5b6108e5838383610a72565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508181101561096b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610962906111d9565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610a599190610c4c565b60405180910390a3610a6c848484610a77565b50505050565b505050565b505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610ab6578082015181840152602081019050610a9b565b60008484015250505050565b6000601f19601f8301169050919050565b6000610ade82610a7c565b610ae88185610a87565b9350610af8818560208601610a98565b610b0181610ac2565b840191505092915050565b60006020820190508181036000830152610b268184610ad3565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610b5e82610b33565b9050919050565b610b6e81610b53565b8114610b7957600080fd5b50565b600081359050610b8b81610b65565b92915050565b6000819050919050565b610ba481610b91565b8114610baf57600080fd5b50565b600081359050610bc181610b9b565b92915050565b60008060408385031215610bde57610bdd610b2e565b5b6000610bec85828601610b7c565b9250506020610bfd85828601610bb2565b9150509250929050565b60008115159050919050565b610c1c81610c07565b82525050565b6000602082019050610c376000830184610c13565b92915050565b610c4681610b91565b82525050565b6000602082019050610c616000830184610c3d565b92915050565b600080600060608486031215610c8057610c7f610b2e565b5b6000610c8e86828701610b7c565b9350506020610c9f86828701610b7c565b9250506040610cb086828701610bb2565b9150509250925092565b600060ff82169050919050565b610cd081610cba565b82525050565b6000602082019050610ceb6000830184610cc7565b92915050565b600060208284031215610d0757610d06610b2e565b5b6000610d1584828501610b7c565b91505092915050565b60008060408385031215610d3557610d34610b2e565b5b6000610d4385828601610b7c565b9250506020610d5485828601610b7c565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610da557607f821691505b602082108103610db857610db7610d5e565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610df882610b91565b9150610e0383610b91565b9250828201905080821115610e1b57610e1a610dbe565b5b92915050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b6000610e7d602583610a87565b9150610e8882610e21565b604082019050919050565b60006020820190508181036000830152610eac81610e70565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b6000610f0f602483610a87565b9150610f1a82610eb3565b604082019050919050565b60006020820190508181036000830152610f3e81610f02565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b6000610fa1602283610a87565b9150610fac82610f45565b604082019050919050565b60006020820190508181036000830152610fd081610f94565b9050919050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b600061100d601d83610a87565b915061101882610fd7565b602082019050919050565b6000602082019050818103600083015261103c81611000565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b600061109f602583610a87565b91506110aa82611043565b604082019050919050565b600060208201905081810360008301526110ce81611092565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b6000611131602383610a87565b915061113c826110d5565b604082019050919050565b6000602082019050818103600083015261116081611124565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b60006111c3602683610a87565b91506111ce82611167565b604082019050919050565b600060208201905081810360008301526111f2816111b6565b905091905056fea2646970667358221220fdf476e2583d8caf4cdece2e219de3186064b0f77078f3e2440d96f5aa09c17664736f6c63430008130033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x17EC CODESIZE SUB DUP1 PUSH3 0x17EC DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x1F6 JUMP JUMPDEST DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH3 0x48 SWAP2 SWAP1 PUSH3 0x4C6 JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH3 0x5A SWAP2 SWAP1 PUSH3 0x4C6 JUMP JUMPDEST POP POP POP PUSH3 0x5AD JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH3 0xCC DUP3 PUSH3 0x81 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0xEE JUMPI PUSH3 0xED PUSH3 0x92 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x103 PUSH3 0x63 JUMP JUMPDEST SWAP1 POP PUSH3 0x111 DUP3 DUP3 PUSH3 0xC1 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x134 JUMPI PUSH3 0x133 PUSH3 0x92 JUMP JUMPDEST JUMPDEST PUSH3 0x13F DUP3 PUSH3 0x81 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x16C JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x14F JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x18F PUSH3 0x189 DUP5 PUSH3 0x116 JUMP JUMPDEST PUSH3 0xF7 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x1AE JUMPI PUSH3 0x1AD PUSH3 0x7C JUMP JUMPDEST JUMPDEST PUSH3 0x1BB DUP5 DUP3 DUP6 PUSH3 0x14C JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x1DB JUMPI PUSH3 0x1DA PUSH3 0x77 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH3 0x1ED DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x178 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x210 JUMPI PUSH3 0x20F PUSH3 0x6D JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x231 JUMPI PUSH3 0x230 PUSH3 0x72 JUMP JUMPDEST JUMPDEST PUSH3 0x23F DUP6 DUP3 DUP7 ADD PUSH3 0x1C3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x263 JUMPI PUSH3 0x262 PUSH3 0x72 JUMP JUMPDEST JUMPDEST PUSH3 0x271 DUP6 DUP3 DUP7 ADD PUSH3 0x1C3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x2CE JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x2E4 JUMPI PUSH3 0x2E3 PUSH3 0x286 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH3 0x34E PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x30F JUMP JUMPDEST PUSH3 0x35A DUP7 DUP4 PUSH3 0x30F JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x3A7 PUSH3 0x3A1 PUSH3 0x39B DUP5 PUSH3 0x372 JUMP JUMPDEST PUSH3 0x37C JUMP JUMPDEST PUSH3 0x372 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x3C3 DUP4 PUSH3 0x386 JUMP JUMPDEST PUSH3 0x3DB PUSH3 0x3D2 DUP3 PUSH3 0x3AE JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x31C JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH3 0x3F2 PUSH3 0x3E3 JUMP JUMPDEST PUSH3 0x3FF DUP2 DUP5 DUP5 PUSH3 0x3B8 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x427 JUMPI PUSH3 0x41B PUSH1 0x0 DUP3 PUSH3 0x3E8 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x405 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x476 JUMPI PUSH3 0x440 DUP2 PUSH3 0x2EA JUMP JUMPDEST PUSH3 0x44B DUP5 PUSH3 0x2FF JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x45B JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x473 PUSH3 0x46A DUP6 PUSH3 0x2FF JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x404 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x49B PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x47B JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x4B6 DUP4 DUP4 PUSH3 0x488 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x4D1 DUP3 PUSH3 0x27B JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x4ED JUMPI PUSH3 0x4EC PUSH3 0x92 JUMP JUMPDEST JUMPDEST PUSH3 0x4F9 DUP3 SLOAD PUSH3 0x2B5 JUMP JUMPDEST PUSH3 0x506 DUP3 DUP3 DUP6 PUSH3 0x42B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x53E JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x529 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x535 DUP6 DUP3 PUSH3 0x4A8 JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x5A5 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x54E DUP7 PUSH3 0x2EA JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x578 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x551 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x598 JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x594 PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x488 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x122F DUP1 PUSH3 0x5BD PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x168 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x198 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1C8 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x1E6 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x216 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x246 JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xFC JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x11A JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x14A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x276 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0xB0C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE1 SWAP2 SWAP1 PUSH2 0xBC7 JUMP JUMPDEST PUSH2 0x308 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF3 SWAP2 SWAP1 PUSH2 0xC22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x104 PUSH2 0x32B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x111 SWAP2 SWAP1 PUSH2 0xC4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x134 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12F SWAP2 SWAP1 PUSH2 0xC67 JUMP JUMPDEST PUSH2 0x335 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x141 SWAP2 SWAP1 PUSH2 0xC22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x152 PUSH2 0x364 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15F SWAP2 SWAP1 PUSH2 0xCD6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x182 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17D SWAP2 SWAP1 PUSH2 0xBC7 JUMP JUMPDEST PUSH2 0x36D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18F SWAP2 SWAP1 PUSH2 0xC22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AD SWAP2 SWAP1 PUSH2 0xCF1 JUMP JUMPDEST PUSH2 0x3A4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BF SWAP2 SWAP1 PUSH2 0xC4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D0 PUSH2 0x3EC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DD SWAP2 SWAP1 PUSH2 0xB0C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x200 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FB SWAP2 SWAP1 PUSH2 0xBC7 JUMP JUMPDEST PUSH2 0x47E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20D SWAP2 SWAP1 PUSH2 0xC22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x230 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22B SWAP2 SWAP1 PUSH2 0xBC7 JUMP JUMPDEST PUSH2 0x4F5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23D SWAP2 SWAP1 PUSH2 0xC22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x260 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25B SWAP2 SWAP1 PUSH2 0xD1E JUMP JUMPDEST PUSH2 0x518 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26D SWAP2 SWAP1 PUSH2 0xC4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x285 SWAP1 PUSH2 0xD8D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2B1 SWAP1 PUSH2 0xD8D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2FE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2D3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2FE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2E1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x313 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x320 DUP2 DUP6 DUP6 PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x340 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x34D DUP6 DUP3 DUP6 PUSH2 0x770 JUMP JUMPDEST PUSH2 0x358 DUP6 DUP6 DUP6 PUSH2 0x7FC JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x378 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x399 DUP2 DUP6 DUP6 PUSH2 0x38A DUP6 DUP10 PUSH2 0x518 JUMP JUMPDEST PUSH2 0x394 SWAP2 SWAP1 PUSH2 0xDED JUMP JUMPDEST PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x3FB SWAP1 PUSH2 0xD8D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x427 SWAP1 PUSH2 0xD8D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x474 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x449 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x474 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x457 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x489 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x497 DUP3 DUP7 PUSH2 0x518 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x4DC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D3 SWAP1 PUSH2 0xE93 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4E9 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x500 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x50D DUP2 DUP6 DUP6 PUSH2 0x7FC JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x616 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x60D SWAP1 PUSH2 0xF25 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x685 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x67C SWAP1 PUSH2 0xFB7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD PUSH2 0x763 SWAP2 SWAP1 PUSH2 0xC4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x77C DUP5 DUP5 PUSH2 0x518 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x7F6 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x7E8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7DF SWAP1 PUSH2 0x1023 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7F5 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x5A7 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x86B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x862 SWAP1 PUSH2 0x10B5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8DA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8D1 SWAP1 PUSH2 0x1147 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8E5 DUP4 DUP4 DUP4 PUSH2 0xA72 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x96B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x962 SWAP1 PUSH2 0x11D9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0xA59 SWAP2 SWAP1 PUSH2 0xC4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xA6C DUP5 DUP5 DUP5 PUSH2 0xA77 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xAB6 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xA9B JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xADE DUP3 PUSH2 0xA7C JUMP JUMPDEST PUSH2 0xAE8 DUP2 DUP6 PUSH2 0xA87 JUMP JUMPDEST SWAP4 POP PUSH2 0xAF8 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xA98 JUMP JUMPDEST PUSH2 0xB01 DUP2 PUSH2 0xAC2 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xB26 DUP2 DUP5 PUSH2 0xAD3 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB5E DUP3 PUSH2 0xB33 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB6E DUP2 PUSH2 0xB53 JUMP JUMPDEST DUP2 EQ PUSH2 0xB79 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB8B DUP2 PUSH2 0xB65 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBA4 DUP2 PUSH2 0xB91 JUMP JUMPDEST DUP2 EQ PUSH2 0xBAF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xBC1 DUP2 PUSH2 0xB9B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xBDE JUMPI PUSH2 0xBDD PUSH2 0xB2E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xBEC DUP6 DUP3 DUP7 ADD PUSH2 0xB7C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xBFD DUP6 DUP3 DUP7 ADD PUSH2 0xBB2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC1C DUP2 PUSH2 0xC07 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC37 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC13 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xC46 DUP2 PUSH2 0xB91 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC61 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC3D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xC80 JUMPI PUSH2 0xC7F PUSH2 0xB2E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xC8E DUP7 DUP3 DUP8 ADD PUSH2 0xB7C JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xC9F DUP7 DUP3 DUP8 ADD PUSH2 0xB7C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xCB0 DUP7 DUP3 DUP8 ADD PUSH2 0xBB2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCD0 DUP2 PUSH2 0xCBA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xCEB PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xCC7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD07 JUMPI PUSH2 0xD06 PUSH2 0xB2E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD15 DUP5 DUP3 DUP6 ADD PUSH2 0xB7C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD35 JUMPI PUSH2 0xD34 PUSH2 0xB2E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD43 DUP6 DUP3 DUP7 ADD PUSH2 0xB7C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xD54 DUP6 DUP3 DUP7 ADD PUSH2 0xB7C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xDA5 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xDB8 JUMPI PUSH2 0xDB7 PUSH2 0xD5E JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xDF8 DUP3 PUSH2 0xB91 JUMP JUMPDEST SWAP2 POP PUSH2 0xE03 DUP4 PUSH2 0xB91 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xE1B JUMPI PUSH2 0xE1A PUSH2 0xDBE JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x207A65726F000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE7D PUSH1 0x25 DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0xE88 DUP3 PUSH2 0xE21 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xEAC DUP2 PUSH2 0xE70 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF0F PUSH1 0x24 DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0xF1A DUP3 PUSH2 0xEB3 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF3E DUP2 PUSH2 0xF02 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFA1 PUSH1 0x22 DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0xFAC DUP3 PUSH2 0xF45 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xFD0 DUP2 PUSH2 0xF94 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x100D PUSH1 0x1D DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0x1018 DUP3 PUSH2 0xFD7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x103C DUP2 PUSH2 0x1000 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x109F PUSH1 0x25 DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0x10AA DUP3 PUSH2 0x1043 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x10CE DUP2 PUSH2 0x1092 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1131 PUSH1 0x23 DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0x113C DUP3 PUSH2 0x10D5 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1160 DUP2 PUSH2 0x1124 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x616C616E63650000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11C3 PUSH1 0x26 DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0x11CE DUP3 PUSH2 0x1167 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x11F2 DUP2 PUSH2 0x11B6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 REVERT DELEGATECALL PUSH23 0xE2583D8CAF4CDECE2E219DE3186064B0F77078F3E2440D SWAP7 CREATE2 0xAA MULMOD 0xC1 PUSH23 0x64736F6C63430008130033000000000000000000000000 ","sourceMap":"1532:11312:5:-:0;;;1980:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2054:5;2046;:13;;;;;;:::i;:::-;;2079:7;2069;:17;;;;;;:::i;:::-;;1980:113;;1532:11312;;7:75:23;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:117;566:1;563;556:12;580:102;621:6;672:2;668:7;663:2;656:5;652:14;648:28;638:38;;580:102;;;:::o;688:180::-;736:77;733:1;726:88;833:4;830:1;823:15;857:4;854:1;847:15;874:281;957:27;979:4;957:27;:::i;:::-;949:6;945:40;1087:6;1075:10;1072:22;1051:18;1039:10;1036:34;1033:62;1030:88;;;1098:18;;:::i;:::-;1030:88;1138:10;1134:2;1127:22;917:238;874:281;;:::o;1161:129::-;1195:6;1222:20;;:::i;:::-;1212:30;;1251:33;1279:4;1271:6;1251:33;:::i;:::-;1161:129;;;:::o;1296:308::-;1358:4;1448:18;1440:6;1437:30;1434:56;;;1470:18;;:::i;:::-;1434:56;1508:29;1530:6;1508:29;:::i;:::-;1500:37;;1592:4;1586;1582:15;1574:23;;1296:308;;;:::o;1610:246::-;1691:1;1701:113;1715:6;1712:1;1709:13;1701:113;;;1800:1;1795:3;1791:11;1785:18;1781:1;1776:3;1772:11;1765:39;1737:2;1734:1;1730:10;1725:15;;1701:113;;;1848:1;1839:6;1834:3;1830:16;1823:27;1672:184;1610:246;;;:::o;1862:434::-;1951:5;1976:66;1992:49;2034:6;1992:49;:::i;:::-;1976:66;:::i;:::-;1967:75;;2065:6;2058:5;2051:21;2103:4;2096:5;2092:16;2141:3;2132:6;2127:3;2123:16;2120:25;2117:112;;;2148:79;;:::i;:::-;2117:112;2238:52;2283:6;2278:3;2273;2238:52;:::i;:::-;1957:339;1862:434;;;;;:::o;2316:355::-;2383:5;2432:3;2425:4;2417:6;2413:17;2409:27;2399:122;;2440:79;;:::i;:::-;2399:122;2550:6;2544:13;2575:90;2661:3;2653:6;2646:4;2638:6;2634:17;2575:90;:::i;:::-;2566:99;;2389:282;2316:355;;;;:::o;2677:853::-;2776:6;2784;2833:2;2821:9;2812:7;2808:23;2804:32;2801:119;;;2839:79;;:::i;:::-;2801:119;2980:1;2969:9;2965:17;2959:24;3010:18;3002:6;2999:30;2996:117;;;3032:79;;:::i;:::-;2996:117;3137:74;3203:7;3194:6;3183:9;3179:22;3137:74;:::i;:::-;3127:84;;2930:291;3281:2;3270:9;3266:18;3260:25;3312:18;3304:6;3301:30;3298:117;;;3334:79;;:::i;:::-;3298:117;3439:74;3505:7;3496:6;3485:9;3481:22;3439:74;:::i;:::-;3429:84;;3231:292;2677:853;;;;;:::o;3536:99::-;3588:6;3622:5;3616:12;3606:22;;3536:99;;;:::o;3641:180::-;3689:77;3686:1;3679:88;3786:4;3783:1;3776:15;3810:4;3807:1;3800:15;3827:320;3871:6;3908:1;3902:4;3898:12;3888:22;;3955:1;3949:4;3945:12;3976:18;3966:81;;4032:4;4024:6;4020:17;4010:27;;3966:81;4094:2;4086:6;4083:14;4063:18;4060:38;4057:84;;4113:18;;:::i;:::-;4057:84;3878:269;3827:320;;;:::o;4153:141::-;4202:4;4225:3;4217:11;;4248:3;4245:1;4238:14;4282:4;4279:1;4269:18;4261:26;;4153:141;;;:::o;4300:93::-;4337:6;4384:2;4379;4372:5;4368:14;4364:23;4354:33;;4300:93;;;:::o;4399:107::-;4443:8;4493:5;4487:4;4483:16;4462:37;;4399:107;;;;:::o;4512:393::-;4581:6;4631:1;4619:10;4615:18;4654:97;4684:66;4673:9;4654:97;:::i;:::-;4772:39;4802:8;4791:9;4772:39;:::i;:::-;4760:51;;4844:4;4840:9;4833:5;4829:21;4820:30;;4893:4;4883:8;4879:19;4872:5;4869:30;4859:40;;4588:317;;4512:393;;;;;:::o;4911:77::-;4948:7;4977:5;4966:16;;4911:77;;;:::o;4994:60::-;5022:3;5043:5;5036:12;;4994:60;;;:::o;5060:142::-;5110:9;5143:53;5161:34;5170:24;5188:5;5170:24;:::i;:::-;5161:34;:::i;:::-;5143:53;:::i;:::-;5130:66;;5060:142;;;:::o;5208:75::-;5251:3;5272:5;5265:12;;5208:75;;;:::o;5289:269::-;5399:39;5430:7;5399:39;:::i;:::-;5460:91;5509:41;5533:16;5509:41;:::i;:::-;5501:6;5494:4;5488:11;5460:91;:::i;:::-;5454:4;5447:105;5365:193;5289:269;;;:::o;5564:73::-;5609:3;5564:73;:::o;5643:189::-;5720:32;;:::i;:::-;5761:65;5819:6;5811;5805:4;5761:65;:::i;:::-;5696:136;5643:189;;:::o;5838:186::-;5898:120;5915:3;5908:5;5905:14;5898:120;;;5969:39;6006:1;5999:5;5969:39;:::i;:::-;5942:1;5935:5;5931:13;5922:22;;5898:120;;;5838:186;;:::o;6030:543::-;6131:2;6126:3;6123:11;6120:446;;;6165:38;6197:5;6165:38;:::i;:::-;6249:29;6267:10;6249:29;:::i;:::-;6239:8;6235:44;6432:2;6420:10;6417:18;6414:49;;;6453:8;6438:23;;6414:49;6476:80;6532:22;6550:3;6532:22;:::i;:::-;6522:8;6518:37;6505:11;6476:80;:::i;:::-;6135:431;;6120:446;6030:543;;;:::o;6579:117::-;6633:8;6683:5;6677:4;6673:16;6652:37;;6579:117;;;;:::o;6702:169::-;6746:6;6779:51;6827:1;6823:6;6815:5;6812:1;6808:13;6779:51;:::i;:::-;6775:56;6860:4;6854;6850:15;6840:25;;6753:118;6702:169;;;;:::o;6876:295::-;6952:4;7098:29;7123:3;7117:4;7098:29;:::i;:::-;7090:37;;7160:3;7157:1;7153:11;7147:4;7144:21;7136:29;;6876:295;;;;:::o;7176:1395::-;7293:37;7326:3;7293:37;:::i;:::-;7395:18;7387:6;7384:30;7381:56;;;7417:18;;:::i;:::-;7381:56;7461:38;7493:4;7487:11;7461:38;:::i;:::-;7546:67;7606:6;7598;7592:4;7546:67;:::i;:::-;7640:1;7664:4;7651:17;;7696:2;7688:6;7685:14;7713:1;7708:618;;;;8370:1;8387:6;8384:77;;;8436:9;8431:3;8427:19;8421:26;8412:35;;8384:77;8487:67;8547:6;8540:5;8487:67;:::i;:::-;8481:4;8474:81;8343:222;7678:887;;7708:618;7760:4;7756:9;7748:6;7744:22;7794:37;7826:4;7794:37;:::i;:::-;7853:1;7867:208;7881:7;7878:1;7875:14;7867:208;;;7960:9;7955:3;7951:19;7945:26;7937:6;7930:42;8011:1;8003:6;7999:14;7989:24;;8058:2;8047:9;8043:18;8030:31;;7904:4;7901:1;7897:12;7892:17;;7867:208;;;8103:6;8094:7;8091:19;8088:179;;;8161:9;8156:3;8152:19;8146:26;8204:48;8246:4;8238:6;8234:17;8223:9;8204:48;:::i;:::-;8196:6;8189:64;8111:156;8088:179;8313:1;8309;8301:6;8297:14;8293:22;8287:4;8280:36;7715:611;;;7678:887;;7268:1303;;;7176:1395;;:::o;1532:11312:5:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_afterTokenTransfer_825":{"entryPoint":2679,"id":825,"parameterSlots":3,"returnSlots":0},"@_approve_760":{"entryPoint":1447,"id":760,"parameterSlots":3,"returnSlots":0},"@_beforeTokenTransfer_814":{"entryPoint":2674,"id":814,"parameterSlots":3,"returnSlots":0},"@_msgSender_1886":{"entryPoint":1439,"id":1886,"parameterSlots":0,"returnSlots":1},"@_spendAllowance_803":{"entryPoint":1904,"id":803,"parameterSlots":3,"returnSlots":0},"@_transfer_586":{"entryPoint":2044,"id":586,"parameterSlots":3,"returnSlots":0},"@allowance_381":{"entryPoint":1304,"id":381,"parameterSlots":2,"returnSlots":1},"@approve_406":{"entryPoint":776,"id":406,"parameterSlots":2,"returnSlots":1},"@balanceOf_338":{"entryPoint":932,"id":338,"parameterSlots":1,"returnSlots":1},"@decimals_314":{"entryPoint":868,"id":314,"parameterSlots":0,"returnSlots":1},"@decreaseAllowance_509":{"entryPoint":1150,"id":509,"parameterSlots":2,"returnSlots":1},"@increaseAllowance_468":{"entryPoint":877,"id":468,"parameterSlots":2,"returnSlots":1},"@name_294":{"entryPoint":630,"id":294,"parameterSlots":0,"returnSlots":1},"@symbol_304":{"entryPoint":1004,"id":304,"parameterSlots":0,"returnSlots":1},"@totalSupply_324":{"entryPoint":811,"id":324,"parameterSlots":0,"returnSlots":1},"@transferFrom_439":{"entryPoint":821,"id":439,"parameterSlots":3,"returnSlots":1},"@transfer_363":{"entryPoint":1269,"id":363,"parameterSlots":2,"returnSlots":1},"abi_decode_t_address":{"entryPoint":2940,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":2994,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":3313,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":3358,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":3175,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":3015,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":3091,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":2771,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack":{"entryPoint":4388,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack":{"entryPoint":3988,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack":{"entryPoint":4096,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack":{"entryPoint":4534,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack":{"entryPoint":4242,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack":{"entryPoint":3842,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack":{"entryPoint":3696,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":3133,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint8_to_t_uint8_fromStack":{"entryPoint":3271,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":3106,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":2828,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4423,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4023,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4131,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4569,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4277,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3877,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3731,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":3148,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":3286,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":2684,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":2695,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":3565,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":2899,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":3079,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":2867,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":2961,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint8":{"entryPoint":3258,"id":null,"parameterSlots":1,"returnSlots":1},"copy_memory_to_memory_with_cleanup":{"entryPoint":2712,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":3469,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":3518,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":3422,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":2862,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":2754,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f":{"entryPoint":4309,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029":{"entryPoint":3909,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe":{"entryPoint":4055,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6":{"entryPoint":4455,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea":{"entryPoint":4163,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208":{"entryPoint":3763,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8":{"entryPoint":3617,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":2917,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":2971,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:13699:23","statements":[{"body":{"nodeType":"YulBlock","src":"66:40:23","statements":[{"nodeType":"YulAssignment","src":"77:22:23","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"93:5:23"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"87:5:23"},"nodeType":"YulFunctionCall","src":"87:12:23"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"77:6:23"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"49:5:23","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"59:6:23","type":""}],"src":"7:99:23"},{"body":{"nodeType":"YulBlock","src":"208:73:23","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"225:3:23"},{"name":"length","nodeType":"YulIdentifier","src":"230:6:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"218:6:23"},"nodeType":"YulFunctionCall","src":"218:19:23"},"nodeType":"YulExpressionStatement","src":"218:19:23"},{"nodeType":"YulAssignment","src":"246:29:23","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"265:3:23"},{"kind":"number","nodeType":"YulLiteral","src":"270:4:23","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"261:3:23"},"nodeType":"YulFunctionCall","src":"261:14:23"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"246:11:23"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"180:3:23","type":""},{"name":"length","nodeType":"YulTypedName","src":"185:6:23","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"196:11:23","type":""}],"src":"112:169:23"},{"body":{"nodeType":"YulBlock","src":"349:184:23","statements":[{"nodeType":"YulVariableDeclaration","src":"359:10:23","value":{"kind":"number","nodeType":"YulLiteral","src":"368:1:23","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"363:1:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"428:63:23","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"453:3:23"},{"name":"i","nodeType":"YulIdentifier","src":"458:1:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"449:3:23"},"nodeType":"YulFunctionCall","src":"449:11:23"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"472:3:23"},{"name":"i","nodeType":"YulIdentifier","src":"477:1:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"468:3:23"},"nodeType":"YulFunctionCall","src":"468:11:23"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"462:5:23"},"nodeType":"YulFunctionCall","src":"462:18:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"442:6:23"},"nodeType":"YulFunctionCall","src":"442:39:23"},"nodeType":"YulExpressionStatement","src":"442:39:23"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"389:1:23"},{"name":"length","nodeType":"YulIdentifier","src":"392:6:23"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"386:2:23"},"nodeType":"YulFunctionCall","src":"386:13:23"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"400:19:23","statements":[{"nodeType":"YulAssignment","src":"402:15:23","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"411:1:23"},{"kind":"number","nodeType":"YulLiteral","src":"414:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"407:3:23"},"nodeType":"YulFunctionCall","src":"407:10:23"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"402:1:23"}]}]},"pre":{"nodeType":"YulBlock","src":"382:3:23","statements":[]},"src":"378:113:23"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"511:3:23"},{"name":"length","nodeType":"YulIdentifier","src":"516:6:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"507:3:23"},"nodeType":"YulFunctionCall","src":"507:16:23"},{"kind":"number","nodeType":"YulLiteral","src":"525:1:23","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"500:6:23"},"nodeType":"YulFunctionCall","src":"500:27:23"},"nodeType":"YulExpressionStatement","src":"500:27:23"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"331:3:23","type":""},{"name":"dst","nodeType":"YulTypedName","src":"336:3:23","type":""},{"name":"length","nodeType":"YulTypedName","src":"341:6:23","type":""}],"src":"287:246:23"},{"body":{"nodeType":"YulBlock","src":"587:54:23","statements":[{"nodeType":"YulAssignment","src":"597:38:23","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"615:5:23"},{"kind":"number","nodeType":"YulLiteral","src":"622:2:23","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"611:3:23"},"nodeType":"YulFunctionCall","src":"611:14:23"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"631:2:23","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"627:3:23"},"nodeType":"YulFunctionCall","src":"627:7:23"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"607:3:23"},"nodeType":"YulFunctionCall","src":"607:28:23"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"597:6:23"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"570:5:23","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"580:6:23","type":""}],"src":"539:102:23"},{"body":{"nodeType":"YulBlock","src":"739:285:23","statements":[{"nodeType":"YulVariableDeclaration","src":"749:53:23","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"796:5:23"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"763:32:23"},"nodeType":"YulFunctionCall","src":"763:39:23"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"753:6:23","type":""}]},{"nodeType":"YulAssignment","src":"811:78:23","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"877:3:23"},{"name":"length","nodeType":"YulIdentifier","src":"882:6:23"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"818:58:23"},"nodeType":"YulFunctionCall","src":"818:71:23"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"811:3:23"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"937:5:23"},{"kind":"number","nodeType":"YulLiteral","src":"944:4:23","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"933:3:23"},"nodeType":"YulFunctionCall","src":"933:16:23"},{"name":"pos","nodeType":"YulIdentifier","src":"951:3:23"},{"name":"length","nodeType":"YulIdentifier","src":"956:6:23"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"898:34:23"},"nodeType":"YulFunctionCall","src":"898:65:23"},"nodeType":"YulExpressionStatement","src":"898:65:23"},{"nodeType":"YulAssignment","src":"972:46:23","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"983:3:23"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1010:6:23"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"988:21:23"},"nodeType":"YulFunctionCall","src":"988:29:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"979:3:23"},"nodeType":"YulFunctionCall","src":"979:39:23"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"972:3:23"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"720:5:23","type":""},{"name":"pos","nodeType":"YulTypedName","src":"727:3:23","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"735:3:23","type":""}],"src":"647:377:23"},{"body":{"nodeType":"YulBlock","src":"1148:195:23","statements":[{"nodeType":"YulAssignment","src":"1158:26:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1170:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"1181:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1166:3:23"},"nodeType":"YulFunctionCall","src":"1166:18:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1158:4:23"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1205:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"1216:1:23","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1201:3:23"},"nodeType":"YulFunctionCall","src":"1201:17:23"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"1224:4:23"},{"name":"headStart","nodeType":"YulIdentifier","src":"1230:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1220:3:23"},"nodeType":"YulFunctionCall","src":"1220:20:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1194:6:23"},"nodeType":"YulFunctionCall","src":"1194:47:23"},"nodeType":"YulExpressionStatement","src":"1194:47:23"},{"nodeType":"YulAssignment","src":"1250:86:23","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1322:6:23"},{"name":"tail","nodeType":"YulIdentifier","src":"1331:4:23"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"1258:63:23"},"nodeType":"YulFunctionCall","src":"1258:78:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1250:4:23"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1120:9:23","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1132:6:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1143:4:23","type":""}],"src":"1030:313:23"},{"body":{"nodeType":"YulBlock","src":"1389:35:23","statements":[{"nodeType":"YulAssignment","src":"1399:19:23","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1415:2:23","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1409:5:23"},"nodeType":"YulFunctionCall","src":"1409:9:23"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1399:6:23"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1382:6:23","type":""}],"src":"1349:75:23"},{"body":{"nodeType":"YulBlock","src":"1519:28:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1536:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1539:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1529:6:23"},"nodeType":"YulFunctionCall","src":"1529:12:23"},"nodeType":"YulExpressionStatement","src":"1529:12:23"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"1430:117:23"},{"body":{"nodeType":"YulBlock","src":"1642:28:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1659:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1662:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1652:6:23"},"nodeType":"YulFunctionCall","src":"1652:12:23"},"nodeType":"YulExpressionStatement","src":"1652:12:23"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"1553:117:23"},{"body":{"nodeType":"YulBlock","src":"1721:81:23","statements":[{"nodeType":"YulAssignment","src":"1731:65:23","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1746:5:23"},{"kind":"number","nodeType":"YulLiteral","src":"1753:42:23","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1742:3:23"},"nodeType":"YulFunctionCall","src":"1742:54:23"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1731:7:23"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1703:5:23","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1713:7:23","type":""}],"src":"1676:126:23"},{"body":{"nodeType":"YulBlock","src":"1853:51:23","statements":[{"nodeType":"YulAssignment","src":"1863:35:23","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1892:5:23"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"1874:17:23"},"nodeType":"YulFunctionCall","src":"1874:24:23"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1863:7:23"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1835:5:23","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1845:7:23","type":""}],"src":"1808:96:23"},{"body":{"nodeType":"YulBlock","src":"1953:79:23","statements":[{"body":{"nodeType":"YulBlock","src":"2010:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2019:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2022:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2012:6:23"},"nodeType":"YulFunctionCall","src":"2012:12:23"},"nodeType":"YulExpressionStatement","src":"2012:12:23"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1976:5:23"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2001:5:23"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"1983:17:23"},"nodeType":"YulFunctionCall","src":"1983:24:23"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1973:2:23"},"nodeType":"YulFunctionCall","src":"1973:35:23"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1966:6:23"},"nodeType":"YulFunctionCall","src":"1966:43:23"},"nodeType":"YulIf","src":"1963:63:23"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1946:5:23","type":""}],"src":"1910:122:23"},{"body":{"nodeType":"YulBlock","src":"2090:87:23","statements":[{"nodeType":"YulAssignment","src":"2100:29:23","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2122:6:23"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2109:12:23"},"nodeType":"YulFunctionCall","src":"2109:20:23"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2100:5:23"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2165:5:23"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"2138:26:23"},"nodeType":"YulFunctionCall","src":"2138:33:23"},"nodeType":"YulExpressionStatement","src":"2138:33:23"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2068:6:23","type":""},{"name":"end","nodeType":"YulTypedName","src":"2076:3:23","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2084:5:23","type":""}],"src":"2038:139:23"},{"body":{"nodeType":"YulBlock","src":"2228:32:23","statements":[{"nodeType":"YulAssignment","src":"2238:16:23","value":{"name":"value","nodeType":"YulIdentifier","src":"2249:5:23"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2238:7:23"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2210:5:23","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2220:7:23","type":""}],"src":"2183:77:23"},{"body":{"nodeType":"YulBlock","src":"2309:79:23","statements":[{"body":{"nodeType":"YulBlock","src":"2366:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2375:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2378:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2368:6:23"},"nodeType":"YulFunctionCall","src":"2368:12:23"},"nodeType":"YulExpressionStatement","src":"2368:12:23"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2332:5:23"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2357:5:23"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"2339:17:23"},"nodeType":"YulFunctionCall","src":"2339:24:23"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2329:2:23"},"nodeType":"YulFunctionCall","src":"2329:35:23"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2322:6:23"},"nodeType":"YulFunctionCall","src":"2322:43:23"},"nodeType":"YulIf","src":"2319:63:23"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2302:5:23","type":""}],"src":"2266:122:23"},{"body":{"nodeType":"YulBlock","src":"2446:87:23","statements":[{"nodeType":"YulAssignment","src":"2456:29:23","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2478:6:23"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2465:12:23"},"nodeType":"YulFunctionCall","src":"2465:20:23"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2456:5:23"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2521:5:23"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"2494:26:23"},"nodeType":"YulFunctionCall","src":"2494:33:23"},"nodeType":"YulExpressionStatement","src":"2494:33:23"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2424:6:23","type":""},{"name":"end","nodeType":"YulTypedName","src":"2432:3:23","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2440:5:23","type":""}],"src":"2394:139:23"},{"body":{"nodeType":"YulBlock","src":"2622:391:23","statements":[{"body":{"nodeType":"YulBlock","src":"2668:83:23","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2670:77:23"},"nodeType":"YulFunctionCall","src":"2670:79:23"},"nodeType":"YulExpressionStatement","src":"2670:79:23"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2643:7:23"},{"name":"headStart","nodeType":"YulIdentifier","src":"2652:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2639:3:23"},"nodeType":"YulFunctionCall","src":"2639:23:23"},{"kind":"number","nodeType":"YulLiteral","src":"2664:2:23","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2635:3:23"},"nodeType":"YulFunctionCall","src":"2635:32:23"},"nodeType":"YulIf","src":"2632:119:23"},{"nodeType":"YulBlock","src":"2761:117:23","statements":[{"nodeType":"YulVariableDeclaration","src":"2776:15:23","value":{"kind":"number","nodeType":"YulLiteral","src":"2790:1:23","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2780:6:23","type":""}]},{"nodeType":"YulAssignment","src":"2805:63:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2840:9:23"},{"name":"offset","nodeType":"YulIdentifier","src":"2851:6:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2836:3:23"},"nodeType":"YulFunctionCall","src":"2836:22:23"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2860:7:23"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"2815:20:23"},"nodeType":"YulFunctionCall","src":"2815:53:23"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2805:6:23"}]}]},{"nodeType":"YulBlock","src":"2888:118:23","statements":[{"nodeType":"YulVariableDeclaration","src":"2903:16:23","value":{"kind":"number","nodeType":"YulLiteral","src":"2917:2:23","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2907:6:23","type":""}]},{"nodeType":"YulAssignment","src":"2933:63:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2968:9:23"},{"name":"offset","nodeType":"YulIdentifier","src":"2979:6:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2964:3:23"},"nodeType":"YulFunctionCall","src":"2964:22:23"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2988:7:23"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"2943:20:23"},"nodeType":"YulFunctionCall","src":"2943:53:23"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2933:6:23"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2584:9:23","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2595:7:23","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2607:6:23","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2615:6:23","type":""}],"src":"2539:474:23"},{"body":{"nodeType":"YulBlock","src":"3061:48:23","statements":[{"nodeType":"YulAssignment","src":"3071:32:23","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3096:5:23"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3089:6:23"},"nodeType":"YulFunctionCall","src":"3089:13:23"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3082:6:23"},"nodeType":"YulFunctionCall","src":"3082:21:23"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3071:7:23"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3043:5:23","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3053:7:23","type":""}],"src":"3019:90:23"},{"body":{"nodeType":"YulBlock","src":"3174:50:23","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3191:3:23"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3211:5:23"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"3196:14:23"},"nodeType":"YulFunctionCall","src":"3196:21:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3184:6:23"},"nodeType":"YulFunctionCall","src":"3184:34:23"},"nodeType":"YulExpressionStatement","src":"3184:34:23"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3162:5:23","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3169:3:23","type":""}],"src":"3115:109:23"},{"body":{"nodeType":"YulBlock","src":"3322:118:23","statements":[{"nodeType":"YulAssignment","src":"3332:26:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3344:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"3355:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3340:3:23"},"nodeType":"YulFunctionCall","src":"3340:18:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3332:4:23"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3406:6:23"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3419:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"3430:1:23","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3415:3:23"},"nodeType":"YulFunctionCall","src":"3415:17:23"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"3368:37:23"},"nodeType":"YulFunctionCall","src":"3368:65:23"},"nodeType":"YulExpressionStatement","src":"3368:65:23"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3294:9:23","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3306:6:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3317:4:23","type":""}],"src":"3230:210:23"},{"body":{"nodeType":"YulBlock","src":"3511:53:23","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3528:3:23"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3551:5:23"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"3533:17:23"},"nodeType":"YulFunctionCall","src":"3533:24:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3521:6:23"},"nodeType":"YulFunctionCall","src":"3521:37:23"},"nodeType":"YulExpressionStatement","src":"3521:37:23"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3499:5:23","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3506:3:23","type":""}],"src":"3446:118:23"},{"body":{"nodeType":"YulBlock","src":"3668:124:23","statements":[{"nodeType":"YulAssignment","src":"3678:26:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3690:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"3701:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3686:3:23"},"nodeType":"YulFunctionCall","src":"3686:18:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3678:4:23"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3758:6:23"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3771:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"3782:1:23","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3767:3:23"},"nodeType":"YulFunctionCall","src":"3767:17:23"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"3714:43:23"},"nodeType":"YulFunctionCall","src":"3714:71:23"},"nodeType":"YulExpressionStatement","src":"3714:71:23"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3640:9:23","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3652:6:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3663:4:23","type":""}],"src":"3570:222:23"},{"body":{"nodeType":"YulBlock","src":"3898:519:23","statements":[{"body":{"nodeType":"YulBlock","src":"3944:83:23","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3946:77:23"},"nodeType":"YulFunctionCall","src":"3946:79:23"},"nodeType":"YulExpressionStatement","src":"3946:79:23"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3919:7:23"},{"name":"headStart","nodeType":"YulIdentifier","src":"3928:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3915:3:23"},"nodeType":"YulFunctionCall","src":"3915:23:23"},{"kind":"number","nodeType":"YulLiteral","src":"3940:2:23","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3911:3:23"},"nodeType":"YulFunctionCall","src":"3911:32:23"},"nodeType":"YulIf","src":"3908:119:23"},{"nodeType":"YulBlock","src":"4037:117:23","statements":[{"nodeType":"YulVariableDeclaration","src":"4052:15:23","value":{"kind":"number","nodeType":"YulLiteral","src":"4066:1:23","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4056:6:23","type":""}]},{"nodeType":"YulAssignment","src":"4081:63:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4116:9:23"},{"name":"offset","nodeType":"YulIdentifier","src":"4127:6:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4112:3:23"},"nodeType":"YulFunctionCall","src":"4112:22:23"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4136:7:23"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4091:20:23"},"nodeType":"YulFunctionCall","src":"4091:53:23"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4081:6:23"}]}]},{"nodeType":"YulBlock","src":"4164:118:23","statements":[{"nodeType":"YulVariableDeclaration","src":"4179:16:23","value":{"kind":"number","nodeType":"YulLiteral","src":"4193:2:23","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4183:6:23","type":""}]},{"nodeType":"YulAssignment","src":"4209:63:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4244:9:23"},{"name":"offset","nodeType":"YulIdentifier","src":"4255:6:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4240:3:23"},"nodeType":"YulFunctionCall","src":"4240:22:23"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4264:7:23"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4219:20:23"},"nodeType":"YulFunctionCall","src":"4219:53:23"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4209:6:23"}]}]},{"nodeType":"YulBlock","src":"4292:118:23","statements":[{"nodeType":"YulVariableDeclaration","src":"4307:16:23","value":{"kind":"number","nodeType":"YulLiteral","src":"4321:2:23","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4311:6:23","type":""}]},{"nodeType":"YulAssignment","src":"4337:63:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4372:9:23"},{"name":"offset","nodeType":"YulIdentifier","src":"4383:6:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4368:3:23"},"nodeType":"YulFunctionCall","src":"4368:22:23"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4392:7:23"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"4347:20:23"},"nodeType":"YulFunctionCall","src":"4347:53:23"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"4337:6:23"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3852:9:23","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3863:7:23","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3875:6:23","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3883:6:23","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3891:6:23","type":""}],"src":"3798:619:23"},{"body":{"nodeType":"YulBlock","src":"4466:43:23","statements":[{"nodeType":"YulAssignment","src":"4476:27:23","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4491:5:23"},{"kind":"number","nodeType":"YulLiteral","src":"4498:4:23","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4487:3:23"},"nodeType":"YulFunctionCall","src":"4487:16:23"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"4476:7:23"}]}]},"name":"cleanup_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4448:5:23","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"4458:7:23","type":""}],"src":"4423:86:23"},{"body":{"nodeType":"YulBlock","src":"4576:51:23","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4593:3:23"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4614:5:23"}],"functionName":{"name":"cleanup_t_uint8","nodeType":"YulIdentifier","src":"4598:15:23"},"nodeType":"YulFunctionCall","src":"4598:22:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4586:6:23"},"nodeType":"YulFunctionCall","src":"4586:35:23"},"nodeType":"YulExpressionStatement","src":"4586:35:23"}]},"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4564:5:23","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4571:3:23","type":""}],"src":"4515:112:23"},{"body":{"nodeType":"YulBlock","src":"4727:120:23","statements":[{"nodeType":"YulAssignment","src":"4737:26:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4749:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"4760:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4745:3:23"},"nodeType":"YulFunctionCall","src":"4745:18:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4737:4:23"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4813:6:23"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4826:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"4837:1:23","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4822:3:23"},"nodeType":"YulFunctionCall","src":"4822:17:23"}],"functionName":{"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulIdentifier","src":"4773:39:23"},"nodeType":"YulFunctionCall","src":"4773:67:23"},"nodeType":"YulExpressionStatement","src":"4773:67:23"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4699:9:23","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4711:6:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4722:4:23","type":""}],"src":"4633:214:23"},{"body":{"nodeType":"YulBlock","src":"4919:263:23","statements":[{"body":{"nodeType":"YulBlock","src":"4965:83:23","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"4967:77:23"},"nodeType":"YulFunctionCall","src":"4967:79:23"},"nodeType":"YulExpressionStatement","src":"4967:79:23"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4940:7:23"},{"name":"headStart","nodeType":"YulIdentifier","src":"4949:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4936:3:23"},"nodeType":"YulFunctionCall","src":"4936:23:23"},{"kind":"number","nodeType":"YulLiteral","src":"4961:2:23","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4932:3:23"},"nodeType":"YulFunctionCall","src":"4932:32:23"},"nodeType":"YulIf","src":"4929:119:23"},{"nodeType":"YulBlock","src":"5058:117:23","statements":[{"nodeType":"YulVariableDeclaration","src":"5073:15:23","value":{"kind":"number","nodeType":"YulLiteral","src":"5087:1:23","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5077:6:23","type":""}]},{"nodeType":"YulAssignment","src":"5102:63:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5137:9:23"},{"name":"offset","nodeType":"YulIdentifier","src":"5148:6:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5133:3:23"},"nodeType":"YulFunctionCall","src":"5133:22:23"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5157:7:23"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5112:20:23"},"nodeType":"YulFunctionCall","src":"5112:53:23"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5102:6:23"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4889:9:23","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4900:7:23","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4912:6:23","type":""}],"src":"4853:329:23"},{"body":{"nodeType":"YulBlock","src":"5271:391:23","statements":[{"body":{"nodeType":"YulBlock","src":"5317:83:23","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5319:77:23"},"nodeType":"YulFunctionCall","src":"5319:79:23"},"nodeType":"YulExpressionStatement","src":"5319:79:23"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5292:7:23"},{"name":"headStart","nodeType":"YulIdentifier","src":"5301:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5288:3:23"},"nodeType":"YulFunctionCall","src":"5288:23:23"},{"kind":"number","nodeType":"YulLiteral","src":"5313:2:23","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5284:3:23"},"nodeType":"YulFunctionCall","src":"5284:32:23"},"nodeType":"YulIf","src":"5281:119:23"},{"nodeType":"YulBlock","src":"5410:117:23","statements":[{"nodeType":"YulVariableDeclaration","src":"5425:15:23","value":{"kind":"number","nodeType":"YulLiteral","src":"5439:1:23","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5429:6:23","type":""}]},{"nodeType":"YulAssignment","src":"5454:63:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5489:9:23"},{"name":"offset","nodeType":"YulIdentifier","src":"5500:6:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5485:3:23"},"nodeType":"YulFunctionCall","src":"5485:22:23"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5509:7:23"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5464:20:23"},"nodeType":"YulFunctionCall","src":"5464:53:23"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5454:6:23"}]}]},{"nodeType":"YulBlock","src":"5537:118:23","statements":[{"nodeType":"YulVariableDeclaration","src":"5552:16:23","value":{"kind":"number","nodeType":"YulLiteral","src":"5566:2:23","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5556:6:23","type":""}]},{"nodeType":"YulAssignment","src":"5582:63:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5617:9:23"},{"name":"offset","nodeType":"YulIdentifier","src":"5628:6:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5613:3:23"},"nodeType":"YulFunctionCall","src":"5613:22:23"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5637:7:23"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5592:20:23"},"nodeType":"YulFunctionCall","src":"5592:53:23"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"5582:6:23"}]}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5233:9:23","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5244:7:23","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5256:6:23","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5264:6:23","type":""}],"src":"5188:474:23"},{"body":{"nodeType":"YulBlock","src":"5696:152:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5713:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5716:77:23","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5706:6:23"},"nodeType":"YulFunctionCall","src":"5706:88:23"},"nodeType":"YulExpressionStatement","src":"5706:88:23"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5810:1:23","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"5813:4:23","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5803:6:23"},"nodeType":"YulFunctionCall","src":"5803:15:23"},"nodeType":"YulExpressionStatement","src":"5803:15:23"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5834:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5837:4:23","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5827:6:23"},"nodeType":"YulFunctionCall","src":"5827:15:23"},"nodeType":"YulExpressionStatement","src":"5827:15:23"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"5668:180:23"},{"body":{"nodeType":"YulBlock","src":"5905:269:23","statements":[{"nodeType":"YulAssignment","src":"5915:22:23","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"5929:4:23"},{"kind":"number","nodeType":"YulLiteral","src":"5935:1:23","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"5925:3:23"},"nodeType":"YulFunctionCall","src":"5925:12:23"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"5915:6:23"}]},{"nodeType":"YulVariableDeclaration","src":"5946:38:23","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"5976:4:23"},{"kind":"number","nodeType":"YulLiteral","src":"5982:1:23","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5972:3:23"},"nodeType":"YulFunctionCall","src":"5972:12:23"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"5950:18:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"6023:51:23","statements":[{"nodeType":"YulAssignment","src":"6037:27:23","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6051:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"6059:4:23","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6047:3:23"},"nodeType":"YulFunctionCall","src":"6047:17:23"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"6037:6:23"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"6003:18:23"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5996:6:23"},"nodeType":"YulFunctionCall","src":"5996:26:23"},"nodeType":"YulIf","src":"5993:81:23"},{"body":{"nodeType":"YulBlock","src":"6126:42:23","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"6140:16:23"},"nodeType":"YulFunctionCall","src":"6140:18:23"},"nodeType":"YulExpressionStatement","src":"6140:18:23"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"6090:18:23"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6113:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"6121:2:23","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6110:2:23"},"nodeType":"YulFunctionCall","src":"6110:14:23"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"6087:2:23"},"nodeType":"YulFunctionCall","src":"6087:38:23"},"nodeType":"YulIf","src":"6084:84:23"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"5889:4:23","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"5898:6:23","type":""}],"src":"5854:320:23"},{"body":{"nodeType":"YulBlock","src":"6208:152:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6225:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6228:77:23","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6218:6:23"},"nodeType":"YulFunctionCall","src":"6218:88:23"},"nodeType":"YulExpressionStatement","src":"6218:88:23"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6322:1:23","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"6325:4:23","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6315:6:23"},"nodeType":"YulFunctionCall","src":"6315:15:23"},"nodeType":"YulExpressionStatement","src":"6315:15:23"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6346:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6349:4:23","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6339:6:23"},"nodeType":"YulFunctionCall","src":"6339:15:23"},"nodeType":"YulExpressionStatement","src":"6339:15:23"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"6180:180:23"},{"body":{"nodeType":"YulBlock","src":"6410:147:23","statements":[{"nodeType":"YulAssignment","src":"6420:25:23","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6443:1:23"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"6425:17:23"},"nodeType":"YulFunctionCall","src":"6425:20:23"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"6420:1:23"}]},{"nodeType":"YulAssignment","src":"6454:25:23","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"6477:1:23"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"6459:17:23"},"nodeType":"YulFunctionCall","src":"6459:20:23"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"6454:1:23"}]},{"nodeType":"YulAssignment","src":"6488:16:23","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6499:1:23"},{"name":"y","nodeType":"YulIdentifier","src":"6502:1:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6495:3:23"},"nodeType":"YulFunctionCall","src":"6495:9:23"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"6488:3:23"}]},{"body":{"nodeType":"YulBlock","src":"6528:22:23","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"6530:16:23"},"nodeType":"YulFunctionCall","src":"6530:18:23"},"nodeType":"YulExpressionStatement","src":"6530:18:23"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6520:1:23"},{"name":"sum","nodeType":"YulIdentifier","src":"6523:3:23"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6517:2:23"},"nodeType":"YulFunctionCall","src":"6517:10:23"},"nodeType":"YulIf","src":"6514:36:23"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"6397:1:23","type":""},{"name":"y","nodeType":"YulTypedName","src":"6400:1:23","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"6406:3:23","type":""}],"src":"6366:191:23"},{"body":{"nodeType":"YulBlock","src":"6669:118:23","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"6691:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"6699:1:23","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6687:3:23"},"nodeType":"YulFunctionCall","src":"6687:14:23"},{"hexValue":"45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77","kind":"string","nodeType":"YulLiteral","src":"6703:34:23","type":"","value":"ERC20: decreased allowance below"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6680:6:23"},"nodeType":"YulFunctionCall","src":"6680:58:23"},"nodeType":"YulExpressionStatement","src":"6680:58:23"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"6759:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"6767:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6755:3:23"},"nodeType":"YulFunctionCall","src":"6755:15:23"},{"hexValue":"207a65726f","kind":"string","nodeType":"YulLiteral","src":"6772:7:23","type":"","value":" zero"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6748:6:23"},"nodeType":"YulFunctionCall","src":"6748:32:23"},"nodeType":"YulExpressionStatement","src":"6748:32:23"}]},"name":"store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"6661:6:23","type":""}],"src":"6563:224:23"},{"body":{"nodeType":"YulBlock","src":"6939:220:23","statements":[{"nodeType":"YulAssignment","src":"6949:74:23","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7015:3:23"},{"kind":"number","nodeType":"YulLiteral","src":"7020:2:23","type":"","value":"37"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"6956:58:23"},"nodeType":"YulFunctionCall","src":"6956:67:23"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"6949:3:23"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7121:3:23"}],"functionName":{"name":"store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","nodeType":"YulIdentifier","src":"7032:88:23"},"nodeType":"YulFunctionCall","src":"7032:93:23"},"nodeType":"YulExpressionStatement","src":"7032:93:23"},{"nodeType":"YulAssignment","src":"7134:19:23","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7145:3:23"},{"kind":"number","nodeType":"YulLiteral","src":"7150:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7141:3:23"},"nodeType":"YulFunctionCall","src":"7141:12:23"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"7134:3:23"}]}]},"name":"abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"6927:3:23","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"6935:3:23","type":""}],"src":"6793:366:23"},{"body":{"nodeType":"YulBlock","src":"7336:248:23","statements":[{"nodeType":"YulAssignment","src":"7346:26:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7358:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"7369:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7354:3:23"},"nodeType":"YulFunctionCall","src":"7354:18:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7346:4:23"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7393:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"7404:1:23","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7389:3:23"},"nodeType":"YulFunctionCall","src":"7389:17:23"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"7412:4:23"},{"name":"headStart","nodeType":"YulIdentifier","src":"7418:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7408:3:23"},"nodeType":"YulFunctionCall","src":"7408:20:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7382:6:23"},"nodeType":"YulFunctionCall","src":"7382:47:23"},"nodeType":"YulExpressionStatement","src":"7382:47:23"},{"nodeType":"YulAssignment","src":"7438:139:23","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"7572:4:23"}],"functionName":{"name":"abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7446:124:23"},"nodeType":"YulFunctionCall","src":"7446:131:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7438:4:23"}]}]},"name":"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7316:9:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7331:4:23","type":""}],"src":"7165:419:23"},{"body":{"nodeType":"YulBlock","src":"7696:117:23","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7718:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"7726:1:23","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7714:3:23"},"nodeType":"YulFunctionCall","src":"7714:14:23"},{"hexValue":"45524332303a20617070726f76652066726f6d20746865207a65726f20616464","kind":"string","nodeType":"YulLiteral","src":"7730:34:23","type":"","value":"ERC20: approve from the zero add"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7707:6:23"},"nodeType":"YulFunctionCall","src":"7707:58:23"},"nodeType":"YulExpressionStatement","src":"7707:58:23"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7786:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"7794:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7782:3:23"},"nodeType":"YulFunctionCall","src":"7782:15:23"},{"hexValue":"72657373","kind":"string","nodeType":"YulLiteral","src":"7799:6:23","type":"","value":"ress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7775:6:23"},"nodeType":"YulFunctionCall","src":"7775:31:23"},"nodeType":"YulExpressionStatement","src":"7775:31:23"}]},"name":"store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"7688:6:23","type":""}],"src":"7590:223:23"},{"body":{"nodeType":"YulBlock","src":"7965:220:23","statements":[{"nodeType":"YulAssignment","src":"7975:74:23","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8041:3:23"},{"kind":"number","nodeType":"YulLiteral","src":"8046:2:23","type":"","value":"36"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7982:58:23"},"nodeType":"YulFunctionCall","src":"7982:67:23"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"7975:3:23"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8147:3:23"}],"functionName":{"name":"store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","nodeType":"YulIdentifier","src":"8058:88:23"},"nodeType":"YulFunctionCall","src":"8058:93:23"},"nodeType":"YulExpressionStatement","src":"8058:93:23"},{"nodeType":"YulAssignment","src":"8160:19:23","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8171:3:23"},{"kind":"number","nodeType":"YulLiteral","src":"8176:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8167:3:23"},"nodeType":"YulFunctionCall","src":"8167:12:23"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"8160:3:23"}]}]},"name":"abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"7953:3:23","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"7961:3:23","type":""}],"src":"7819:366:23"},{"body":{"nodeType":"YulBlock","src":"8362:248:23","statements":[{"nodeType":"YulAssignment","src":"8372:26:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8384:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"8395:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8380:3:23"},"nodeType":"YulFunctionCall","src":"8380:18:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8372:4:23"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8419:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"8430:1:23","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8415:3:23"},"nodeType":"YulFunctionCall","src":"8415:17:23"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"8438:4:23"},{"name":"headStart","nodeType":"YulIdentifier","src":"8444:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8434:3:23"},"nodeType":"YulFunctionCall","src":"8434:20:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8408:6:23"},"nodeType":"YulFunctionCall","src":"8408:47:23"},"nodeType":"YulExpressionStatement","src":"8408:47:23"},{"nodeType":"YulAssignment","src":"8464:139:23","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"8598:4:23"}],"functionName":{"name":"abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8472:124:23"},"nodeType":"YulFunctionCall","src":"8472:131:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8464:4:23"}]}]},"name":"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8342:9:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8357:4:23","type":""}],"src":"8191:419:23"},{"body":{"nodeType":"YulBlock","src":"8722:115:23","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"8744:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"8752:1:23","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8740:3:23"},"nodeType":"YulFunctionCall","src":"8740:14:23"},{"hexValue":"45524332303a20617070726f766520746f20746865207a65726f206164647265","kind":"string","nodeType":"YulLiteral","src":"8756:34:23","type":"","value":"ERC20: approve to the zero addre"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8733:6:23"},"nodeType":"YulFunctionCall","src":"8733:58:23"},"nodeType":"YulExpressionStatement","src":"8733:58:23"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"8812:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"8820:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8808:3:23"},"nodeType":"YulFunctionCall","src":"8808:15:23"},{"hexValue":"7373","kind":"string","nodeType":"YulLiteral","src":"8825:4:23","type":"","value":"ss"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8801:6:23"},"nodeType":"YulFunctionCall","src":"8801:29:23"},"nodeType":"YulExpressionStatement","src":"8801:29:23"}]},"name":"store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"8714:6:23","type":""}],"src":"8616:221:23"},{"body":{"nodeType":"YulBlock","src":"8989:220:23","statements":[{"nodeType":"YulAssignment","src":"8999:74:23","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9065:3:23"},{"kind":"number","nodeType":"YulLiteral","src":"9070:2:23","type":"","value":"34"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9006:58:23"},"nodeType":"YulFunctionCall","src":"9006:67:23"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"8999:3:23"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9171:3:23"}],"functionName":{"name":"store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","nodeType":"YulIdentifier","src":"9082:88:23"},"nodeType":"YulFunctionCall","src":"9082:93:23"},"nodeType":"YulExpressionStatement","src":"9082:93:23"},{"nodeType":"YulAssignment","src":"9184:19:23","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9195:3:23"},{"kind":"number","nodeType":"YulLiteral","src":"9200:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9191:3:23"},"nodeType":"YulFunctionCall","src":"9191:12:23"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"9184:3:23"}]}]},"name":"abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"8977:3:23","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"8985:3:23","type":""}],"src":"8843:366:23"},{"body":{"nodeType":"YulBlock","src":"9386:248:23","statements":[{"nodeType":"YulAssignment","src":"9396:26:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9408:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"9419:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9404:3:23"},"nodeType":"YulFunctionCall","src":"9404:18:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9396:4:23"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9443:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"9454:1:23","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9439:3:23"},"nodeType":"YulFunctionCall","src":"9439:17:23"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"9462:4:23"},{"name":"headStart","nodeType":"YulIdentifier","src":"9468:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9458:3:23"},"nodeType":"YulFunctionCall","src":"9458:20:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9432:6:23"},"nodeType":"YulFunctionCall","src":"9432:47:23"},"nodeType":"YulExpressionStatement","src":"9432:47:23"},{"nodeType":"YulAssignment","src":"9488:139:23","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"9622:4:23"}],"functionName":{"name":"abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9496:124:23"},"nodeType":"YulFunctionCall","src":"9496:131:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9488:4:23"}]}]},"name":"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9366:9:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9381:4:23","type":""}],"src":"9215:419:23"},{"body":{"nodeType":"YulBlock","src":"9746:73:23","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"9768:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"9776:1:23","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9764:3:23"},"nodeType":"YulFunctionCall","src":"9764:14:23"},{"hexValue":"45524332303a20696e73756666696369656e7420616c6c6f77616e6365","kind":"string","nodeType":"YulLiteral","src":"9780:31:23","type":"","value":"ERC20: insufficient allowance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9757:6:23"},"nodeType":"YulFunctionCall","src":"9757:55:23"},"nodeType":"YulExpressionStatement","src":"9757:55:23"}]},"name":"store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"9738:6:23","type":""}],"src":"9640:179:23"},{"body":{"nodeType":"YulBlock","src":"9971:220:23","statements":[{"nodeType":"YulAssignment","src":"9981:74:23","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10047:3:23"},{"kind":"number","nodeType":"YulLiteral","src":"10052:2:23","type":"","value":"29"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9988:58:23"},"nodeType":"YulFunctionCall","src":"9988:67:23"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"9981:3:23"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10153:3:23"}],"functionName":{"name":"store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","nodeType":"YulIdentifier","src":"10064:88:23"},"nodeType":"YulFunctionCall","src":"10064:93:23"},"nodeType":"YulExpressionStatement","src":"10064:93:23"},{"nodeType":"YulAssignment","src":"10166:19:23","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10177:3:23"},{"kind":"number","nodeType":"YulLiteral","src":"10182:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10173:3:23"},"nodeType":"YulFunctionCall","src":"10173:12:23"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"10166:3:23"}]}]},"name":"abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"9959:3:23","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"9967:3:23","type":""}],"src":"9825:366:23"},{"body":{"nodeType":"YulBlock","src":"10368:248:23","statements":[{"nodeType":"YulAssignment","src":"10378:26:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10390:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"10401:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10386:3:23"},"nodeType":"YulFunctionCall","src":"10386:18:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10378:4:23"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10425:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"10436:1:23","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10421:3:23"},"nodeType":"YulFunctionCall","src":"10421:17:23"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"10444:4:23"},{"name":"headStart","nodeType":"YulIdentifier","src":"10450:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10440:3:23"},"nodeType":"YulFunctionCall","src":"10440:20:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10414:6:23"},"nodeType":"YulFunctionCall","src":"10414:47:23"},"nodeType":"YulExpressionStatement","src":"10414:47:23"},{"nodeType":"YulAssignment","src":"10470:139:23","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"10604:4:23"}],"functionName":{"name":"abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"10478:124:23"},"nodeType":"YulFunctionCall","src":"10478:131:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10470:4:23"}]}]},"name":"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10348:9:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10363:4:23","type":""}],"src":"10197:419:23"},{"body":{"nodeType":"YulBlock","src":"10728:118:23","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"10750:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"10758:1:23","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10746:3:23"},"nodeType":"YulFunctionCall","src":"10746:14:23"},{"hexValue":"45524332303a207472616e736665722066726f6d20746865207a65726f206164","kind":"string","nodeType":"YulLiteral","src":"10762:34:23","type":"","value":"ERC20: transfer from the zero ad"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10739:6:23"},"nodeType":"YulFunctionCall","src":"10739:58:23"},"nodeType":"YulExpressionStatement","src":"10739:58:23"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"10818:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"10826:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10814:3:23"},"nodeType":"YulFunctionCall","src":"10814:15:23"},{"hexValue":"6472657373","kind":"string","nodeType":"YulLiteral","src":"10831:7:23","type":"","value":"dress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10807:6:23"},"nodeType":"YulFunctionCall","src":"10807:32:23"},"nodeType":"YulExpressionStatement","src":"10807:32:23"}]},"name":"store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"10720:6:23","type":""}],"src":"10622:224:23"},{"body":{"nodeType":"YulBlock","src":"10998:220:23","statements":[{"nodeType":"YulAssignment","src":"11008:74:23","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11074:3:23"},{"kind":"number","nodeType":"YulLiteral","src":"11079:2:23","type":"","value":"37"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11015:58:23"},"nodeType":"YulFunctionCall","src":"11015:67:23"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"11008:3:23"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11180:3:23"}],"functionName":{"name":"store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","nodeType":"YulIdentifier","src":"11091:88:23"},"nodeType":"YulFunctionCall","src":"11091:93:23"},"nodeType":"YulExpressionStatement","src":"11091:93:23"},{"nodeType":"YulAssignment","src":"11193:19:23","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11204:3:23"},{"kind":"number","nodeType":"YulLiteral","src":"11209:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11200:3:23"},"nodeType":"YulFunctionCall","src":"11200:12:23"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"11193:3:23"}]}]},"name":"abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"10986:3:23","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"10994:3:23","type":""}],"src":"10852:366:23"},{"body":{"nodeType":"YulBlock","src":"11395:248:23","statements":[{"nodeType":"YulAssignment","src":"11405:26:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11417:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"11428:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11413:3:23"},"nodeType":"YulFunctionCall","src":"11413:18:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11405:4:23"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11452:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"11463:1:23","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11448:3:23"},"nodeType":"YulFunctionCall","src":"11448:17:23"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"11471:4:23"},{"name":"headStart","nodeType":"YulIdentifier","src":"11477:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11467:3:23"},"nodeType":"YulFunctionCall","src":"11467:20:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11441:6:23"},"nodeType":"YulFunctionCall","src":"11441:47:23"},"nodeType":"YulExpressionStatement","src":"11441:47:23"},{"nodeType":"YulAssignment","src":"11497:139:23","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"11631:4:23"}],"functionName":{"name":"abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11505:124:23"},"nodeType":"YulFunctionCall","src":"11505:131:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11497:4:23"}]}]},"name":"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11375:9:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11390:4:23","type":""}],"src":"11224:419:23"},{"body":{"nodeType":"YulBlock","src":"11755:116:23","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"11777:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"11785:1:23","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11773:3:23"},"nodeType":"YulFunctionCall","src":"11773:14:23"},{"hexValue":"45524332303a207472616e7366657220746f20746865207a65726f2061646472","kind":"string","nodeType":"YulLiteral","src":"11789:34:23","type":"","value":"ERC20: transfer to the zero addr"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11766:6:23"},"nodeType":"YulFunctionCall","src":"11766:58:23"},"nodeType":"YulExpressionStatement","src":"11766:58:23"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"11845:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"11853:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11841:3:23"},"nodeType":"YulFunctionCall","src":"11841:15:23"},{"hexValue":"657373","kind":"string","nodeType":"YulLiteral","src":"11858:5:23","type":"","value":"ess"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11834:6:23"},"nodeType":"YulFunctionCall","src":"11834:30:23"},"nodeType":"YulExpressionStatement","src":"11834:30:23"}]},"name":"store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"11747:6:23","type":""}],"src":"11649:222:23"},{"body":{"nodeType":"YulBlock","src":"12023:220:23","statements":[{"nodeType":"YulAssignment","src":"12033:74:23","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12099:3:23"},{"kind":"number","nodeType":"YulLiteral","src":"12104:2:23","type":"","value":"35"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12040:58:23"},"nodeType":"YulFunctionCall","src":"12040:67:23"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"12033:3:23"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12205:3:23"}],"functionName":{"name":"store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","nodeType":"YulIdentifier","src":"12116:88:23"},"nodeType":"YulFunctionCall","src":"12116:93:23"},"nodeType":"YulExpressionStatement","src":"12116:93:23"},{"nodeType":"YulAssignment","src":"12218:19:23","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12229:3:23"},{"kind":"number","nodeType":"YulLiteral","src":"12234:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12225:3:23"},"nodeType":"YulFunctionCall","src":"12225:12:23"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"12218:3:23"}]}]},"name":"abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"12011:3:23","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"12019:3:23","type":""}],"src":"11877:366:23"},{"body":{"nodeType":"YulBlock","src":"12420:248:23","statements":[{"nodeType":"YulAssignment","src":"12430:26:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12442:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"12453:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12438:3:23"},"nodeType":"YulFunctionCall","src":"12438:18:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12430:4:23"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12477:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"12488:1:23","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12473:3:23"},"nodeType":"YulFunctionCall","src":"12473:17:23"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"12496:4:23"},{"name":"headStart","nodeType":"YulIdentifier","src":"12502:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12492:3:23"},"nodeType":"YulFunctionCall","src":"12492:20:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12466:6:23"},"nodeType":"YulFunctionCall","src":"12466:47:23"},"nodeType":"YulExpressionStatement","src":"12466:47:23"},{"nodeType":"YulAssignment","src":"12522:139:23","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"12656:4:23"}],"functionName":{"name":"abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12530:124:23"},"nodeType":"YulFunctionCall","src":"12530:131:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12522:4:23"}]}]},"name":"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12400:9:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12415:4:23","type":""}],"src":"12249:419:23"},{"body":{"nodeType":"YulBlock","src":"12780:119:23","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"12802:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"12810:1:23","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12798:3:23"},"nodeType":"YulFunctionCall","src":"12798:14:23"},{"hexValue":"45524332303a207472616e7366657220616d6f756e7420657863656564732062","kind":"string","nodeType":"YulLiteral","src":"12814:34:23","type":"","value":"ERC20: transfer amount exceeds b"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12791:6:23"},"nodeType":"YulFunctionCall","src":"12791:58:23"},"nodeType":"YulExpressionStatement","src":"12791:58:23"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"12870:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"12878:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12866:3:23"},"nodeType":"YulFunctionCall","src":"12866:15:23"},{"hexValue":"616c616e6365","kind":"string","nodeType":"YulLiteral","src":"12883:8:23","type":"","value":"alance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12859:6:23"},"nodeType":"YulFunctionCall","src":"12859:33:23"},"nodeType":"YulExpressionStatement","src":"12859:33:23"}]},"name":"store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"12772:6:23","type":""}],"src":"12674:225:23"},{"body":{"nodeType":"YulBlock","src":"13051:220:23","statements":[{"nodeType":"YulAssignment","src":"13061:74:23","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13127:3:23"},{"kind":"number","nodeType":"YulLiteral","src":"13132:2:23","type":"","value":"38"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13068:58:23"},"nodeType":"YulFunctionCall","src":"13068:67:23"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"13061:3:23"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13233:3:23"}],"functionName":{"name":"store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","nodeType":"YulIdentifier","src":"13144:88:23"},"nodeType":"YulFunctionCall","src":"13144:93:23"},"nodeType":"YulExpressionStatement","src":"13144:93:23"},{"nodeType":"YulAssignment","src":"13246:19:23","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13257:3:23"},{"kind":"number","nodeType":"YulLiteral","src":"13262:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13253:3:23"},"nodeType":"YulFunctionCall","src":"13253:12:23"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"13246:3:23"}]}]},"name":"abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"13039:3:23","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"13047:3:23","type":""}],"src":"12905:366:23"},{"body":{"nodeType":"YulBlock","src":"13448:248:23","statements":[{"nodeType":"YulAssignment","src":"13458:26:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13470:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"13481:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13466:3:23"},"nodeType":"YulFunctionCall","src":"13466:18:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13458:4:23"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13505:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"13516:1:23","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13501:3:23"},"nodeType":"YulFunctionCall","src":"13501:17:23"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13524:4:23"},{"name":"headStart","nodeType":"YulIdentifier","src":"13530:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13520:3:23"},"nodeType":"YulFunctionCall","src":"13520:20:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13494:6:23"},"nodeType":"YulFunctionCall","src":"13494:47:23"},"nodeType":"YulExpressionStatement","src":"13494:47:23"},{"nodeType":"YulAssignment","src":"13550:139:23","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13684:4:23"}],"functionName":{"name":"abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13558:124:23"},"nodeType":"YulFunctionCall","src":"13558:131:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13550:4:23"}]}]},"name":"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13428:9:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13443:4:23","type":""}],"src":"13277:419:23"}]},"contents":"{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: decreased allowance below\")\n\n        mstore(add(memPtr, 32), \" zero\")\n\n    }\n\n    function abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: approve from the zero add\")\n\n        mstore(add(memPtr, 32), \"ress\")\n\n    }\n\n    function abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: approve to the zero addre\")\n\n        mstore(add(memPtr, 32), \"ss\")\n\n    }\n\n    function abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: insufficient allowance\")\n\n    }\n\n    function abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer from the zero ad\")\n\n        mstore(add(memPtr, 32), \"dress\")\n\n    }\n\n    function abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer to the zero addr\")\n\n        mstore(add(memPtr, 32), \"ess\")\n\n    }\n\n    function abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 35)\n        store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer amount exceeds b\")\n\n        mstore(add(memPtr, 32), \"alance\")\n\n    }\n\n    function abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n","id":23,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461016857806370a082311461019857806395d89b41146101c8578063a457c2d7146101e6578063a9059cbb14610216578063dd62ed3e14610246576100a9565b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100fc57806323b872dd1461011a578063313ce5671461014a575b600080fd5b6100b6610276565b6040516100c39190610b0c565b60405180910390f35b6100e660048036038101906100e19190610bc7565b610308565b6040516100f39190610c22565b60405180910390f35b61010461032b565b6040516101119190610c4c565b60405180910390f35b610134600480360381019061012f9190610c67565b610335565b6040516101419190610c22565b60405180910390f35b610152610364565b60405161015f9190610cd6565b60405180910390f35b610182600480360381019061017d9190610bc7565b61036d565b60405161018f9190610c22565b60405180910390f35b6101b260048036038101906101ad9190610cf1565b6103a4565b6040516101bf9190610c4c565b60405180910390f35b6101d06103ec565b6040516101dd9190610b0c565b60405180910390f35b61020060048036038101906101fb9190610bc7565b61047e565b60405161020d9190610c22565b60405180910390f35b610230600480360381019061022b9190610bc7565b6104f5565b60405161023d9190610c22565b60405180910390f35b610260600480360381019061025b9190610d1e565b610518565b60405161026d9190610c4c565b60405180910390f35b60606003805461028590610d8d565b80601f01602080910402602001604051908101604052809291908181526020018280546102b190610d8d565b80156102fe5780601f106102d3576101008083540402835291602001916102fe565b820191906000526020600020905b8154815290600101906020018083116102e157829003601f168201915b5050505050905090565b60008061031361059f565b90506103208185856105a7565b600191505092915050565b6000600254905090565b60008061034061059f565b905061034d858285610770565b6103588585856107fc565b60019150509392505050565b60006012905090565b60008061037861059f565b905061039981858561038a8589610518565b6103949190610ded565b6105a7565b600191505092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6060600480546103fb90610d8d565b80601f016020809104026020016040519081016040528092919081815260200182805461042790610d8d565b80156104745780601f1061044957610100808354040283529160200191610474565b820191906000526020600020905b81548152906001019060200180831161045757829003601f168201915b5050505050905090565b60008061048961059f565b905060006104978286610518565b9050838110156104dc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d390610e93565b60405180910390fd5b6104e982868684036105a7565b60019250505092915050565b60008061050061059f565b905061050d8185856107fc565b600191505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610616576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060d90610f25565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610685576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161067c90610fb7565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516107639190610c4c565b60405180910390a3505050565b600061077c8484610518565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146107f657818110156107e8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107df90611023565b60405180910390fd5b6107f584848484036105a7565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361086b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610862906110b5565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036108da576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108d190611147565b60405180910390fd5b6108e5838383610a72565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508181101561096b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610962906111d9565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610a599190610c4c565b60405180910390a3610a6c848484610a77565b50505050565b505050565b505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610ab6578082015181840152602081019050610a9b565b60008484015250505050565b6000601f19601f8301169050919050565b6000610ade82610a7c565b610ae88185610a87565b9350610af8818560208601610a98565b610b0181610ac2565b840191505092915050565b60006020820190508181036000830152610b268184610ad3565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610b5e82610b33565b9050919050565b610b6e81610b53565b8114610b7957600080fd5b50565b600081359050610b8b81610b65565b92915050565b6000819050919050565b610ba481610b91565b8114610baf57600080fd5b50565b600081359050610bc181610b9b565b92915050565b60008060408385031215610bde57610bdd610b2e565b5b6000610bec85828601610b7c565b9250506020610bfd85828601610bb2565b9150509250929050565b60008115159050919050565b610c1c81610c07565b82525050565b6000602082019050610c376000830184610c13565b92915050565b610c4681610b91565b82525050565b6000602082019050610c616000830184610c3d565b92915050565b600080600060608486031215610c8057610c7f610b2e565b5b6000610c8e86828701610b7c565b9350506020610c9f86828701610b7c565b9250506040610cb086828701610bb2565b9150509250925092565b600060ff82169050919050565b610cd081610cba565b82525050565b6000602082019050610ceb6000830184610cc7565b92915050565b600060208284031215610d0757610d06610b2e565b5b6000610d1584828501610b7c565b91505092915050565b60008060408385031215610d3557610d34610b2e565b5b6000610d4385828601610b7c565b9250506020610d5485828601610b7c565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610da557607f821691505b602082108103610db857610db7610d5e565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610df882610b91565b9150610e0383610b91565b9250828201905080821115610e1b57610e1a610dbe565b5b92915050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b6000610e7d602583610a87565b9150610e8882610e21565b604082019050919050565b60006020820190508181036000830152610eac81610e70565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b6000610f0f602483610a87565b9150610f1a82610eb3565b604082019050919050565b60006020820190508181036000830152610f3e81610f02565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b6000610fa1602283610a87565b9150610fac82610f45565b604082019050919050565b60006020820190508181036000830152610fd081610f94565b9050919050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b600061100d601d83610a87565b915061101882610fd7565b602082019050919050565b6000602082019050818103600083015261103c81611000565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b600061109f602583610a87565b91506110aa82611043565b604082019050919050565b600060208201905081810360008301526110ce81611092565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b6000611131602383610a87565b915061113c826110d5565b604082019050919050565b6000602082019050818103600083015261116081611124565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b60006111c3602683610a87565b91506111ce82611167565b604082019050919050565b600060208201905081810360008301526111f2816111b6565b905091905056fea2646970667358221220fdf476e2583d8caf4cdece2e219de3186064b0f77078f3e2440d96f5aa09c17664736f6c63430008130033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x168 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x198 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1C8 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x1E6 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x216 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x246 JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xFC JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x11A JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x14A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x276 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0xB0C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE1 SWAP2 SWAP1 PUSH2 0xBC7 JUMP JUMPDEST PUSH2 0x308 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF3 SWAP2 SWAP1 PUSH2 0xC22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x104 PUSH2 0x32B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x111 SWAP2 SWAP1 PUSH2 0xC4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x134 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12F SWAP2 SWAP1 PUSH2 0xC67 JUMP JUMPDEST PUSH2 0x335 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x141 SWAP2 SWAP1 PUSH2 0xC22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x152 PUSH2 0x364 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15F SWAP2 SWAP1 PUSH2 0xCD6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x182 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17D SWAP2 SWAP1 PUSH2 0xBC7 JUMP JUMPDEST PUSH2 0x36D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18F SWAP2 SWAP1 PUSH2 0xC22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AD SWAP2 SWAP1 PUSH2 0xCF1 JUMP JUMPDEST PUSH2 0x3A4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BF SWAP2 SWAP1 PUSH2 0xC4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D0 PUSH2 0x3EC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DD SWAP2 SWAP1 PUSH2 0xB0C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x200 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FB SWAP2 SWAP1 PUSH2 0xBC7 JUMP JUMPDEST PUSH2 0x47E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20D SWAP2 SWAP1 PUSH2 0xC22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x230 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22B SWAP2 SWAP1 PUSH2 0xBC7 JUMP JUMPDEST PUSH2 0x4F5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23D SWAP2 SWAP1 PUSH2 0xC22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x260 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25B SWAP2 SWAP1 PUSH2 0xD1E JUMP JUMPDEST PUSH2 0x518 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26D SWAP2 SWAP1 PUSH2 0xC4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x285 SWAP1 PUSH2 0xD8D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2B1 SWAP1 PUSH2 0xD8D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2FE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2D3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2FE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2E1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x313 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x320 DUP2 DUP6 DUP6 PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x340 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x34D DUP6 DUP3 DUP6 PUSH2 0x770 JUMP JUMPDEST PUSH2 0x358 DUP6 DUP6 DUP6 PUSH2 0x7FC JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x378 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x399 DUP2 DUP6 DUP6 PUSH2 0x38A DUP6 DUP10 PUSH2 0x518 JUMP JUMPDEST PUSH2 0x394 SWAP2 SWAP1 PUSH2 0xDED JUMP JUMPDEST PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x3FB SWAP1 PUSH2 0xD8D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x427 SWAP1 PUSH2 0xD8D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x474 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x449 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x474 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x457 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x489 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x497 DUP3 DUP7 PUSH2 0x518 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x4DC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D3 SWAP1 PUSH2 0xE93 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4E9 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x500 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x50D DUP2 DUP6 DUP6 PUSH2 0x7FC JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x616 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x60D SWAP1 PUSH2 0xF25 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x685 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x67C SWAP1 PUSH2 0xFB7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD PUSH2 0x763 SWAP2 SWAP1 PUSH2 0xC4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x77C DUP5 DUP5 PUSH2 0x518 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x7F6 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x7E8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7DF SWAP1 PUSH2 0x1023 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7F5 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x5A7 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x86B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x862 SWAP1 PUSH2 0x10B5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8DA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8D1 SWAP1 PUSH2 0x1147 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8E5 DUP4 DUP4 DUP4 PUSH2 0xA72 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x96B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x962 SWAP1 PUSH2 0x11D9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0xA59 SWAP2 SWAP1 PUSH2 0xC4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xA6C DUP5 DUP5 DUP5 PUSH2 0xA77 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xAB6 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xA9B JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xADE DUP3 PUSH2 0xA7C JUMP JUMPDEST PUSH2 0xAE8 DUP2 DUP6 PUSH2 0xA87 JUMP JUMPDEST SWAP4 POP PUSH2 0xAF8 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xA98 JUMP JUMPDEST PUSH2 0xB01 DUP2 PUSH2 0xAC2 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xB26 DUP2 DUP5 PUSH2 0xAD3 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB5E DUP3 PUSH2 0xB33 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB6E DUP2 PUSH2 0xB53 JUMP JUMPDEST DUP2 EQ PUSH2 0xB79 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB8B DUP2 PUSH2 0xB65 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBA4 DUP2 PUSH2 0xB91 JUMP JUMPDEST DUP2 EQ PUSH2 0xBAF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xBC1 DUP2 PUSH2 0xB9B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xBDE JUMPI PUSH2 0xBDD PUSH2 0xB2E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xBEC DUP6 DUP3 DUP7 ADD PUSH2 0xB7C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xBFD DUP6 DUP3 DUP7 ADD PUSH2 0xBB2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC1C DUP2 PUSH2 0xC07 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC37 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC13 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xC46 DUP2 PUSH2 0xB91 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC61 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC3D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xC80 JUMPI PUSH2 0xC7F PUSH2 0xB2E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xC8E DUP7 DUP3 DUP8 ADD PUSH2 0xB7C JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xC9F DUP7 DUP3 DUP8 ADD PUSH2 0xB7C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xCB0 DUP7 DUP3 DUP8 ADD PUSH2 0xBB2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCD0 DUP2 PUSH2 0xCBA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xCEB PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xCC7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD07 JUMPI PUSH2 0xD06 PUSH2 0xB2E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD15 DUP5 DUP3 DUP6 ADD PUSH2 0xB7C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD35 JUMPI PUSH2 0xD34 PUSH2 0xB2E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD43 DUP6 DUP3 DUP7 ADD PUSH2 0xB7C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xD54 DUP6 DUP3 DUP7 ADD PUSH2 0xB7C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xDA5 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xDB8 JUMPI PUSH2 0xDB7 PUSH2 0xD5E JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xDF8 DUP3 PUSH2 0xB91 JUMP JUMPDEST SWAP2 POP PUSH2 0xE03 DUP4 PUSH2 0xB91 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xE1B JUMPI PUSH2 0xE1A PUSH2 0xDBE JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x207A65726F000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE7D PUSH1 0x25 DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0xE88 DUP3 PUSH2 0xE21 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xEAC DUP2 PUSH2 0xE70 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF0F PUSH1 0x24 DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0xF1A DUP3 PUSH2 0xEB3 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF3E DUP2 PUSH2 0xF02 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFA1 PUSH1 0x22 DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0xFAC DUP3 PUSH2 0xF45 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xFD0 DUP2 PUSH2 0xF94 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x100D PUSH1 0x1D DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0x1018 DUP3 PUSH2 0xFD7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x103C DUP2 PUSH2 0x1000 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x109F PUSH1 0x25 DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0x10AA DUP3 PUSH2 0x1043 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x10CE DUP2 PUSH2 0x1092 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1131 PUSH1 0x23 DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0x113C DUP3 PUSH2 0x10D5 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1160 DUP2 PUSH2 0x1124 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x616C616E63650000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11C3 PUSH1 0x26 DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0x11CE DUP3 PUSH2 0x1167 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x11F2 DUP2 PUSH2 0x11B6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 REVERT DELEGATECALL PUSH23 0xE2583D8CAF4CDECE2E219DE3186064B0F77078F3E2440D SWAP7 CREATE2 0xAA MULMOD 0xC1 PUSH23 0x64736F6C63430008130033000000000000000000000000 ","sourceMap":"1532:11312:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2158:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4444:197;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3255:106;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5203:256;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3104:91;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5854:234;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3419:125;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2369:102;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6575:427;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3740:189;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3987:149;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2158:98;2212:13;2244:5;2237:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2158:98;:::o;4444:197::-;4527:4;4543:13;4559:12;:10;:12::i;:::-;4543:28;;4581:32;4590:5;4597:7;4606:6;4581:8;:32::i;:::-;4630:4;4623:11;;;4444:197;;;;:::o;3255:106::-;3316:7;3342:12;;3335:19;;3255:106;:::o;5203:256::-;5300:4;5316:15;5334:12;:10;:12::i;:::-;5316:30;;5356:38;5372:4;5378:7;5387:6;5356:15;:38::i;:::-;5404:27;5414:4;5420:2;5424:6;5404:9;:27::i;:::-;5448:4;5441:11;;;5203:256;;;;;:::o;3104:91::-;3162:5;3186:2;3179:9;;3104:91;:::o;5854:234::-;5942:4;5958:13;5974:12;:10;:12::i;:::-;5958:28;;5996:64;6005:5;6012:7;6049:10;6021:25;6031:5;6038:7;6021:9;:25::i;:::-;:38;;;;:::i;:::-;5996:8;:64::i;:::-;6077:4;6070:11;;;5854:234;;;;:::o;3419:125::-;3493:7;3519:9;:18;3529:7;3519:18;;;;;;;;;;;;;;;;3512:25;;3419:125;;;:::o;2369:102::-;2425:13;2457:7;2450:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2369:102;:::o;6575:427::-;6668:4;6684:13;6700:12;:10;:12::i;:::-;6684:28;;6722:24;6749:25;6759:5;6766:7;6749:9;:25::i;:::-;6722:52;;6812:15;6792:16;:35;;6784:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;6903:60;6912:5;6919:7;6947:15;6928:16;:34;6903:8;:60::i;:::-;6991:4;6984:11;;;;6575:427;;;;:::o;3740:189::-;3819:4;3835:13;3851:12;:10;:12::i;:::-;3835:28;;3873;3883:5;3890:2;3894:6;3873:9;:28::i;:::-;3918:4;3911:11;;;3740:189;;;;:::o;3987:149::-;4076:7;4102:11;:18;4114:5;4102:18;;;;;;;;;;;;;;;:27;4121:7;4102:27;;;;;;;;;;;;;;;;4095:34;;3987:149;;;;:::o;640:96:12:-;693:7;719:10;712:17;;640:96;:::o;10457:340:5:-;10575:1;10558:19;;:5;:19;;;10550:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;10655:1;10636:21;;:7;:21;;;10628:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;10737:6;10707:11;:18;10719:5;10707:18;;;;;;;;;;;;;;;:27;10726:7;10707:27;;;;;;;;;;;;;;;:36;;;;10774:7;10758:32;;10767:5;10758:32;;;10783:6;10758:32;;;;;;:::i;:::-;;;;;;;;10457:340;;;:::o;11078:411::-;11178:24;11205:25;11215:5;11222:7;11205:9;:25::i;:::-;11178:52;;11264:17;11244:16;:37;11240:243;;11325:6;11305:16;:26;;11297:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;11407:51;11416:5;11423:7;11451:6;11432:16;:25;11407:8;:51::i;:::-;11240:243;11168:321;11078:411;;;:::o;7456:788::-;7568:1;7552:18;;:4;:18;;;7544:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;7644:1;7630:16;;:2;:16;;;7622:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;7697:38;7718:4;7724:2;7728:6;7697:20;:38::i;:::-;7746:19;7768:9;:15;7778:4;7768:15;;;;;;;;;;;;;;;;7746:37;;7816:6;7801:11;:21;;7793:72;;;;;;;;;;;;:::i;:::-;;;;;;;;;7931:6;7917:11;:20;7899:9;:15;7909:4;7899:15;;;;;;;;;;;;;;;:38;;;;8131:6;8114:9;:13;8124:2;8114:13;;;;;;;;;;;;;;;;:23;;;;;;;;;;;8178:2;8163:26;;8172:4;8163:26;;;8182:6;8163:26;;;;;;:::i;:::-;;;;;;;;8200:37;8220:4;8226:2;8230:6;8200:19;:37::i;:::-;7534:710;7456:788;;;:::o;12073:91::-;;;;:::o;12752:90::-;;;;:::o;7:99:23:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:246::-;368:1;378:113;392:6;389:1;386:13;378:113;;;477:1;472:3;468:11;462:18;458:1;453:3;449:11;442:39;414:2;411:1;407:10;402:15;;378:113;;;525:1;516:6;511:3;507:16;500:27;349:184;287:246;;;:::o;539:102::-;580:6;631:2;627:7;622:2;615:5;611:14;607:28;597:38;;539:102;;;:::o;647:377::-;735:3;763:39;796:5;763:39;:::i;:::-;818:71;882:6;877:3;818:71;:::i;:::-;811:78;;898:65;956:6;951:3;944:4;937:5;933:16;898:65;:::i;:::-;988:29;1010:6;988:29;:::i;:::-;983:3;979:39;972:46;;739:285;647:377;;;;:::o;1030:313::-;1143:4;1181:2;1170:9;1166:18;1158:26;;1230:9;1224:4;1220:20;1216:1;1205:9;1201:17;1194:47;1258:78;1331:4;1322:6;1258:78;:::i;:::-;1250:86;;1030:313;;;;:::o;1430:117::-;1539:1;1536;1529:12;1676:126;1713:7;1753:42;1746:5;1742:54;1731:65;;1676:126;;;:::o;1808:96::-;1845:7;1874:24;1892:5;1874:24;:::i;:::-;1863:35;;1808:96;;;:::o;1910:122::-;1983:24;2001:5;1983:24;:::i;:::-;1976:5;1973:35;1963:63;;2022:1;2019;2012:12;1963:63;1910:122;:::o;2038:139::-;2084:5;2122:6;2109:20;2100:29;;2138:33;2165:5;2138:33;:::i;:::-;2038:139;;;;:::o;2183:77::-;2220:7;2249:5;2238:16;;2183:77;;;:::o;2266:122::-;2339:24;2357:5;2339:24;:::i;:::-;2332:5;2329:35;2319:63;;2378:1;2375;2368:12;2319:63;2266:122;:::o;2394:139::-;2440:5;2478:6;2465:20;2456:29;;2494:33;2521:5;2494:33;:::i;:::-;2394:139;;;;:::o;2539:474::-;2607:6;2615;2664:2;2652:9;2643:7;2639:23;2635:32;2632:119;;;2670:79;;:::i;:::-;2632:119;2790:1;2815:53;2860:7;2851:6;2840:9;2836:22;2815:53;:::i;:::-;2805:63;;2761:117;2917:2;2943:53;2988:7;2979:6;2968:9;2964:22;2943:53;:::i;:::-;2933:63;;2888:118;2539:474;;;;;:::o;3019:90::-;3053:7;3096:5;3089:13;3082:21;3071:32;;3019:90;;;:::o;3115:109::-;3196:21;3211:5;3196:21;:::i;:::-;3191:3;3184:34;3115:109;;:::o;3230:210::-;3317:4;3355:2;3344:9;3340:18;3332:26;;3368:65;3430:1;3419:9;3415:17;3406:6;3368:65;:::i;:::-;3230:210;;;;:::o;3446:118::-;3533:24;3551:5;3533:24;:::i;:::-;3528:3;3521:37;3446:118;;:::o;3570:222::-;3663:4;3701:2;3690:9;3686:18;3678:26;;3714:71;3782:1;3771:9;3767:17;3758:6;3714:71;:::i;:::-;3570:222;;;;:::o;3798:619::-;3875:6;3883;3891;3940:2;3928:9;3919:7;3915:23;3911:32;3908:119;;;3946:79;;:::i;:::-;3908:119;4066:1;4091:53;4136:7;4127:6;4116:9;4112:22;4091:53;:::i;:::-;4081:63;;4037:117;4193:2;4219:53;4264:7;4255:6;4244:9;4240:22;4219:53;:::i;:::-;4209:63;;4164:118;4321:2;4347:53;4392:7;4383:6;4372:9;4368:22;4347:53;:::i;:::-;4337:63;;4292:118;3798:619;;;;;:::o;4423:86::-;4458:7;4498:4;4491:5;4487:16;4476:27;;4423:86;;;:::o;4515:112::-;4598:22;4614:5;4598:22;:::i;:::-;4593:3;4586:35;4515:112;;:::o;4633:214::-;4722:4;4760:2;4749:9;4745:18;4737:26;;4773:67;4837:1;4826:9;4822:17;4813:6;4773:67;:::i;:::-;4633:214;;;;:::o;4853:329::-;4912:6;4961:2;4949:9;4940:7;4936:23;4932:32;4929:119;;;4967:79;;:::i;:::-;4929:119;5087:1;5112:53;5157:7;5148:6;5137:9;5133:22;5112:53;:::i;:::-;5102:63;;5058:117;4853:329;;;;:::o;5188:474::-;5256:6;5264;5313:2;5301:9;5292:7;5288:23;5284:32;5281:119;;;5319:79;;:::i;:::-;5281:119;5439:1;5464:53;5509:7;5500:6;5489:9;5485:22;5464:53;:::i;:::-;5454:63;;5410:117;5566:2;5592:53;5637:7;5628:6;5617:9;5613:22;5592:53;:::i;:::-;5582:63;;5537:118;5188:474;;;;;:::o;5668:180::-;5716:77;5713:1;5706:88;5813:4;5810:1;5803:15;5837:4;5834:1;5827:15;5854:320;5898:6;5935:1;5929:4;5925:12;5915:22;;5982:1;5976:4;5972:12;6003:18;5993:81;;6059:4;6051:6;6047:17;6037:27;;5993:81;6121:2;6113:6;6110:14;6090:18;6087:38;6084:84;;6140:18;;:::i;:::-;6084:84;5905:269;5854:320;;;:::o;6180:180::-;6228:77;6225:1;6218:88;6325:4;6322:1;6315:15;6349:4;6346:1;6339:15;6366:191;6406:3;6425:20;6443:1;6425:20;:::i;:::-;6420:25;;6459:20;6477:1;6459:20;:::i;:::-;6454:25;;6502:1;6499;6495:9;6488:16;;6523:3;6520:1;6517:10;6514:36;;;6530:18;;:::i;:::-;6514:36;6366:191;;;;:::o;6563:224::-;6703:34;6699:1;6691:6;6687:14;6680:58;6772:7;6767:2;6759:6;6755:15;6748:32;6563:224;:::o;6793:366::-;6935:3;6956:67;7020:2;7015:3;6956:67;:::i;:::-;6949:74;;7032:93;7121:3;7032:93;:::i;:::-;7150:2;7145:3;7141:12;7134:19;;6793:366;;;:::o;7165:419::-;7331:4;7369:2;7358:9;7354:18;7346:26;;7418:9;7412:4;7408:20;7404:1;7393:9;7389:17;7382:47;7446:131;7572:4;7446:131;:::i;:::-;7438:139;;7165:419;;;:::o;7590:223::-;7730:34;7726:1;7718:6;7714:14;7707:58;7799:6;7794:2;7786:6;7782:15;7775:31;7590:223;:::o;7819:366::-;7961:3;7982:67;8046:2;8041:3;7982:67;:::i;:::-;7975:74;;8058:93;8147:3;8058:93;:::i;:::-;8176:2;8171:3;8167:12;8160:19;;7819:366;;;:::o;8191:419::-;8357:4;8395:2;8384:9;8380:18;8372:26;;8444:9;8438:4;8434:20;8430:1;8419:9;8415:17;8408:47;8472:131;8598:4;8472:131;:::i;:::-;8464:139;;8191:419;;;:::o;8616:221::-;8756:34;8752:1;8744:6;8740:14;8733:58;8825:4;8820:2;8812:6;8808:15;8801:29;8616:221;:::o;8843:366::-;8985:3;9006:67;9070:2;9065:3;9006:67;:::i;:::-;8999:74;;9082:93;9171:3;9082:93;:::i;:::-;9200:2;9195:3;9191:12;9184:19;;8843:366;;;:::o;9215:419::-;9381:4;9419:2;9408:9;9404:18;9396:26;;9468:9;9462:4;9458:20;9454:1;9443:9;9439:17;9432:47;9496:131;9622:4;9496:131;:::i;:::-;9488:139;;9215:419;;;:::o;9640:179::-;9780:31;9776:1;9768:6;9764:14;9757:55;9640:179;:::o;9825:366::-;9967:3;9988:67;10052:2;10047:3;9988:67;:::i;:::-;9981:74;;10064:93;10153:3;10064:93;:::i;:::-;10182:2;10177:3;10173:12;10166:19;;9825:366;;;:::o;10197:419::-;10363:4;10401:2;10390:9;10386:18;10378:26;;10450:9;10444:4;10440:20;10436:1;10425:9;10421:17;10414:47;10478:131;10604:4;10478:131;:::i;:::-;10470:139;;10197:419;;;:::o;10622:224::-;10762:34;10758:1;10750:6;10746:14;10739:58;10831:7;10826:2;10818:6;10814:15;10807:32;10622:224;:::o;10852:366::-;10994:3;11015:67;11079:2;11074:3;11015:67;:::i;:::-;11008:74;;11091:93;11180:3;11091:93;:::i;:::-;11209:2;11204:3;11200:12;11193:19;;10852:366;;;:::o;11224:419::-;11390:4;11428:2;11417:9;11413:18;11405:26;;11477:9;11471:4;11467:20;11463:1;11452:9;11448:17;11441:47;11505:131;11631:4;11505:131;:::i;:::-;11497:139;;11224:419;;;:::o;11649:222::-;11789:34;11785:1;11777:6;11773:14;11766:58;11858:5;11853:2;11845:6;11841:15;11834:30;11649:222;:::o;11877:366::-;12019:3;12040:67;12104:2;12099:3;12040:67;:::i;:::-;12033:74;;12116:93;12205:3;12116:93;:::i;:::-;12234:2;12229:3;12225:12;12218:19;;11877:366;;;:::o;12249:419::-;12415:4;12453:2;12442:9;12438:18;12430:26;;12502:9;12496:4;12492:20;12488:1;12477:9;12473:17;12466:47;12530:131;12656:4;12530:131;:::i;:::-;12522:139;;12249:419;;;:::o;12674:225::-;12814:34;12810:1;12802:6;12798:14;12791:58;12883:8;12878:2;12870:6;12866:15;12859:33;12674:225;:::o;12905:366::-;13047:3;13068:67;13132:2;13127:3;13068:67;:::i;:::-;13061:74;;13144:93;13233:3;13144:93;:::i;:::-;13262:2;13257:3;13253:12;13246:19;;12905:366;;;:::o;13277:419::-;13443:4;13481:2;13470:9;13466:18;13458:26;;13530:9;13524:4;13520:20;13516:1;13505:9;13501:17;13494:47;13558:131;13684:4;13558:131;:::i;:::-;13550:139;;13277:419;;;:::o"},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","decreaseAllowance(address,uint256)":"a457c2d7","increaseAllowance(address,uint256)":"39509351","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15\",\"dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol":{"ERC20Permit":{"abi":[{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","decreaseAllowance(address,uint256)":"a457c2d7","eip712Domain()":"84b0196e","increaseAllowance(address,uint256)":"39509351","name()":"06fdde03","nonces(address)":"7ecebe00","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. _Available since v3.4._\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"See {IERC20Permit-DOMAIN_SEPARATOR}.\"},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\\\"1\\\"`. It's a good idea to use the same `name` that is defined as the ERC20 token name.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"eip712Domain()\":{\"details\":\"See {EIP-5267}. _Available since v4.9._\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"nonces(address)\":{\"details\":\"See {IERC20Permit-nonces}.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"See {IERC20Permit-permit}.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"stateVariables\":{\"_PERMIT_TYPEHASH_DEPRECATED_SLOT\":{\"custom:oz-renamed-from\":\"_PERMIT_TYPEHASH\",\"details\":\"In previous versions `_PERMIT_TYPEHASH` was declared as `immutable`. However, to ensure consistency with the upgradeable transpiler, we will continue to reserve a slot.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":\"ERC20Permit\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0xac6c2efc64baccbde4904ae18ed45139c9aa8cff96d6888344d1e4d2eb8b659f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e416a280c610b6b7a5f158e4a41aacfaec01ef14d5d1de13b46be9e090265fc\",\"dweb:/ipfs/QmYZP2KrdyccBbhLZT42auhvBTMkwiwUS3V6HWb42rbwbG\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15\",\"dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":{\"keccak256\":\"0x36c00327e3f9afd929cc2721aaa111ab57eff78a630cc364b279ad576b899295\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5bf927f4c8b71a5809be184c3107b915b0445ab2c4a33208331e5376692eb5a\",\"dweb:/ipfs/QmVXirsCY1sf4kodhbL6w3NWZkeZeaMuQB7M6DBAdZNqFE\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0xec63854014a5b4f2b3290ab9103a21bdf902a508d0f41a8573fea49e98bf571a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc5b5dc12fbc4002f282eaa7a5f06d8310ed62c1c77c5770f6283e058454c39a\",\"dweb:/ipfs/Qme9rE2wS3yBuyJq9GgbmzbsBQsW2M2sVFqYYLw7bosGrv\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0xc0e310c163edf15db45d4ff938113ab357f94fa86e61ea8e790853c4d2e13256\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://04db5bc05dcb05ba1f6ca2dfbead17adc8a2e2f911aa80b05e7a36d9eaf96516\",\"dweb:/ipfs/QmVkfHZbXVBUPsTopueCn3qGJX8aEjahFF3Fn4NcygLNm5\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e26daf81e2252dc1fe1ce0e4b55c2eb7c6d1ee84ae6558d1a9554432ea1d32da\",\"dweb:/ipfs/Qmb1UANWiWq5pCKbmHSu772hd4nt374dVaghGmwSVNuk8Q\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x809bc3edb4bcbef8263fa616c1b60ee0004b50a8a1bfa164d8f57fd31f520c58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b93a1e39a4a19eba1600b92c96f435442db88cac91e315c8291547a2a7bcfe2\",\"dweb:/ipfs/QmTm34KVe6uZBZwq8dZDNWwPcm24qBJdxqL3rPxBJ4LrMv\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x8432884527a7ad91e6eed1cfc5a0811ae2073e5bca107bd0ca442e9236b03dbd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e3aa0eadab7aafcf91a95684765f778f64386f0368de88522ce873c21385278a\",\"dweb:/ipfs/QmPfaVAqWgH1QsT3dHVuL6jwMZbVKdoP8w1PvpiPT2FPWd\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol":{"ERC20Votes":{"abi":[{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegator","type":"address"},{"indexed":true,"internalType":"address","name":"fromDelegate","type":"address"},{"indexed":true,"internalType":"address","name":"toDelegate","type":"address"}],"name":"DelegateChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegate","type":"address"},{"indexed":false,"internalType":"uint256","name":"previousBalance","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newBalance","type":"uint256"}],"name":"DelegateVotesChanged","type":"event"},{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[],"name":"CLOCK_MODE","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint32","name":"pos","type":"uint32"}],"name":"checkpoints","outputs":[{"components":[{"internalType":"uint32","name":"fromBlock","type":"uint32"},{"internalType":"uint224","name":"votes","type":"uint224"}],"internalType":"struct ERC20Votes.Checkpoint","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"clock","outputs":[{"internalType":"uint48","name":"","type":"uint48"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"}],"name":"delegate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"uint256","name":"expiry","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"delegateBySig","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"delegates","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"timepoint","type":"uint256"}],"name":"getPastTotalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"timepoint","type":"uint256"}],"name":"getPastVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"getVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"numCheckpoints","outputs":[{"internalType":"uint32","name":"","type":"uint32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"CLOCK_MODE()":"4bf5d7e9","DOMAIN_SEPARATOR()":"3644e515","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","checkpoints(address,uint32)":"f1127ed8","clock()":"91ddadf4","decimals()":"313ce567","decreaseAllowance(address,uint256)":"a457c2d7","delegate(address)":"5c19a95c","delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)":"c3cda520","delegates(address)":"587cde1e","eip712Domain()":"84b0196e","getPastTotalSupply(uint256)":"8e539e8c","getPastVotes(address,uint256)":"3a46b1a8","getVotes(address)":"9ab24eb0","increaseAllowance(address,uint256)":"39509351","name()":"06fdde03","nonces(address)":"7ecebe00","numCheckpoints(address)":"6fcfff45","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fromDelegate\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"toDelegate\",\"type\":\"address\"}],\"name\":\"DelegateChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"previousBalance\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newBalance\",\"type\":\"uint256\"}],\"name\":\"DelegateVotesChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CLOCK_MODE\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"pos\",\"type\":\"uint32\"}],\"name\":\"checkpoints\",\"outputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"fromBlock\",\"type\":\"uint32\"},{\"internalType\":\"uint224\",\"name\":\"votes\",\"type\":\"uint224\"}],\"internalType\":\"struct ERC20Votes.Checkpoint\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"clock\",\"outputs\":[{\"internalType\":\"uint48\",\"name\":\"\",\"type\":\"uint48\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"}],\"name\":\"delegate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"delegateBySig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"delegates\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"timepoint\",\"type\":\"uint256\"}],\"name\":\"getPastTotalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timepoint\",\"type\":\"uint256\"}],\"name\":\"getPastVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"numCheckpoints\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of ERC20 to support Compound-like voting and delegation. This version is more generic than Compound's, and supports token supply up to 2^224^ - 1, while COMP is limited to 2^96^ - 1. NOTE: If exact COMP compatibility is required, use the {ERC20VotesComp} variant of this module. This extension keeps a history (checkpoints) of each account's vote power. Vote power can be delegated either by calling the {delegate} function directly, or by providing a signature to be used with {delegateBySig}. Voting power can be queried through the public accessors {getVotes} and {getPastVotes}. By default, token balance does not account for voting power. This makes transfers cheaper. The downside is that it requires users to delegate to themselves in order to activate checkpoints and have their voting power tracked. _Available since v4.2._\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"DelegateChanged(address,address,address)\":{\"details\":\"Emitted when an account changes their delegate.\"},\"DelegateVotesChanged(address,uint256,uint256)\":{\"details\":\"Emitted when a token transfer or delegate change results in changes to a delegate's number of votes.\"},\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"CLOCK_MODE()\":{\"details\":\"Description of the clock\"},\"DOMAIN_SEPARATOR()\":{\"details\":\"See {IERC20Permit-DOMAIN_SEPARATOR}.\"},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"checkpoints(address,uint32)\":{\"details\":\"Get the `pos`-th checkpoint for `account`.\"},\"clock()\":{\"details\":\"Clock used for flagging checkpoints. Can be overridden to implement timestamp based checkpoints (and voting).\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"delegate(address)\":{\"details\":\"Delegate votes from the sender to `delegatee`.\"},\"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Delegates votes from signer to `delegatee`\"},\"delegates(address)\":{\"details\":\"Get the address `account` is currently delegating to.\"},\"eip712Domain()\":{\"details\":\"See {EIP-5267}. _Available since v4.9._\"},\"getPastTotalSupply(uint256)\":{\"details\":\"Retrieve the `totalSupply` at the end of `timepoint`. Note, this value is the sum of all balances. It is NOT the sum of all the delegated votes! Requirements: - `timepoint` must be in the past\"},\"getPastVotes(address,uint256)\":{\"details\":\"Retrieve the number of votes for `account` at the end of `timepoint`. Requirements: - `timepoint` must be in the past\"},\"getVotes(address)\":{\"details\":\"Gets the current votes balance for `account`\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"nonces(address)\":{\"details\":\"See {IERC20Permit-nonces}.\"},\"numCheckpoints(address)\":{\"details\":\"Get number of checkpoints for `account`.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"See {IERC20Permit-permit}.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol\":\"ERC20Votes\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/governance/utils/IVotes.sol\":{\"keccak256\":\"0x1618ddebe73377660f6da71afcba35d5ac4c4600918b3a381d9c6f37eba613eb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://666c8d7c62478b55e082f1835275b7acfc1595491998df6d67183ff2c70eab96\",\"dweb:/ipfs/QmVXmnXfxNaLhoX283dqyKJ8DJbF5thUd9sMuRoFpNMwr7\"]},\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0xac6c2efc64baccbde4904ae18ed45139c9aa8cff96d6888344d1e4d2eb8b659f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e416a280c610b6b7a5f158e4a41aacfaec01ef14d5d1de13b46be9e090265fc\",\"dweb:/ipfs/QmYZP2KrdyccBbhLZT42auhvBTMkwiwUS3V6HWb42rbwbG\"]},\"@openzeppelin/contracts/interfaces/IERC5805.sol\":{\"keccak256\":\"0xfc12b717f6a2cd0d67adc8700097d4464d37f18ce933d4fc9c948ab6aec35e80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://82386e69ebe902a2edfd4f8a5ecbeaeb2e00f6cc6481a973729e974373fb492e\",\"dweb:/ipfs/QmSXg4wBMBd83mQvkekT1GsiRX2Qyv5gvrqzv5qJx2M7Kc\"]},\"@openzeppelin/contracts/interfaces/IERC6372.sol\":{\"keccak256\":\"0xcaea9aeda3816ba872358c828f4f01455c22ae48ced49c4c7d72bd74176c09b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://16ff22d8df5aee94510ee43d361b6147caef164941a684cedcb75be44f351fe6\",\"dweb:/ipfs/QmaCCwMdHVdPApuEJHLZapSJyA7mp5dAugpma3VUzWGd8E\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15\",\"dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":{\"keccak256\":\"0x36c00327e3f9afd929cc2721aaa111ab57eff78a630cc364b279ad576b899295\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5bf927f4c8b71a5809be184c3107b915b0445ab2c4a33208331e5376692eb5a\",\"dweb:/ipfs/QmVXirsCY1sf4kodhbL6w3NWZkeZeaMuQB7M6DBAdZNqFE\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol\":{\"keccak256\":\"0x4e560f86662b6f72ab76122fff53317677154f14bac4a80dbd46a54172b3abfa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ca5c2518d247417cb01164f04eff57b7e87b5346bc03478ada916f26117aa7fd\",\"dweb:/ipfs/QmVgK66XGZCiH9x4mhqejKUTujtu68DyE6KrYi6MPuaHRJ\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0xec63854014a5b4f2b3290ab9103a21bdf902a508d0f41a8573fea49e98bf571a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc5b5dc12fbc4002f282eaa7a5f06d8310ed62c1c77c5770f6283e058454c39a\",\"dweb:/ipfs/Qme9rE2wS3yBuyJq9GgbmzbsBQsW2M2sVFqYYLw7bosGrv\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0xc0e310c163edf15db45d4ff938113ab357f94fa86e61ea8e790853c4d2e13256\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://04db5bc05dcb05ba1f6ca2dfbead17adc8a2e2f911aa80b05e7a36d9eaf96516\",\"dweb:/ipfs/QmVkfHZbXVBUPsTopueCn3qGJX8aEjahFF3Fn4NcygLNm5\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e26daf81e2252dc1fe1ce0e4b55c2eb7c6d1ee84ae6558d1a9554432ea1d32da\",\"dweb:/ipfs/Qmb1UANWiWq5pCKbmHSu772hd4nt374dVaghGmwSVNuk8Q\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x809bc3edb4bcbef8263fa616c1b60ee0004b50a8a1bfa164d8f57fd31f520c58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b93a1e39a4a19eba1600b92c96f435442db88cac91e315c8291547a2a7bcfe2\",\"dweb:/ipfs/QmTm34KVe6uZBZwq8dZDNWwPcm24qBJdxqL3rPxBJ4LrMv\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x8432884527a7ad91e6eed1cfc5a0811ae2073e5bca107bd0ca442e9236b03dbd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e3aa0eadab7aafcf91a95684765f778f64386f0368de88522ce873c21385278a\",\"dweb:/ipfs/QmPfaVAqWgH1QsT3dHVuL6jwMZbVKdoP8w1PvpiPT2FPWd\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://495145362c7ff1c9ca88c58bbbbcb412e3c2004406647412394486552ff6c278\",\"dweb:/ipfs/QmNNCeng6d5eRPDn6tkWSQhjE39XWfQEfjA63rRwHmr1iH\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"IERC20Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"IERC20Permit":{"abi":[{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","nonces(address)":"7ecebe00","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section].\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":\"IERC20Permit\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0xec63854014a5b4f2b3290ab9103a21bdf902a508d0f41a8573fea49e98bf571a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc5b5dc12fbc4002f282eaa7a5f06d8310ed62c1c77c5770f6283e058454c39a\",\"dweb:/ipfs/Qme9rE2wS3yBuyJq9GgbmzbsBQsW2M2sVFqYYLw7bosGrv\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Counters.sol":{"Counters":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f4830d7f86e1ab2f8303d17696b97e631053fd399cf240c2d50ef4c88fdba17564736f6c63430008130033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DELEGATECALL DUP4 0xD PUSH32 0x86E1AB2F8303D17696B97E631053FD399CF240C2D50EF4C88FDBA17564736F6C PUSH4 0x43000813 STOP CALLER ","sourceMap":"424:971:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f4830d7f86e1ab2f8303d17696b97e631053fd399cf240c2d50ef4c88fdba17564736f6c63430008130033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DELEGATECALL DUP4 0xD PUSH32 0x86E1AB2F8303D17696B97E631053FD399CF240C2D50EF4C88FDBA17564736F6C PUSH4 0x43000813 STOP CALLER ","sourceMap":"424:971:13:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Matt Condon (@shrugs)\",\"details\":\"Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number of elements in a mapping, issuing ERC721 ids, or counting request ids. Include with `using Counters for Counters.Counter;`\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Counters\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Counters.sol\":\"Counters\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/ShortStrings.sol":{"ShortStrings":{"abi":[{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212207b070ef87ce2a8f6655559d6f80d60474a249a271498b7f3a2015ffd3f9e066a64736f6c63430008130033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH28 0x70EF87CE2A8F6655559D6F80D60474A249A271498B7F3A2015FFD3F SWAP15 MOD PUSH11 0x64736F6C63430008130033 ","sourceMap":"1235:3050:14:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212207b070ef87ce2a8f6655559d6f80d60474a249a271498b7f3a2015ffd3f9e066a64736f6c63430008130033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH28 0x70EF87CE2A8F6655559D6F80D60474A249A271498B7F3A2015FFD3F SWAP15 MOD PUSH11 0x64736F6C63430008130033 ","sourceMap":"1235:3050:14:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"This library provides functions to convert short memory strings into a `ShortString` type that can be used as an immutable variable. Strings of arbitrary length can be optimized using this library if they are short enough (up to 31 bytes) by packing them with their length (1 byte) in a single EVM word (32 bytes). Additionally, a fallback mechanism can be used for every other case. Usage example: ```solidity contract Named {     using ShortStrings for *;     ShortString private immutable _name;     string private _nameFallback;     constructor(string memory contractName) {         _name = contractName.toShortStringWithFallback(_nameFallback);     }     function name() external view returns (string memory) {         return _name.toStringWithFallback(_nameFallback);     } } ```\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/ShortStrings.sol\":\"ShortStrings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0xc0e310c163edf15db45d4ff938113ab357f94fa86e61ea8e790853c4d2e13256\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://04db5bc05dcb05ba1f6ca2dfbead17adc8a2e2f911aa80b05e7a36d9eaf96516\",\"dweb:/ipfs/QmVkfHZbXVBUPsTopueCn3qGJX8aEjahFF3Fn4NcygLNm5\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e26daf81e2252dc1fe1ce0e4b55c2eb7c6d1ee84ae6558d1a9554432ea1d32da\",\"dweb:/ipfs/Qmb1UANWiWq5pCKbmHSu772hd4nt374dVaghGmwSVNuk8Q\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/StorageSlot.sol":{"StorageSlot":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220de3e60cdc53314b0ae090b838b61b0190ca9e6b6d81ecbb92c2aaba523949c5764736f6c63430008130033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDE RETURNDATACOPY PUSH1 0xCD 0xC5 CALLER EQ 0xB0 0xAE MULMOD SIGNEXTEND DUP4 DUP12 PUSH2 0xB019 0xC 0xA9 0xE6 0xB6 0xD8 0x1E 0xCB 0xB9 0x2C 0x2A 0xAB 0xA5 0x23 SWAP5 SWAP13 JUMPI PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ","sourceMap":"1420:2685:15:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220de3e60cdc53314b0ae090b838b61b0190ca9e6b6d81ecbb92c2aaba523949c5764736f6c63430008130033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDE RETURNDATACOPY PUSH1 0xCD 0xC5 CALLER EQ 0xB0 0xAE MULMOD SIGNEXTEND DUP4 DUP12 PUSH2 0xB019 0xC 0xA9 0xE6 0xB6 0xD8 0x1E 0xCB 0xB9 0x2C 0x2A 0xAB 0xA5 0x23 SWAP5 SWAP13 JUMPI PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ","sourceMap":"1420:2685:15:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._ _Available since v4.9 for `string`, `bytes`._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":\"StorageSlot\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e26daf81e2252dc1fe1ce0e4b55c2eb7c6d1ee84ae6558d1a9554432ea1d32da\",\"dweb:/ipfs/Qmb1UANWiWq5pCKbmHSu772hd4nt374dVaghGmwSVNuk8Q\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Strings.sol":{"Strings":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f2e3c639b25fe7dd66051b150ad6d4fc54abc0bdf00877d2fe20dbd83f94120864736f6c63430008130033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLCODE 0xE3 0xC6 CODECOPY 0xB2 0x5F 0xE7 0xDD PUSH7 0x51B150AD6D4FC SLOAD 0xAB 0xC0 0xBD CREATE ADDMOD PUSH24 0xD2FE20DBD83F94120864736F6C6343000813003300000000 ","sourceMap":"220:2559:16:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f2e3c639b25fe7dd66051b150ad6d4fc54abc0bdf00877d2fe20dbd83f94120864736f6c63430008130033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLCODE 0xE3 0xC6 CODECOPY 0xB2 0x5F 0xE7 0xDD PUSH7 0x51B150AD6D4FC SLOAD 0xAB 0xC0 0xBD CREATE ADDMOD PUSH24 0xD2FE20DBD83F94120864736F6C6343000813003300000000 ","sourceMap":"220:2559:16:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"ECDSA":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212200468ec4e68b53763f4fc021fa73ef5c205c3262d5178f6d60a3ae453330290f364736f6c63430008130033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DIV PUSH9 0xEC4E68B53763F4FC02 0x1F 0xA7 RETURNDATACOPY CREATE2 0xC2 SDIV 0xC3 0x26 0x2D MLOAD PUSH25 0xF6D60A3AE453330290F364736F6C6343000813003300000000 ","sourceMap":"369:8761:17:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212200468ec4e68b53763f4fc021fa73ef5c205c3262d5178f6d60a3ae453330290f364736f6c63430008130033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DIV PUSH9 0xEC4E68B53763F4FC02 0x1F 0xA7 RETURNDATACOPY CREATE2 0xC2 SDIV 0xC3 0x26 0x2D MLOAD PUSH25 0xF6D60A3AE453330290F364736F6C6343000813003300000000 ","sourceMap":"369:8761:17:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":\"ECDSA\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x809bc3edb4bcbef8263fa616c1b60ee0004b50a8a1bfa164d8f57fd31f520c58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b93a1e39a4a19eba1600b92c96f435442db88cac91e315c8291547a2a7bcfe2\",\"dweb:/ipfs/QmTm34KVe6uZBZwq8dZDNWwPcm24qBJdxqL3rPxBJ4LrMv\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/EIP712.sol":{"EIP712":{"abi":[{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"},{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"eip712Domain()":"84b0196e"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"state-variable-immutable state-variable-assignment\",\"details\":\"https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data. The encoding specified in the EIP is very generic, and such a generic implementation in Solidity is not feasible, thus this contract does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in their contracts using a combination of `abi.encode` and `keccak256`. This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA ({_hashTypedDataV4}). The implementation of the domain separator was designed to be as efficient as possible while still properly updating the chain id to protect against replay attacks on an eventual fork of the chain. NOTE: This contract implements the version of the encoding known as \\\"v4\\\", as implemented by the JSON RPC method https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask]. NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain separator of the implementation contract. This will cause the `_domainSeparatorV4` function to always rebuild the separator from the immutable values, which is cheaper than accessing a cached version in cold storage. _Available since v3.4._\",\"events\":{\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the domain separator and parameter caches. The meaning of `name` and `version` is specified in https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP 712]: - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol. - `version`: the current major version of the signing domain. NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart contract upgrade].\"},\"eip712Domain()\":{\"details\":\"See {EIP-5267}. _Available since v4.9._\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":\"EIP712\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0xac6c2efc64baccbde4904ae18ed45139c9aa8cff96d6888344d1e4d2eb8b659f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e416a280c610b6b7a5f158e4a41aacfaec01ef14d5d1de13b46be9e090265fc\",\"dweb:/ipfs/QmYZP2KrdyccBbhLZT42auhvBTMkwiwUS3V6HWb42rbwbG\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0xc0e310c163edf15db45d4ff938113ab357f94fa86e61ea8e790853c4d2e13256\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://04db5bc05dcb05ba1f6ca2dfbead17adc8a2e2f911aa80b05e7a36d9eaf96516\",\"dweb:/ipfs/QmVkfHZbXVBUPsTopueCn3qGJX8aEjahFF3Fn4NcygLNm5\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e26daf81e2252dc1fe1ce0e4b55c2eb7c6d1ee84ae6558d1a9554432ea1d32da\",\"dweb:/ipfs/Qmb1UANWiWq5pCKbmHSu772hd4nt374dVaghGmwSVNuk8Q\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x809bc3edb4bcbef8263fa616c1b60ee0004b50a8a1bfa164d8f57fd31f520c58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b93a1e39a4a19eba1600b92c96f435442db88cac91e315c8291547a2a7bcfe2\",\"dweb:/ipfs/QmTm34KVe6uZBZwq8dZDNWwPcm24qBJdxqL3rPxBJ4LrMv\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x8432884527a7ad91e6eed1cfc5a0811ae2073e5bca107bd0ca442e9236b03dbd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e3aa0eadab7aafcf91a95684765f778f64386f0368de88522ce873c21385278a\",\"dweb:/ipfs/QmPfaVAqWgH1QsT3dHVuL6jwMZbVKdoP8w1PvpiPT2FPWd\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e43ca308c8369fc15a2001a17a85cff4ee9a28330f9ae1e7ff2b25f2c22eb12f64736f6c63430008130033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE4 EXTCODECOPY LOG3 ADDMOD 0xC8 CALLDATASIZE SWAP16 0xC1 GAS KECCAK256 ADD LOG1 PUSH27 0x85CFF4EE9A28330F9AE1E7FF2B25F2C22EB12F64736F6C63430008 SGT STOP CALLER ","sourceMap":"202:12582:19:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e43ca308c8369fc15a2001a17a85cff4ee9a28330f9ae1e7ff2b25f2c22eb12f64736f6c63430008130033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE4 EXTCODECOPY LOG3 ADDMOD 0xC8 CALLDATASIZE SWAP16 0xC1 GAS KECCAK256 ADD LOG1 PUSH27 0x85CFF4EE9A28330F9AE1E7FF2B25F2C22EB12F64736F6C63430008 SGT STOP CALLER ","sourceMap":"202:12582:19:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"SafeCast":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220935371652a90687c4b4e6e122c650baa6ce0b117f4997686b3c8a7857a4440f564736f6c63430008130033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP4 MSTORE8 PUSH18 0x652A90687C4B4E6E122C650BAA6CE0B117F4 SWAP10 PUSH23 0x86B3C8A7857A4440F564736F6C63430008130033000000 ","sourceMap":"927:34153:20:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220935371652a90687c4b4e6e122c650baa6ce0b117f4997686b3c8a7857a4440f564736f6c63430008130033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP4 MSTORE8 PUSH18 0x652A90687C4B4E6E122C650BAA6CE0B117F4 SWAP10 PUSH23 0x86B3C8A7857A4440F564736F6C63430008130033000000 ","sourceMap":"927:34153:20:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's uintXX/intXX casting operators with added overflow checks. Downcasting from uint256/int256 in Solidity does not revert on overflow. This can easily result in undesired exploitation or bugs, since developers usually assume that overflows raise errors. `SafeCast` restores this intuition by reverting the transaction when such an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always. Can be combined with {SafeMath} and {SignedSafeMath} to extend it to smaller types, by performing all math on `uint256` and `int256` and then downcasting.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":\"SafeCast\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://495145362c7ff1c9ca88c58bbbbcb412e3c2004406647412394486552ff6c278\",\"dweb:/ipfs/QmNNCeng6d5eRPDn6tkWSQhjE39XWfQEfjA63rRwHmr1iH\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"SignedMath":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208033b5a6c324fdcc20d0911e83115e8bf3b22b861b07464c80cb392818b4cfcd64736f6c63430008130033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP1 CALLER 0xB5 0xA6 0xC3 0x24 REVERT 0xCC KECCAK256 0xD0 SWAP2 0x1E DUP4 GT 0x5E DUP12 RETURN 0xB2 0x2B DUP7 SHL SMOD CHAINID 0x4C DUP1 0xCB CODECOPY 0x28 XOR 0xB4 0xCF 0xCD PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ","sourceMap":"215:1047:21:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208033b5a6c324fdcc20d0911e83115e8bf3b22b861b07464c80cb392818b4cfcd64736f6c63430008130033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP1 CALLER 0xB5 0xA6 0xC3 0x24 REVERT 0xCC KECCAK256 0xD0 SWAP2 0x1E DUP4 GT 0x5E DUP12 RETURN 0xB2 0x2B DUP7 SHL SMOD CHAINID 0x4C DUP1 0xCB CODECOPY 0x28 XOR 0xB4 0xCF 0xCD PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ","sourceMap":"215:1047:21:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}"}},"contracts/Token.sol":{"Token":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegator","type":"address"},{"indexed":true,"internalType":"address","name":"fromDelegate","type":"address"},{"indexed":true,"internalType":"address","name":"toDelegate","type":"address"}],"name":"DelegateChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegate","type":"address"},{"indexed":false,"internalType":"uint256","name":"previousBalance","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newBalance","type":"uint256"}],"name":"DelegateVotesChanged","type":"event"},{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[],"name":"CLOCK_MODE","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint32","name":"pos","type":"uint32"}],"name":"checkpoints","outputs":[{"components":[{"internalType":"uint32","name":"fromBlock","type":"uint32"},{"internalType":"uint224","name":"votes","type":"uint224"}],"internalType":"struct ERC20Votes.Checkpoint","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"clock","outputs":[{"internalType":"uint48","name":"","type":"uint48"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"}],"name":"delegate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"uint256","name":"expiry","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"delegateBySig","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"delegates","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"timepoint","type":"uint256"}],"name":"getPastTotalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"timepoint","type":"uint256"}],"name":"getPastVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"getVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"numCheckpoints","outputs":[{"internalType":"uint32","name":"","type":"uint32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_23":{"entryPoint":null,"id":23,"parameterSlots":0,"returnSlots":0},"@_284":{"entryPoint":null,"id":284,"parameterSlots":2,"returnSlots":0},"@_2984":{"entryPoint":null,"id":2984,"parameterSlots":2,"returnSlots":0},"@_5642":{"entryPoint":null,"id":5642,"parameterSlots":0,"returnSlots":0},"@_946":{"entryPoint":null,"id":946,"parameterSlots":1,"returnSlots":0},"@_add_1780":{"entryPoint":1642,"id":1780,"parameterSlots":2,"returnSlots":1},"@_afterTokenTransfer_1555":{"entryPoint":2726,"id":1555,"parameterSlots":3,"returnSlots":0},"@_afterTokenTransfer_5663":{"entryPoint":2461,"id":5663,"parameterSlots":3,"returnSlots":0},"@_afterTokenTransfer_825":{"entryPoint":2889,"id":825,"parameterSlots":3,"returnSlots":0},"@_beforeTokenTransfer_814":{"entryPoint":2456,"id":814,"parameterSlots":3,"returnSlots":0},"@_buildDomainSeparator_3031":{"entryPoint":606,"id":3031,"parameterSlots":0,"returnSlots":1},"@_maxSupply_1470":{"entryPoint":1596,"id":1470,"parameterSlots":0,"returnSlots":1},"@_mint_1502":{"entryPoint":1046,"id":1502,"parameterSlots":2,"returnSlots":0},"@_mint_5681":{"entryPoint":905,"id":5681,"parameterSlots":2,"returnSlots":0},"@_mint_643":{"entryPoint":1231,"id":643,"parameterSlots":2,"returnSlots":0},"@_moveVotingPower_1665":{"entryPoint":2999,"id":1665,"parameterSlots":3,"returnSlots":0},"@_msgSender_1886":{"entryPoint":699,"id":1886,"parameterSlots":0,"returnSlots":1},"@_subtract_1794":{"entryPoint":3546,"id":1794,"parameterSlots":2,"returnSlots":1},"@_transferOwnership_111":{"entryPoint":707,"id":111,"parameterSlots":1,"returnSlots":0},"@_unsafeAccess_1809":{"entryPoint":2485,"id":1809,"parameterSlots":2,"returnSlots":1},"@_writeCheckpoint_1766":{"entryPoint":1666,"id":1766,"parameterSlots":3,"returnSlots":2},"@clock_1126":{"entryPoint":2506,"id":1126,"parameterSlots":0,"returnSlots":1},"@delegates_1194":{"entryPoint":2894,"id":1194,"parameterSlots":1,"returnSlots":1},"@getStringSlot_2273":{"entryPoint":1036,"id":2273,"parameterSlots":1,"returnSlots":1},"@toShortStringWithFallback_2127":{"entryPoint":518,"id":2127,"parameterSlots":2,"returnSlots":1},"@toShortString_2029":{"entryPoint":927,"id":2029,"parameterSlots":1,"returnSlots":1},"@toUint224_4064":{"entryPoint":2530,"id":4064,"parameterSlots":1,"returnSlots":1},"@toUint32_4664":{"entryPoint":2640,"id":4664,"parameterSlots":1,"returnSlots":1},"@toUint48_4614":{"entryPoint":2801,"id":4614,"parameterSlots":1,"returnSlots":1},"@totalSupply_324":{"entryPoint":1632,"id":324,"parameterSlots":0,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":4531,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32_fromStack":{"entryPoint":4445,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":4719,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_599034f9324dd4e988c6cea5a00a30f53147fec1b01559682f18cd840028f495_to_t_string_memory_ptr_fromStack":{"entryPoint":5766,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_97859f657b3d95198b68f29ae96ee966779795bec3ef1e76700d2d39fefd7699_to_t_string_memory_ptr_fromStack":{"entryPoint":5061,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79_to_t_string_memory_ptr_fromStack":{"entryPoint":5462,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19_to_t_string_memory_ptr_fromStack":{"entryPoint":5614,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack":{"entryPoint":5175,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":4462,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed":{"entryPoint":4548,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4784,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_599034f9324dd4e988c6cea5a00a30f53147fec1b01559682f18cd840028f495__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":5805,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_97859f657b3d95198b68f29ae96ee966779795bec3ef1e76700d2d39fefd7699__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":5100,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":5501,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":5653,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":5214,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":5354,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":5839,"id":null,"parameterSlots":3,"returnSlots":1},"array_dataslot_t_bytes_memory_ptr":{"entryPoint":4831,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_string_storage":{"entryPoint":3728,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":4820,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":3570,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":4641,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":5295,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":5884,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_t_string_storage":{"entryPoint":4049,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_t_address":{"entryPoint":4511,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":4435,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":4479,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":3864,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_t_bytes1":{"entryPoint":4010,"id":null,"parameterSlots":2,"returnSlots":0},"convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32":{"entryPoint":4870,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint256_to_t_uint256":{"entryPoint":3884,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":4204,"id":null,"parameterSlots":2,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":4658,"id":null,"parameterSlots":3,"returnSlots":0},"divide_by_32_ceil":{"entryPoint":3749,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":3675,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":4174,"id":null,"parameterSlots":2,"returnSlots":1},"identity":{"entryPoint":3874,"id":null,"parameterSlots":1,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":4142,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":5248,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":3628,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":3581,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_t_uint256":{"entryPoint":3924,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_memoryt_bytes32":{"entryPoint":4847,"id":null,"parameterSlots":1,"returnSlots":1},"round_up_to_mul_of_32":{"entryPoint":4702,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":3765,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":4129,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_t_uint256":{"entryPoint":3982,"id":null,"parameterSlots":2,"returnSlots":0},"store_literal_in_memory_599034f9324dd4e988c6cea5a00a30f53147fec1b01559682f18cd840028f495":{"entryPoint":5687,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_97859f657b3d95198b68f29ae96ee966779795bec3ef1e76700d2d39fefd7699":{"entryPoint":4982,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79":{"entryPoint":5383,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19":{"entryPoint":5535,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e":{"entryPoint":5134,"id":null,"parameterSlots":1,"returnSlots":0},"update_byte_slice_dynamic32":{"entryPoint":3778,"id":null,"parameterSlots":3,"returnSlots":1},"update_storage_value_t_uint256_to_t_uint256":{"entryPoint":3934,"id":null,"parameterSlots":3,"returnSlots":0},"zero_value_for_split_t_uint256":{"entryPoint":3977,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:15069:23","statements":[{"body":{"nodeType":"YulBlock","src":"66:40:23","statements":[{"nodeType":"YulAssignment","src":"77:22:23","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"93:5:23"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"87:5:23"},"nodeType":"YulFunctionCall","src":"87:12:23"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"77:6:23"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"49:5:23","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"59:6:23","type":""}],"src":"7:99:23"},{"body":{"nodeType":"YulBlock","src":"140:152:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"157:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"160:77:23","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"150:6:23"},"nodeType":"YulFunctionCall","src":"150:88:23"},"nodeType":"YulExpressionStatement","src":"150:88:23"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"254:1:23","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"257:4:23","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"247:6:23"},"nodeType":"YulFunctionCall","src":"247:15:23"},"nodeType":"YulExpressionStatement","src":"247:15:23"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"278:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"281:4:23","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"271:6:23"},"nodeType":"YulFunctionCall","src":"271:15:23"},"nodeType":"YulExpressionStatement","src":"271:15:23"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"112:180:23"},{"body":{"nodeType":"YulBlock","src":"326:152:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"343:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"346:77:23","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"336:6:23"},"nodeType":"YulFunctionCall","src":"336:88:23"},"nodeType":"YulExpressionStatement","src":"336:88:23"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"440:1:23","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"443:4:23","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"433:6:23"},"nodeType":"YulFunctionCall","src":"433:15:23"},"nodeType":"YulExpressionStatement","src":"433:15:23"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"464:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"467:4:23","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"457:6:23"},"nodeType":"YulFunctionCall","src":"457:15:23"},"nodeType":"YulExpressionStatement","src":"457:15:23"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"298:180:23"},{"body":{"nodeType":"YulBlock","src":"535:269:23","statements":[{"nodeType":"YulAssignment","src":"545:22:23","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"559:4:23"},{"kind":"number","nodeType":"YulLiteral","src":"565:1:23","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"555:3:23"},"nodeType":"YulFunctionCall","src":"555:12:23"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"545:6:23"}]},{"nodeType":"YulVariableDeclaration","src":"576:38:23","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"606:4:23"},{"kind":"number","nodeType":"YulLiteral","src":"612:1:23","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"602:3:23"},"nodeType":"YulFunctionCall","src":"602:12:23"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"580:18:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"653:51:23","statements":[{"nodeType":"YulAssignment","src":"667:27:23","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"681:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"689:4:23","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"677:3:23"},"nodeType":"YulFunctionCall","src":"677:17:23"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"667:6:23"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"633:18:23"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"626:6:23"},"nodeType":"YulFunctionCall","src":"626:26:23"},"nodeType":"YulIf","src":"623:81:23"},{"body":{"nodeType":"YulBlock","src":"756:42:23","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"770:16:23"},"nodeType":"YulFunctionCall","src":"770:18:23"},"nodeType":"YulExpressionStatement","src":"770:18:23"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"720:18:23"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"743:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"751:2:23","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"740:2:23"},"nodeType":"YulFunctionCall","src":"740:14:23"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"717:2:23"},"nodeType":"YulFunctionCall","src":"717:38:23"},"nodeType":"YulIf","src":"714:84:23"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"519:4:23","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"528:6:23","type":""}],"src":"484:320:23"},{"body":{"nodeType":"YulBlock","src":"864:87:23","statements":[{"nodeType":"YulAssignment","src":"874:11:23","value":{"name":"ptr","nodeType":"YulIdentifier","src":"882:3:23"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"874:4:23"}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"902:1:23","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"905:3:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"895:6:23"},"nodeType":"YulFunctionCall","src":"895:14:23"},"nodeType":"YulExpressionStatement","src":"895:14:23"},{"nodeType":"YulAssignment","src":"918:26:23","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"936:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"939:4:23","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"926:9:23"},"nodeType":"YulFunctionCall","src":"926:18:23"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"918:4:23"}]}]},"name":"array_dataslot_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"851:3:23","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"859:4:23","type":""}],"src":"810:141:23"},{"body":{"nodeType":"YulBlock","src":"1001:49:23","statements":[{"nodeType":"YulAssignment","src":"1011:33:23","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1029:5:23"},{"kind":"number","nodeType":"YulLiteral","src":"1036:2:23","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1025:3:23"},"nodeType":"YulFunctionCall","src":"1025:14:23"},{"kind":"number","nodeType":"YulLiteral","src":"1041:2:23","type":"","value":"32"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"1021:3:23"},"nodeType":"YulFunctionCall","src":"1021:23:23"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"1011:6:23"}]}]},"name":"divide_by_32_ceil","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"984:5:23","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"994:6:23","type":""}],"src":"957:93:23"},{"body":{"nodeType":"YulBlock","src":"1109:54:23","statements":[{"nodeType":"YulAssignment","src":"1119:37:23","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"1144:4:23"},{"name":"value","nodeType":"YulIdentifier","src":"1150:5:23"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1140:3:23"},"nodeType":"YulFunctionCall","src":"1140:16:23"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"1119:8:23"}]}]},"name":"shift_left_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"1084:4:23","type":""},{"name":"value","nodeType":"YulTypedName","src":"1090:5:23","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"1100:8:23","type":""}],"src":"1056:107:23"},{"body":{"nodeType":"YulBlock","src":"1245:317:23","statements":[{"nodeType":"YulVariableDeclaration","src":"1255:35:23","value":{"arguments":[{"name":"shiftBytes","nodeType":"YulIdentifier","src":"1276:10:23"},{"kind":"number","nodeType":"YulLiteral","src":"1288:1:23","type":"","value":"8"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"1272:3:23"},"nodeType":"YulFunctionCall","src":"1272:18:23"},"variables":[{"name":"shiftBits","nodeType":"YulTypedName","src":"1259:9:23","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1299:109:23","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"1330:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"1341:66:23","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"1311:18:23"},"nodeType":"YulFunctionCall","src":"1311:97:23"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"1303:4:23","type":""}]},{"nodeType":"YulAssignment","src":"1417:51:23","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"1448:9:23"},{"name":"toInsert","nodeType":"YulIdentifier","src":"1459:8:23"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"1429:18:23"},"nodeType":"YulFunctionCall","src":"1429:39:23"},"variableNames":[{"name":"toInsert","nodeType":"YulIdentifier","src":"1417:8:23"}]},{"nodeType":"YulAssignment","src":"1477:30:23","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1490:5:23"},{"arguments":[{"name":"mask","nodeType":"YulIdentifier","src":"1501:4:23"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1497:3:23"},"nodeType":"YulFunctionCall","src":"1497:9:23"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1486:3:23"},"nodeType":"YulFunctionCall","src":"1486:21:23"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1477:5:23"}]},{"nodeType":"YulAssignment","src":"1516:40:23","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1529:5:23"},{"arguments":[{"name":"toInsert","nodeType":"YulIdentifier","src":"1540:8:23"},{"name":"mask","nodeType":"YulIdentifier","src":"1550:4:23"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1536:3:23"},"nodeType":"YulFunctionCall","src":"1536:19:23"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"1526:2:23"},"nodeType":"YulFunctionCall","src":"1526:30:23"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"1516:6:23"}]}]},"name":"update_byte_slice_dynamic32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1206:5:23","type":""},{"name":"shiftBytes","nodeType":"YulTypedName","src":"1213:10:23","type":""},{"name":"toInsert","nodeType":"YulTypedName","src":"1225:8:23","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"1238:6:23","type":""}],"src":"1169:393:23"},{"body":{"nodeType":"YulBlock","src":"1613:32:23","statements":[{"nodeType":"YulAssignment","src":"1623:16:23","value":{"name":"value","nodeType":"YulIdentifier","src":"1634:5:23"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1623:7:23"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1595:5:23","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1605:7:23","type":""}],"src":"1568:77:23"},{"body":{"nodeType":"YulBlock","src":"1683:28:23","statements":[{"nodeType":"YulAssignment","src":"1693:12:23","value":{"name":"value","nodeType":"YulIdentifier","src":"1700:5:23"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"1693:3:23"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1669:5:23","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"1679:3:23","type":""}],"src":"1651:60:23"},{"body":{"nodeType":"YulBlock","src":"1777:82:23","statements":[{"nodeType":"YulAssignment","src":"1787:66:23","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1845:5:23"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"1827:17:23"},"nodeType":"YulFunctionCall","src":"1827:24:23"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"1818:8:23"},"nodeType":"YulFunctionCall","src":"1818:34:23"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"1800:17:23"},"nodeType":"YulFunctionCall","src":"1800:53:23"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"1787:9:23"}]}]},"name":"convert_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1757:5:23","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"1767:9:23","type":""}],"src":"1717:142:23"},{"body":{"nodeType":"YulBlock","src":"1912:28:23","statements":[{"nodeType":"YulAssignment","src":"1922:12:23","value":{"name":"value","nodeType":"YulIdentifier","src":"1929:5:23"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"1922:3:23"}]}]},"name":"prepare_store_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1898:5:23","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"1908:3:23","type":""}],"src":"1865:75:23"},{"body":{"nodeType":"YulBlock","src":"2022:193:23","statements":[{"nodeType":"YulVariableDeclaration","src":"2032:63:23","value":{"arguments":[{"name":"value_0","nodeType":"YulIdentifier","src":"2087:7:23"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"2056:30:23"},"nodeType":"YulFunctionCall","src":"2056:39:23"},"variables":[{"name":"convertedValue_0","nodeType":"YulTypedName","src":"2036:16:23","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"2111:4:23"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"2151:4:23"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"2145:5:23"},"nodeType":"YulFunctionCall","src":"2145:11:23"},{"name":"offset","nodeType":"YulIdentifier","src":"2158:6:23"},{"arguments":[{"name":"convertedValue_0","nodeType":"YulIdentifier","src":"2190:16:23"}],"functionName":{"name":"prepare_store_t_uint256","nodeType":"YulIdentifier","src":"2166:23:23"},"nodeType":"YulFunctionCall","src":"2166:41:23"}],"functionName":{"name":"update_byte_slice_dynamic32","nodeType":"YulIdentifier","src":"2117:27:23"},"nodeType":"YulFunctionCall","src":"2117:91:23"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"2104:6:23"},"nodeType":"YulFunctionCall","src":"2104:105:23"},"nodeType":"YulExpressionStatement","src":"2104:105:23"}]},"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"1999:4:23","type":""},{"name":"offset","nodeType":"YulTypedName","src":"2005:6:23","type":""},{"name":"value_0","nodeType":"YulTypedName","src":"2013:7:23","type":""}],"src":"1946:269:23"},{"body":{"nodeType":"YulBlock","src":"2270:24:23","statements":[{"nodeType":"YulAssignment","src":"2280:8:23","value":{"kind":"number","nodeType":"YulLiteral","src":"2287:1:23","type":"","value":"0"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"2280:3:23"}]}]},"name":"zero_value_for_split_t_uint256","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"2266:3:23","type":""}],"src":"2221:73:23"},{"body":{"nodeType":"YulBlock","src":"2353:136:23","statements":[{"nodeType":"YulVariableDeclaration","src":"2363:46:23","value":{"arguments":[],"functionName":{"name":"zero_value_for_split_t_uint256","nodeType":"YulIdentifier","src":"2377:30:23"},"nodeType":"YulFunctionCall","src":"2377:32:23"},"variables":[{"name":"zero_0","nodeType":"YulTypedName","src":"2367:6:23","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"2462:4:23"},{"name":"offset","nodeType":"YulIdentifier","src":"2468:6:23"},{"name":"zero_0","nodeType":"YulIdentifier","src":"2476:6:23"}],"functionName":{"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"2418:43:23"},"nodeType":"YulFunctionCall","src":"2418:65:23"},"nodeType":"YulExpressionStatement","src":"2418:65:23"}]},"name":"storage_set_to_zero_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"2339:4:23","type":""},{"name":"offset","nodeType":"YulTypedName","src":"2345:6:23","type":""}],"src":"2300:189:23"},{"body":{"nodeType":"YulBlock","src":"2545:136:23","statements":[{"body":{"nodeType":"YulBlock","src":"2612:63:23","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"2656:5:23"},{"kind":"number","nodeType":"YulLiteral","src":"2663:1:23","type":"","value":"0"}],"functionName":{"name":"storage_set_to_zero_t_uint256","nodeType":"YulIdentifier","src":"2626:29:23"},"nodeType":"YulFunctionCall","src":"2626:39:23"},"nodeType":"YulExpressionStatement","src":"2626:39:23"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"2565:5:23"},{"name":"end","nodeType":"YulIdentifier","src":"2572:3:23"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2562:2:23"},"nodeType":"YulFunctionCall","src":"2562:14:23"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"2577:26:23","statements":[{"nodeType":"YulAssignment","src":"2579:22:23","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"2592:5:23"},{"kind":"number","nodeType":"YulLiteral","src":"2599:1:23","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2588:3:23"},"nodeType":"YulFunctionCall","src":"2588:13:23"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"2579:5:23"}]}]},"pre":{"nodeType":"YulBlock","src":"2559:2:23","statements":[]},"src":"2555:120:23"}]},"name":"clear_storage_range_t_bytes1","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nodeType":"YulTypedName","src":"2533:5:23","type":""},{"name":"end","nodeType":"YulTypedName","src":"2540:3:23","type":""}],"src":"2495:186:23"},{"body":{"nodeType":"YulBlock","src":"2766:464:23","statements":[{"body":{"nodeType":"YulBlock","src":"2792:431:23","statements":[{"nodeType":"YulVariableDeclaration","src":"2806:54:23","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"2854:5:23"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"2822:31:23"},"nodeType":"YulFunctionCall","src":"2822:38:23"},"variables":[{"name":"dataArea","nodeType":"YulTypedName","src":"2810:8:23","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2873:63:23","value":{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"2896:8:23"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"2924:10:23"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"2906:17:23"},"nodeType":"YulFunctionCall","src":"2906:29:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2892:3:23"},"nodeType":"YulFunctionCall","src":"2892:44:23"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"2877:11:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"3093:27:23","statements":[{"nodeType":"YulAssignment","src":"3095:23:23","value":{"name":"dataArea","nodeType":"YulIdentifier","src":"3110:8:23"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"3095:11:23"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"3077:10:23"},{"kind":"number","nodeType":"YulLiteral","src":"3089:2:23","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3074:2:23"},"nodeType":"YulFunctionCall","src":"3074:18:23"},"nodeType":"YulIf","src":"3071:49:23"},{"expression":{"arguments":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"3162:11:23"},{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"3179:8:23"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"3207:3:23"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"3189:17:23"},"nodeType":"YulFunctionCall","src":"3189:22:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3175:3:23"},"nodeType":"YulFunctionCall","src":"3175:37:23"}],"functionName":{"name":"clear_storage_range_t_bytes1","nodeType":"YulIdentifier","src":"3133:28:23"},"nodeType":"YulFunctionCall","src":"3133:80:23"},"nodeType":"YulExpressionStatement","src":"3133:80:23"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"2783:3:23"},{"kind":"number","nodeType":"YulLiteral","src":"2788:2:23","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2780:2:23"},"nodeType":"YulFunctionCall","src":"2780:11:23"},"nodeType":"YulIf","src":"2777:446:23"}]},"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"2742:5:23","type":""},{"name":"len","nodeType":"YulTypedName","src":"2749:3:23","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"2754:10:23","type":""}],"src":"2687:543:23"},{"body":{"nodeType":"YulBlock","src":"3299:54:23","statements":[{"nodeType":"YulAssignment","src":"3309:37:23","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"3334:4:23"},{"name":"value","nodeType":"YulIdentifier","src":"3340:5:23"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"3330:3:23"},"nodeType":"YulFunctionCall","src":"3330:16:23"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"3309:8:23"}]}]},"name":"shift_right_unsigned_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"3274:4:23","type":""},{"name":"value","nodeType":"YulTypedName","src":"3280:5:23","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"3290:8:23","type":""}],"src":"3236:117:23"},{"body":{"nodeType":"YulBlock","src":"3410:118:23","statements":[{"nodeType":"YulVariableDeclaration","src":"3420:68:23","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3469:1:23","type":"","value":"8"},{"name":"bytes","nodeType":"YulIdentifier","src":"3472:5:23"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"3465:3:23"},"nodeType":"YulFunctionCall","src":"3465:13:23"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3484:1:23","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3480:3:23"},"nodeType":"YulFunctionCall","src":"3480:6:23"}],"functionName":{"name":"shift_right_unsigned_dynamic","nodeType":"YulIdentifier","src":"3436:28:23"},"nodeType":"YulFunctionCall","src":"3436:51:23"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3432:3:23"},"nodeType":"YulFunctionCall","src":"3432:56:23"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"3424:4:23","type":""}]},{"nodeType":"YulAssignment","src":"3497:25:23","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3511:4:23"},{"name":"mask","nodeType":"YulIdentifier","src":"3517:4:23"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3507:3:23"},"nodeType":"YulFunctionCall","src":"3507:15:23"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"3497:6:23"}]}]},"name":"mask_bytes_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"3387:4:23","type":""},{"name":"bytes","nodeType":"YulTypedName","src":"3393:5:23","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"3403:6:23","type":""}],"src":"3359:169:23"},{"body":{"nodeType":"YulBlock","src":"3614:214:23","statements":[{"nodeType":"YulAssignment","src":"3747:37:23","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3774:4:23"},{"name":"len","nodeType":"YulIdentifier","src":"3780:3:23"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"3755:18:23"},"nodeType":"YulFunctionCall","src":"3755:29:23"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"3747:4:23"}]},{"nodeType":"YulAssignment","src":"3793:29:23","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3804:4:23"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3814:1:23","type":"","value":"2"},{"name":"len","nodeType":"YulIdentifier","src":"3817:3:23"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"3810:3:23"},"nodeType":"YulFunctionCall","src":"3810:11:23"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"3801:2:23"},"nodeType":"YulFunctionCall","src":"3801:21:23"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"3793:4:23"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"3595:4:23","type":""},{"name":"len","nodeType":"YulTypedName","src":"3601:3:23","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"3609:4:23","type":""}],"src":"3533:295:23"},{"body":{"nodeType":"YulBlock","src":"3925:1303:23","statements":[{"nodeType":"YulVariableDeclaration","src":"3936:51:23","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3983:3:23"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"3950:32:23"},"nodeType":"YulFunctionCall","src":"3950:37:23"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"3940:6:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"4072:22:23","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"4074:16:23"},"nodeType":"YulFunctionCall","src":"4074:18:23"},"nodeType":"YulExpressionStatement","src":"4074:18:23"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"4044:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"4052:18:23","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4041:2:23"},"nodeType":"YulFunctionCall","src":"4041:30:23"},"nodeType":"YulIf","src":"4038:56:23"},{"nodeType":"YulVariableDeclaration","src":"4104:52:23","value":{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"4150:4:23"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"4144:5:23"},"nodeType":"YulFunctionCall","src":"4144:11:23"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"4118:25:23"},"nodeType":"YulFunctionCall","src":"4118:38:23"},"variables":[{"name":"oldLen","nodeType":"YulTypedName","src":"4108:6:23","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"4249:4:23"},{"name":"oldLen","nodeType":"YulIdentifier","src":"4255:6:23"},{"name":"newLen","nodeType":"YulIdentifier","src":"4263:6:23"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulIdentifier","src":"4203:45:23"},"nodeType":"YulFunctionCall","src":"4203:67:23"},"nodeType":"YulExpressionStatement","src":"4203:67:23"},{"nodeType":"YulVariableDeclaration","src":"4280:18:23","value":{"kind":"number","nodeType":"YulLiteral","src":"4297:1:23","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"4284:9:23","type":""}]},{"nodeType":"YulAssignment","src":"4308:17:23","value":{"kind":"number","nodeType":"YulLiteral","src":"4321:4:23","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"4308:9:23"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"4372:611:23","statements":[{"nodeType":"YulVariableDeclaration","src":"4386:37:23","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"4405:6:23"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4417:4:23","type":"","value":"0x1f"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4413:3:23"},"nodeType":"YulFunctionCall","src":"4413:9:23"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4401:3:23"},"nodeType":"YulFunctionCall","src":"4401:22:23"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"4390:7:23","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4437:51:23","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"4483:4:23"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"4451:31:23"},"nodeType":"YulFunctionCall","src":"4451:37:23"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"4441:6:23","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4501:10:23","value":{"kind":"number","nodeType":"YulLiteral","src":"4510:1:23","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"4505:1:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"4569:163:23","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"4594:6:23"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4612:3:23"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"4617:9:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4608:3:23"},"nodeType":"YulFunctionCall","src":"4608:19:23"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4602:5:23"},"nodeType":"YulFunctionCall","src":"4602:26:23"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"4587:6:23"},"nodeType":"YulFunctionCall","src":"4587:42:23"},"nodeType":"YulExpressionStatement","src":"4587:42:23"},{"nodeType":"YulAssignment","src":"4646:24:23","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"4660:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"4668:1:23","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4656:3:23"},"nodeType":"YulFunctionCall","src":"4656:14:23"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"4646:6:23"}]},{"nodeType":"YulAssignment","src":"4687:31:23","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"4704:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"4715:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4700:3:23"},"nodeType":"YulFunctionCall","src":"4700:18:23"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"4687:9:23"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"4535:1:23"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"4538:7:23"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4532:2:23"},"nodeType":"YulFunctionCall","src":"4532:14:23"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"4547:21:23","statements":[{"nodeType":"YulAssignment","src":"4549:17:23","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"4558:1:23"},{"kind":"number","nodeType":"YulLiteral","src":"4561:4:23","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4554:3:23"},"nodeType":"YulFunctionCall","src":"4554:12:23"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"4549:1:23"}]}]},"pre":{"nodeType":"YulBlock","src":"4528:3:23","statements":[]},"src":"4524:208:23"},{"body":{"nodeType":"YulBlock","src":"4768:156:23","statements":[{"nodeType":"YulVariableDeclaration","src":"4786:43:23","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4813:3:23"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"4818:9:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4809:3:23"},"nodeType":"YulFunctionCall","src":"4809:19:23"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4803:5:23"},"nodeType":"YulFunctionCall","src":"4803:26:23"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"4790:9:23","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"4853:6:23"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"4880:9:23"},{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"4895:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"4903:4:23","type":"","value":"0x1f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4891:3:23"},"nodeType":"YulFunctionCall","src":"4891:17:23"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"4861:18:23"},"nodeType":"YulFunctionCall","src":"4861:48:23"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"4846:6:23"},"nodeType":"YulFunctionCall","src":"4846:64:23"},"nodeType":"YulExpressionStatement","src":"4846:64:23"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"4751:7:23"},{"name":"newLen","nodeType":"YulIdentifier","src":"4760:6:23"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4748:2:23"},"nodeType":"YulFunctionCall","src":"4748:19:23"},"nodeType":"YulIf","src":"4745:179:23"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"4944:4:23"},{"arguments":[{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"4958:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"4966:1:23","type":"","value":"2"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"4954:3:23"},"nodeType":"YulFunctionCall","src":"4954:14:23"},{"kind":"number","nodeType":"YulLiteral","src":"4970:1:23","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4950:3:23"},"nodeType":"YulFunctionCall","src":"4950:22:23"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"4937:6:23"},"nodeType":"YulFunctionCall","src":"4937:36:23"},"nodeType":"YulExpressionStatement","src":"4937:36:23"}]},"nodeType":"YulCase","src":"4365:618:23","value":{"kind":"number","nodeType":"YulLiteral","src":"4370:1:23","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"5000:222:23","statements":[{"nodeType":"YulVariableDeclaration","src":"5014:14:23","value":{"kind":"number","nodeType":"YulLiteral","src":"5027:1:23","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"5018:5:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"5051:67:23","statements":[{"nodeType":"YulAssignment","src":"5069:35:23","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"5088:3:23"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"5093:9:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5084:3:23"},"nodeType":"YulFunctionCall","src":"5084:19:23"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5078:5:23"},"nodeType":"YulFunctionCall","src":"5078:26:23"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"5069:5:23"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"5044:6:23"},"nodeType":"YulIf","src":"5041:77:23"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"5138:4:23"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5197:5:23"},{"name":"newLen","nodeType":"YulIdentifier","src":"5204:6:23"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"5144:52:23"},"nodeType":"YulFunctionCall","src":"5144:67:23"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"5131:6:23"},"nodeType":"YulFunctionCall","src":"5131:81:23"},"nodeType":"YulExpressionStatement","src":"5131:81:23"}]},"nodeType":"YulCase","src":"4992:230:23","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"4345:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"4353:2:23","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4342:2:23"},"nodeType":"YulFunctionCall","src":"4342:14:23"},"nodeType":"YulSwitch","src":"4335:887:23"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"3914:4:23","type":""},{"name":"src","nodeType":"YulTypedName","src":"3920:3:23","type":""}],"src":"3833:1395:23"},{"body":{"nodeType":"YulBlock","src":"5279:32:23","statements":[{"nodeType":"YulAssignment","src":"5289:16:23","value":{"name":"value","nodeType":"YulIdentifier","src":"5300:5:23"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"5289:7:23"}]}]},"name":"cleanup_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5261:5:23","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"5271:7:23","type":""}],"src":"5234:77:23"},{"body":{"nodeType":"YulBlock","src":"5382:53:23","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5399:3:23"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5422:5:23"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"5404:17:23"},"nodeType":"YulFunctionCall","src":"5404:24:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5392:6:23"},"nodeType":"YulFunctionCall","src":"5392:37:23"},"nodeType":"YulExpressionStatement","src":"5392:37:23"}]},"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5370:5:23","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5377:3:23","type":""}],"src":"5317:118:23"},{"body":{"nodeType":"YulBlock","src":"5506:53:23","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5523:3:23"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5546:5:23"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"5528:17:23"},"nodeType":"YulFunctionCall","src":"5528:24:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5516:6:23"},"nodeType":"YulFunctionCall","src":"5516:37:23"},"nodeType":"YulExpressionStatement","src":"5516:37:23"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5494:5:23","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5501:3:23","type":""}],"src":"5441:118:23"},{"body":{"nodeType":"YulBlock","src":"5610:81:23","statements":[{"nodeType":"YulAssignment","src":"5620:65:23","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5635:5:23"},{"kind":"number","nodeType":"YulLiteral","src":"5642:42:23","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5631:3:23"},"nodeType":"YulFunctionCall","src":"5631:54:23"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"5620:7:23"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5592:5:23","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"5602:7:23","type":""}],"src":"5565:126:23"},{"body":{"nodeType":"YulBlock","src":"5742:51:23","statements":[{"nodeType":"YulAssignment","src":"5752:35:23","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5781:5:23"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"5763:17:23"},"nodeType":"YulFunctionCall","src":"5763:24:23"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"5752:7:23"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5724:5:23","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"5734:7:23","type":""}],"src":"5697:96:23"},{"body":{"nodeType":"YulBlock","src":"5864:53:23","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5881:3:23"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5904:5:23"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"5886:17:23"},"nodeType":"YulFunctionCall","src":"5886:24:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5874:6:23"},"nodeType":"YulFunctionCall","src":"5874:37:23"},"nodeType":"YulExpressionStatement","src":"5874:37:23"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5852:5:23","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5859:3:23","type":""}],"src":"5799:118:23"},{"body":{"nodeType":"YulBlock","src":"6133:454:23","statements":[{"nodeType":"YulAssignment","src":"6143:27:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6155:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"6166:3:23","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6151:3:23"},"nodeType":"YulFunctionCall","src":"6151:19:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6143:4:23"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6224:6:23"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6237:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"6248:1:23","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6233:3:23"},"nodeType":"YulFunctionCall","src":"6233:17:23"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"6180:43:23"},"nodeType":"YulFunctionCall","src":"6180:71:23"},"nodeType":"YulExpressionStatement","src":"6180:71:23"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"6305:6:23"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6318:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"6329:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6314:3:23"},"nodeType":"YulFunctionCall","src":"6314:18:23"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"6261:43:23"},"nodeType":"YulFunctionCall","src":"6261:72:23"},"nodeType":"YulExpressionStatement","src":"6261:72:23"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"6387:6:23"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6400:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"6411:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6396:3:23"},"nodeType":"YulFunctionCall","src":"6396:18:23"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"6343:43:23"},"nodeType":"YulFunctionCall","src":"6343:72:23"},"nodeType":"YulExpressionStatement","src":"6343:72:23"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"6469:6:23"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6482:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"6493:2:23","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6478:3:23"},"nodeType":"YulFunctionCall","src":"6478:18:23"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"6425:43:23"},"nodeType":"YulFunctionCall","src":"6425:72:23"},"nodeType":"YulExpressionStatement","src":"6425:72:23"},{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"6551:6:23"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6564:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"6575:3:23","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6560:3:23"},"nodeType":"YulFunctionCall","src":"6560:19:23"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"6507:43:23"},"nodeType":"YulFunctionCall","src":"6507:73:23"},"nodeType":"YulExpressionStatement","src":"6507:73:23"}]},"name":"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6073:9:23","type":""},{"name":"value4","nodeType":"YulTypedName","src":"6085:6:23","type":""},{"name":"value3","nodeType":"YulTypedName","src":"6093:6:23","type":""},{"name":"value2","nodeType":"YulTypedName","src":"6101:6:23","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6109:6:23","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6117:6:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6128:4:23","type":""}],"src":"5923:664:23"},{"body":{"nodeType":"YulBlock","src":"6689:73:23","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6706:3:23"},{"name":"length","nodeType":"YulIdentifier","src":"6711:6:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6699:6:23"},"nodeType":"YulFunctionCall","src":"6699:19:23"},"nodeType":"YulExpressionStatement","src":"6699:19:23"},{"nodeType":"YulAssignment","src":"6727:29:23","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6746:3:23"},{"kind":"number","nodeType":"YulLiteral","src":"6751:4:23","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6742:3:23"},"nodeType":"YulFunctionCall","src":"6742:14:23"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"6727:11:23"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"6661:3:23","type":""},{"name":"length","nodeType":"YulTypedName","src":"6666:6:23","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"6677:11:23","type":""}],"src":"6593:169:23"},{"body":{"nodeType":"YulBlock","src":"6830:184:23","statements":[{"nodeType":"YulVariableDeclaration","src":"6840:10:23","value":{"kind":"number","nodeType":"YulLiteral","src":"6849:1:23","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"6844:1:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"6909:63:23","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"6934:3:23"},{"name":"i","nodeType":"YulIdentifier","src":"6939:1:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6930:3:23"},"nodeType":"YulFunctionCall","src":"6930:11:23"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"6953:3:23"},{"name":"i","nodeType":"YulIdentifier","src":"6958:1:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6949:3:23"},"nodeType":"YulFunctionCall","src":"6949:11:23"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6943:5:23"},"nodeType":"YulFunctionCall","src":"6943:18:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6923:6:23"},"nodeType":"YulFunctionCall","src":"6923:39:23"},"nodeType":"YulExpressionStatement","src":"6923:39:23"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"6870:1:23"},{"name":"length","nodeType":"YulIdentifier","src":"6873:6:23"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6867:2:23"},"nodeType":"YulFunctionCall","src":"6867:13:23"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"6881:19:23","statements":[{"nodeType":"YulAssignment","src":"6883:15:23","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"6892:1:23"},{"kind":"number","nodeType":"YulLiteral","src":"6895:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6888:3:23"},"nodeType":"YulFunctionCall","src":"6888:10:23"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"6883:1:23"}]}]},"pre":{"nodeType":"YulBlock","src":"6863:3:23","statements":[]},"src":"6859:113:23"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"6992:3:23"},{"name":"length","nodeType":"YulIdentifier","src":"6997:6:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6988:3:23"},"nodeType":"YulFunctionCall","src":"6988:16:23"},{"kind":"number","nodeType":"YulLiteral","src":"7006:1:23","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6981:6:23"},"nodeType":"YulFunctionCall","src":"6981:27:23"},"nodeType":"YulExpressionStatement","src":"6981:27:23"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"6812:3:23","type":""},{"name":"dst","nodeType":"YulTypedName","src":"6817:3:23","type":""},{"name":"length","nodeType":"YulTypedName","src":"6822:6:23","type":""}],"src":"6768:246:23"},{"body":{"nodeType":"YulBlock","src":"7068:54:23","statements":[{"nodeType":"YulAssignment","src":"7078:38:23","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7096:5:23"},{"kind":"number","nodeType":"YulLiteral","src":"7103:2:23","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7092:3:23"},"nodeType":"YulFunctionCall","src":"7092:14:23"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7112:2:23","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"7108:3:23"},"nodeType":"YulFunctionCall","src":"7108:7:23"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7088:3:23"},"nodeType":"YulFunctionCall","src":"7088:28:23"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"7078:6:23"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7051:5:23","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"7061:6:23","type":""}],"src":"7020:102:23"},{"body":{"nodeType":"YulBlock","src":"7220:285:23","statements":[{"nodeType":"YulVariableDeclaration","src":"7230:53:23","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7277:5:23"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"7244:32:23"},"nodeType":"YulFunctionCall","src":"7244:39:23"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"7234:6:23","type":""}]},{"nodeType":"YulAssignment","src":"7292:78:23","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7358:3:23"},{"name":"length","nodeType":"YulIdentifier","src":"7363:6:23"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7299:58:23"},"nodeType":"YulFunctionCall","src":"7299:71:23"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"7292:3:23"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7418:5:23"},{"kind":"number","nodeType":"YulLiteral","src":"7425:4:23","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7414:3:23"},"nodeType":"YulFunctionCall","src":"7414:16:23"},{"name":"pos","nodeType":"YulIdentifier","src":"7432:3:23"},{"name":"length","nodeType":"YulIdentifier","src":"7437:6:23"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"7379:34:23"},"nodeType":"YulFunctionCall","src":"7379:65:23"},"nodeType":"YulExpressionStatement","src":"7379:65:23"},{"nodeType":"YulAssignment","src":"7453:46:23","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7464:3:23"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"7491:6:23"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"7469:21:23"},"nodeType":"YulFunctionCall","src":"7469:29:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7460:3:23"},"nodeType":"YulFunctionCall","src":"7460:39:23"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"7453:3:23"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7201:5:23","type":""},{"name":"pos","nodeType":"YulTypedName","src":"7208:3:23","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"7216:3:23","type":""}],"src":"7128:377:23"},{"body":{"nodeType":"YulBlock","src":"7629:195:23","statements":[{"nodeType":"YulAssignment","src":"7639:26:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7651:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"7662:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7647:3:23"},"nodeType":"YulFunctionCall","src":"7647:18:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7639:4:23"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7686:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"7697:1:23","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7682:3:23"},"nodeType":"YulFunctionCall","src":"7682:17:23"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"7705:4:23"},{"name":"headStart","nodeType":"YulIdentifier","src":"7711:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7701:3:23"},"nodeType":"YulFunctionCall","src":"7701:20:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7675:6:23"},"nodeType":"YulFunctionCall","src":"7675:47:23"},"nodeType":"YulExpressionStatement","src":"7675:47:23"},{"nodeType":"YulAssignment","src":"7731:86:23","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7803:6:23"},{"name":"tail","nodeType":"YulIdentifier","src":"7812:4:23"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7739:63:23"},"nodeType":"YulFunctionCall","src":"7739:78:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7731:4:23"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7601:9:23","type":""},{"name":"value0","nodeType":"YulTypedName","src":"7613:6:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7624:4:23","type":""}],"src":"7511:313:23"},{"body":{"nodeType":"YulBlock","src":"7888:40:23","statements":[{"nodeType":"YulAssignment","src":"7899:22:23","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7915:5:23"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7909:5:23"},"nodeType":"YulFunctionCall","src":"7909:12:23"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"7899:6:23"}]}]},"name":"array_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7871:5:23","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"7881:6:23","type":""}],"src":"7830:98:23"},{"body":{"nodeType":"YulBlock","src":"7990:60:23","statements":[{"nodeType":"YulAssignment","src":"8000:11:23","value":{"name":"ptr","nodeType":"YulIdentifier","src":"8008:3:23"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"8000:4:23"}]},{"nodeType":"YulAssignment","src":"8021:22:23","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"8033:3:23"},{"kind":"number","nodeType":"YulLiteral","src":"8038:4:23","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8029:3:23"},"nodeType":"YulFunctionCall","src":"8029:14:23"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"8021:4:23"}]}]},"name":"array_dataslot_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"7977:3:23","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"7985:4:23","type":""}],"src":"7934:116:23"},{"body":{"nodeType":"YulBlock","src":"8111:99:23","statements":[{"nodeType":"YulVariableDeclaration","src":"8122:42:23","value":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"8159:3:23"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8153:5:23"},"nodeType":"YulFunctionCall","src":"8153:10:23"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"8135:17:23"},"nodeType":"YulFunctionCall","src":"8135:29:23"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"8126:5:23","type":""}]},{"nodeType":"YulAssignment","src":"8174:29:23","value":{"name":"value","nodeType":"YulIdentifier","src":"8198:5:23"},"variableNames":[{"name":"returnValue","nodeType":"YulIdentifier","src":"8174:11:23"}]}]},"name":"read_from_memoryt_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"8091:3:23","type":""}],"returnVariables":[{"name":"returnValue","nodeType":"YulTypedName","src":"8099:11:23","type":""}],"src":"8056:154:23"},{"body":{"nodeType":"YulBlock","src":"8306:504:23","statements":[{"nodeType":"YulVariableDeclaration","src":"8317:52:23","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"8363:5:23"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"8331:31:23"},"nodeType":"YulFunctionCall","src":"8331:38:23"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"8321:6:23","type":""}]},{"nodeType":"YulVariableDeclaration","src":"8378:21:23","value":{"name":"array","nodeType":"YulIdentifier","src":"8394:5:23"},"variables":[{"name":"dataArea","nodeType":"YulTypedName","src":"8382:8:23","type":""}]},{"nodeType":"YulAssignment","src":"8409:52:23","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"8455:5:23"}],"functionName":{"name":"array_dataslot_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"8421:33:23"},"nodeType":"YulFunctionCall","src":"8421:40:23"},"variableNames":[{"name":"dataArea","nodeType":"YulIdentifier","src":"8409:8:23"}]},{"nodeType":"YulAssignment","src":"8471:44:23","value":{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"8506:8:23"}],"functionName":{"name":"read_from_memoryt_bytes32","nodeType":"YulIdentifier","src":"8480:25:23"},"nodeType":"YulFunctionCall","src":"8480:35:23"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"8471:5:23"}]},{"body":{"nodeType":"YulBlock","src":"8543:260:23","statements":[{"nodeType":"YulAssignment","src":"8557:236:23","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8587:5:23"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8654:1:23","type":"","value":"8"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8661:2:23","type":"","value":"32"},{"name":"length","nodeType":"YulIdentifier","src":"8665:6:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8657:3:23"},"nodeType":"YulFunctionCall","src":"8657:15:23"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"8650:3:23"},"nodeType":"YulFunctionCall","src":"8650:23:23"},{"kind":"number","nodeType":"YulLiteral","src":"8695:66:23","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"8610:18:23"},"nodeType":"YulFunctionCall","src":"8610:169:23"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8566:3:23"},"nodeType":"YulFunctionCall","src":"8566:227:23"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"8557:5:23"}]}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"8531:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"8539:2:23","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"8528:2:23"},"nodeType":"YulFunctionCall","src":"8528:14:23"},"nodeType":"YulIf","src":"8525:278:23"}]},"name":"convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"8290:5:23","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"8300:5:23","type":""}],"src":"8216:594:23"},{"body":{"nodeType":"YulBlock","src":"8922:129:23","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"8944:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"8952:1:23","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8940:3:23"},"nodeType":"YulFunctionCall","src":"8940:14:23"},{"hexValue":"4552433230566f7465733a20746f74616c20737570706c79207269736b73206f","kind":"string","nodeType":"YulLiteral","src":"8956:34:23","type":"","value":"ERC20Votes: total supply risks o"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8933:6:23"},"nodeType":"YulFunctionCall","src":"8933:58:23"},"nodeType":"YulExpressionStatement","src":"8933:58:23"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"9012:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"9020:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9008:3:23"},"nodeType":"YulFunctionCall","src":"9008:15:23"},{"hexValue":"766572666c6f77696e6720766f746573","kind":"string","nodeType":"YulLiteral","src":"9025:18:23","type":"","value":"verflowing votes"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9001:6:23"},"nodeType":"YulFunctionCall","src":"9001:43:23"},"nodeType":"YulExpressionStatement","src":"9001:43:23"}]},"name":"store_literal_in_memory_97859f657b3d95198b68f29ae96ee966779795bec3ef1e76700d2d39fefd7699","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"8914:6:23","type":""}],"src":"8816:235:23"},{"body":{"nodeType":"YulBlock","src":"9203:220:23","statements":[{"nodeType":"YulAssignment","src":"9213:74:23","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9279:3:23"},{"kind":"number","nodeType":"YulLiteral","src":"9284:2:23","type":"","value":"48"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9220:58:23"},"nodeType":"YulFunctionCall","src":"9220:67:23"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"9213:3:23"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9385:3:23"}],"functionName":{"name":"store_literal_in_memory_97859f657b3d95198b68f29ae96ee966779795bec3ef1e76700d2d39fefd7699","nodeType":"YulIdentifier","src":"9296:88:23"},"nodeType":"YulFunctionCall","src":"9296:93:23"},"nodeType":"YulExpressionStatement","src":"9296:93:23"},{"nodeType":"YulAssignment","src":"9398:19:23","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9409:3:23"},{"kind":"number","nodeType":"YulLiteral","src":"9414:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9405:3:23"},"nodeType":"YulFunctionCall","src":"9405:12:23"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"9398:3:23"}]}]},"name":"abi_encode_t_stringliteral_97859f657b3d95198b68f29ae96ee966779795bec3ef1e76700d2d39fefd7699_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"9191:3:23","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"9199:3:23","type":""}],"src":"9057:366:23"},{"body":{"nodeType":"YulBlock","src":"9600:248:23","statements":[{"nodeType":"YulAssignment","src":"9610:26:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9622:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"9633:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9618:3:23"},"nodeType":"YulFunctionCall","src":"9618:18:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9610:4:23"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9657:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"9668:1:23","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9653:3:23"},"nodeType":"YulFunctionCall","src":"9653:17:23"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"9676:4:23"},{"name":"headStart","nodeType":"YulIdentifier","src":"9682:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9672:3:23"},"nodeType":"YulFunctionCall","src":"9672:20:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9646:6:23"},"nodeType":"YulFunctionCall","src":"9646:47:23"},"nodeType":"YulExpressionStatement","src":"9646:47:23"},{"nodeType":"YulAssignment","src":"9702:139:23","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"9836:4:23"}],"functionName":{"name":"abi_encode_t_stringliteral_97859f657b3d95198b68f29ae96ee966779795bec3ef1e76700d2d39fefd7699_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9710:124:23"},"nodeType":"YulFunctionCall","src":"9710:131:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9702:4:23"}]}]},"name":"abi_encode_tuple_t_stringliteral_97859f657b3d95198b68f29ae96ee966779795bec3ef1e76700d2d39fefd7699__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9580:9:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9595:4:23","type":""}],"src":"9429:419:23"},{"body":{"nodeType":"YulBlock","src":"9960:75:23","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"9982:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"9990:1:23","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9978:3:23"},"nodeType":"YulFunctionCall","src":"9978:14:23"},{"hexValue":"45524332303a206d696e7420746f20746865207a65726f2061646472657373","kind":"string","nodeType":"YulLiteral","src":"9994:33:23","type":"","value":"ERC20: mint to the zero address"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9971:6:23"},"nodeType":"YulFunctionCall","src":"9971:57:23"},"nodeType":"YulExpressionStatement","src":"9971:57:23"}]},"name":"store_literal_in_memory_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"9952:6:23","type":""}],"src":"9854:181:23"},{"body":{"nodeType":"YulBlock","src":"10187:220:23","statements":[{"nodeType":"YulAssignment","src":"10197:74:23","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10263:3:23"},{"kind":"number","nodeType":"YulLiteral","src":"10268:2:23","type":"","value":"31"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"10204:58:23"},"nodeType":"YulFunctionCall","src":"10204:67:23"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"10197:3:23"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10369:3:23"}],"functionName":{"name":"store_literal_in_memory_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e","nodeType":"YulIdentifier","src":"10280:88:23"},"nodeType":"YulFunctionCall","src":"10280:93:23"},"nodeType":"YulExpressionStatement","src":"10280:93:23"},{"nodeType":"YulAssignment","src":"10382:19:23","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10393:3:23"},{"kind":"number","nodeType":"YulLiteral","src":"10398:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10389:3:23"},"nodeType":"YulFunctionCall","src":"10389:12:23"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"10382:3:23"}]}]},"name":"abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"10175:3:23","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"10183:3:23","type":""}],"src":"10041:366:23"},{"body":{"nodeType":"YulBlock","src":"10584:248:23","statements":[{"nodeType":"YulAssignment","src":"10594:26:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10606:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"10617:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10602:3:23"},"nodeType":"YulFunctionCall","src":"10602:18:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10594:4:23"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10641:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"10652:1:23","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10637:3:23"},"nodeType":"YulFunctionCall","src":"10637:17:23"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"10660:4:23"},{"name":"headStart","nodeType":"YulIdentifier","src":"10666:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10656:3:23"},"nodeType":"YulFunctionCall","src":"10656:20:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10630:6:23"},"nodeType":"YulFunctionCall","src":"10630:47:23"},"nodeType":"YulExpressionStatement","src":"10630:47:23"},{"nodeType":"YulAssignment","src":"10686:139:23","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"10820:4:23"}],"functionName":{"name":"abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"10694:124:23"},"nodeType":"YulFunctionCall","src":"10694:131:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10686:4:23"}]}]},"name":"abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10564:9:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10579:4:23","type":""}],"src":"10413:419:23"},{"body":{"nodeType":"YulBlock","src":"10866:152:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10883:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10886:77:23","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10876:6:23"},"nodeType":"YulFunctionCall","src":"10876:88:23"},"nodeType":"YulExpressionStatement","src":"10876:88:23"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10980:1:23","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"10983:4:23","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10973:6:23"},"nodeType":"YulFunctionCall","src":"10973:15:23"},"nodeType":"YulExpressionStatement","src":"10973:15:23"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11004:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11007:4:23","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10997:6:23"},"nodeType":"YulFunctionCall","src":"10997:15:23"},"nodeType":"YulExpressionStatement","src":"10997:15:23"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"10838:180:23"},{"body":{"nodeType":"YulBlock","src":"11068:147:23","statements":[{"nodeType":"YulAssignment","src":"11078:25:23","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"11101:1:23"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"11083:17:23"},"nodeType":"YulFunctionCall","src":"11083:20:23"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"11078:1:23"}]},{"nodeType":"YulAssignment","src":"11112:25:23","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"11135:1:23"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"11117:17:23"},"nodeType":"YulFunctionCall","src":"11117:20:23"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"11112:1:23"}]},{"nodeType":"YulAssignment","src":"11146:16:23","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"11157:1:23"},{"name":"y","nodeType":"YulIdentifier","src":"11160:1:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11153:3:23"},"nodeType":"YulFunctionCall","src":"11153:9:23"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"11146:3:23"}]},{"body":{"nodeType":"YulBlock","src":"11186:22:23","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"11188:16:23"},"nodeType":"YulFunctionCall","src":"11188:18:23"},"nodeType":"YulExpressionStatement","src":"11188:18:23"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"11178:1:23"},{"name":"sum","nodeType":"YulIdentifier","src":"11181:3:23"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"11175:2:23"},"nodeType":"YulFunctionCall","src":"11175:10:23"},"nodeType":"YulIf","src":"11172:36:23"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"11055:1:23","type":""},{"name":"y","nodeType":"YulTypedName","src":"11058:1:23","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"11064:3:23","type":""}],"src":"11024:191:23"},{"body":{"nodeType":"YulBlock","src":"11319:124:23","statements":[{"nodeType":"YulAssignment","src":"11329:26:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11341:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"11352:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11337:3:23"},"nodeType":"YulFunctionCall","src":"11337:18:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11329:4:23"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"11409:6:23"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11422:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"11433:1:23","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11418:3:23"},"nodeType":"YulFunctionCall","src":"11418:17:23"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"11365:43:23"},"nodeType":"YulFunctionCall","src":"11365:71:23"},"nodeType":"YulExpressionStatement","src":"11365:71:23"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11291:9:23","type":""},{"name":"value0","nodeType":"YulTypedName","src":"11303:6:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11314:4:23","type":""}],"src":"11221:222:23"},{"body":{"nodeType":"YulBlock","src":"11555:120:23","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"11577:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"11585:1:23","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11573:3:23"},"nodeType":"YulFunctionCall","src":"11573:14:23"},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2032","kind":"string","nodeType":"YulLiteral","src":"11589:34:23","type":"","value":"SafeCast: value doesn't fit in 2"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11566:6:23"},"nodeType":"YulFunctionCall","src":"11566:58:23"},"nodeType":"YulExpressionStatement","src":"11566:58:23"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"11645:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"11653:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11641:3:23"},"nodeType":"YulFunctionCall","src":"11641:15:23"},{"hexValue":"32342062697473","kind":"string","nodeType":"YulLiteral","src":"11658:9:23","type":"","value":"24 bits"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11634:6:23"},"nodeType":"YulFunctionCall","src":"11634:34:23"},"nodeType":"YulExpressionStatement","src":"11634:34:23"}]},"name":"store_literal_in_memory_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"11547:6:23","type":""}],"src":"11449:226:23"},{"body":{"nodeType":"YulBlock","src":"11827:220:23","statements":[{"nodeType":"YulAssignment","src":"11837:74:23","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11903:3:23"},{"kind":"number","nodeType":"YulLiteral","src":"11908:2:23","type":"","value":"39"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11844:58:23"},"nodeType":"YulFunctionCall","src":"11844:67:23"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"11837:3:23"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12009:3:23"}],"functionName":{"name":"store_literal_in_memory_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79","nodeType":"YulIdentifier","src":"11920:88:23"},"nodeType":"YulFunctionCall","src":"11920:93:23"},"nodeType":"YulExpressionStatement","src":"11920:93:23"},{"nodeType":"YulAssignment","src":"12022:19:23","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12033:3:23"},{"kind":"number","nodeType":"YulLiteral","src":"12038:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12029:3:23"},"nodeType":"YulFunctionCall","src":"12029:12:23"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"12022:3:23"}]}]},"name":"abi_encode_t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"11815:3:23","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"11823:3:23","type":""}],"src":"11681:366:23"},{"body":{"nodeType":"YulBlock","src":"12224:248:23","statements":[{"nodeType":"YulAssignment","src":"12234:26:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12246:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"12257:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12242:3:23"},"nodeType":"YulFunctionCall","src":"12242:18:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12234:4:23"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12281:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"12292:1:23","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12277:3:23"},"nodeType":"YulFunctionCall","src":"12277:17:23"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"12300:4:23"},{"name":"headStart","nodeType":"YulIdentifier","src":"12306:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12296:3:23"},"nodeType":"YulFunctionCall","src":"12296:20:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12270:6:23"},"nodeType":"YulFunctionCall","src":"12270:47:23"},"nodeType":"YulExpressionStatement","src":"12270:47:23"},{"nodeType":"YulAssignment","src":"12326:139:23","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"12460:4:23"}],"functionName":{"name":"abi_encode_t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12334:124:23"},"nodeType":"YulFunctionCall","src":"12334:131:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12326:4:23"}]}]},"name":"abi_encode_tuple_t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12204:9:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12219:4:23","type":""}],"src":"12053:419:23"},{"body":{"nodeType":"YulBlock","src":"12584:119:23","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"12606:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"12614:1:23","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12602:3:23"},"nodeType":"YulFunctionCall","src":"12602:14:23"},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2033","kind":"string","nodeType":"YulLiteral","src":"12618:34:23","type":"","value":"SafeCast: value doesn't fit in 3"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12595:6:23"},"nodeType":"YulFunctionCall","src":"12595:58:23"},"nodeType":"YulExpressionStatement","src":"12595:58:23"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"12674:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"12682:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12670:3:23"},"nodeType":"YulFunctionCall","src":"12670:15:23"},{"hexValue":"322062697473","kind":"string","nodeType":"YulLiteral","src":"12687:8:23","type":"","value":"2 bits"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12663:6:23"},"nodeType":"YulFunctionCall","src":"12663:33:23"},"nodeType":"YulExpressionStatement","src":"12663:33:23"}]},"name":"store_literal_in_memory_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"12576:6:23","type":""}],"src":"12478:225:23"},{"body":{"nodeType":"YulBlock","src":"12855:220:23","statements":[{"nodeType":"YulAssignment","src":"12865:74:23","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12931:3:23"},{"kind":"number","nodeType":"YulLiteral","src":"12936:2:23","type":"","value":"38"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12872:58:23"},"nodeType":"YulFunctionCall","src":"12872:67:23"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"12865:3:23"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13037:3:23"}],"functionName":{"name":"store_literal_in_memory_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19","nodeType":"YulIdentifier","src":"12948:88:23"},"nodeType":"YulFunctionCall","src":"12948:93:23"},"nodeType":"YulExpressionStatement","src":"12948:93:23"},{"nodeType":"YulAssignment","src":"13050:19:23","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13061:3:23"},{"kind":"number","nodeType":"YulLiteral","src":"13066:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13057:3:23"},"nodeType":"YulFunctionCall","src":"13057:12:23"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"13050:3:23"}]}]},"name":"abi_encode_t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"12843:3:23","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"12851:3:23","type":""}],"src":"12709:366:23"},{"body":{"nodeType":"YulBlock","src":"13252:248:23","statements":[{"nodeType":"YulAssignment","src":"13262:26:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13274:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"13285:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13270:3:23"},"nodeType":"YulFunctionCall","src":"13270:18:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13262:4:23"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13309:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"13320:1:23","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13305:3:23"},"nodeType":"YulFunctionCall","src":"13305:17:23"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13328:4:23"},{"name":"headStart","nodeType":"YulIdentifier","src":"13334:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13324:3:23"},"nodeType":"YulFunctionCall","src":"13324:20:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13298:6:23"},"nodeType":"YulFunctionCall","src":"13298:47:23"},"nodeType":"YulExpressionStatement","src":"13298:47:23"},{"nodeType":"YulAssignment","src":"13354:139:23","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13488:4:23"}],"functionName":{"name":"abi_encode_t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13362:124:23"},"nodeType":"YulFunctionCall","src":"13362:131:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13354:4:23"}]}]},"name":"abi_encode_tuple_t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13232:9:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13247:4:23","type":""}],"src":"13081:419:23"},{"body":{"nodeType":"YulBlock","src":"13612:119:23","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"13634:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"13642:1:23","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13630:3:23"},"nodeType":"YulFunctionCall","src":"13630:14:23"},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2034","kind":"string","nodeType":"YulLiteral","src":"13646:34:23","type":"","value":"SafeCast: value doesn't fit in 4"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13623:6:23"},"nodeType":"YulFunctionCall","src":"13623:58:23"},"nodeType":"YulExpressionStatement","src":"13623:58:23"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"13702:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"13710:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13698:3:23"},"nodeType":"YulFunctionCall","src":"13698:15:23"},{"hexValue":"382062697473","kind":"string","nodeType":"YulLiteral","src":"13715:8:23","type":"","value":"8 bits"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13691:6:23"},"nodeType":"YulFunctionCall","src":"13691:33:23"},"nodeType":"YulExpressionStatement","src":"13691:33:23"}]},"name":"store_literal_in_memory_599034f9324dd4e988c6cea5a00a30f53147fec1b01559682f18cd840028f495","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"13604:6:23","type":""}],"src":"13506:225:23"},{"body":{"nodeType":"YulBlock","src":"13883:220:23","statements":[{"nodeType":"YulAssignment","src":"13893:74:23","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13959:3:23"},{"kind":"number","nodeType":"YulLiteral","src":"13964:2:23","type":"","value":"38"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13900:58:23"},"nodeType":"YulFunctionCall","src":"13900:67:23"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"13893:3:23"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14065:3:23"}],"functionName":{"name":"store_literal_in_memory_599034f9324dd4e988c6cea5a00a30f53147fec1b01559682f18cd840028f495","nodeType":"YulIdentifier","src":"13976:88:23"},"nodeType":"YulFunctionCall","src":"13976:93:23"},"nodeType":"YulExpressionStatement","src":"13976:93:23"},{"nodeType":"YulAssignment","src":"14078:19:23","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14089:3:23"},{"kind":"number","nodeType":"YulLiteral","src":"14094:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14085:3:23"},"nodeType":"YulFunctionCall","src":"14085:12:23"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"14078:3:23"}]}]},"name":"abi_encode_t_stringliteral_599034f9324dd4e988c6cea5a00a30f53147fec1b01559682f18cd840028f495_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"13871:3:23","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"13879:3:23","type":""}],"src":"13737:366:23"},{"body":{"nodeType":"YulBlock","src":"14280:248:23","statements":[{"nodeType":"YulAssignment","src":"14290:26:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14302:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"14313:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14298:3:23"},"nodeType":"YulFunctionCall","src":"14298:18:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14290:4:23"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14337:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"14348:1:23","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14333:3:23"},"nodeType":"YulFunctionCall","src":"14333:17:23"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14356:4:23"},{"name":"headStart","nodeType":"YulIdentifier","src":"14362:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14352:3:23"},"nodeType":"YulFunctionCall","src":"14352:20:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14326:6:23"},"nodeType":"YulFunctionCall","src":"14326:47:23"},"nodeType":"YulExpressionStatement","src":"14326:47:23"},{"nodeType":"YulAssignment","src":"14382:139:23","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14516:4:23"}],"functionName":{"name":"abi_encode_t_stringliteral_599034f9324dd4e988c6cea5a00a30f53147fec1b01559682f18cd840028f495_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14390:124:23"},"nodeType":"YulFunctionCall","src":"14390:131:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14382:4:23"}]}]},"name":"abi_encode_tuple_t_stringliteral_599034f9324dd4e988c6cea5a00a30f53147fec1b01559682f18cd840028f495__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14260:9:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14275:4:23","type":""}],"src":"14109:419:23"},{"body":{"nodeType":"YulBlock","src":"14660:206:23","statements":[{"nodeType":"YulAssignment","src":"14670:26:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14682:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"14693:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14678:3:23"},"nodeType":"YulFunctionCall","src":"14678:18:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14670:4:23"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"14750:6:23"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14763:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"14774:1:23","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14759:3:23"},"nodeType":"YulFunctionCall","src":"14759:17:23"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"14706:43:23"},"nodeType":"YulFunctionCall","src":"14706:71:23"},"nodeType":"YulExpressionStatement","src":"14706:71:23"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"14831:6:23"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14844:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"14855:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14840:3:23"},"nodeType":"YulFunctionCall","src":"14840:18:23"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"14787:43:23"},"nodeType":"YulFunctionCall","src":"14787:72:23"},"nodeType":"YulExpressionStatement","src":"14787:72:23"}]},"name":"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14624:9:23","type":""},{"name":"value1","nodeType":"YulTypedName","src":"14636:6:23","type":""},{"name":"value0","nodeType":"YulTypedName","src":"14644:6:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14655:4:23","type":""}],"src":"14534:332:23"},{"body":{"nodeType":"YulBlock","src":"14917:149:23","statements":[{"nodeType":"YulAssignment","src":"14927:25:23","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"14950:1:23"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"14932:17:23"},"nodeType":"YulFunctionCall","src":"14932:20:23"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"14927:1:23"}]},{"nodeType":"YulAssignment","src":"14961:25:23","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"14984:1:23"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"14966:17:23"},"nodeType":"YulFunctionCall","src":"14966:20:23"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"14961:1:23"}]},{"nodeType":"YulAssignment","src":"14995:17:23","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"15007:1:23"},{"name":"y","nodeType":"YulIdentifier","src":"15010:1:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15003:3:23"},"nodeType":"YulFunctionCall","src":"15003:9:23"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"14995:4:23"}]},{"body":{"nodeType":"YulBlock","src":"15037:22:23","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"15039:16:23"},"nodeType":"YulFunctionCall","src":"15039:18:23"},"nodeType":"YulExpressionStatement","src":"15039:18:23"}]},"condition":{"arguments":[{"name":"diff","nodeType":"YulIdentifier","src":"15028:4:23"},{"name":"x","nodeType":"YulIdentifier","src":"15034:1:23"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"15025:2:23"},"nodeType":"YulFunctionCall","src":"15025:11:23"},"nodeType":"YulIf","src":"15022:37:23"}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"14903:1:23","type":""},{"name":"y","nodeType":"YulTypedName","src":"14906:1:23","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"14912:4:23","type":""}],"src":"14872:194:23"}]},"contents":"{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_address_to_t_address_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_dataslot_t_bytes_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function read_from_memoryt_bytes32(ptr) -> returnValue {\n\n        let value := cleanup_t_bytes32(mload(ptr))\n\n        returnValue :=\n\n        value\n\n    }\n\n    function convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32(array) -> value {\n\n        let length := array_length_t_bytes_memory_ptr(array)\n        let dataArea := array\n\n        dataArea := array_dataslot_t_bytes_memory_ptr(array)\n\n        value := read_from_memoryt_bytes32(dataArea)\n\n        if lt(length, 32) {\n            value := and(\n                value,\n                shift_left_dynamic(\n                    mul(8, sub(32, length)),\n                    0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n                )\n            )\n        }\n\n    }\n\n    function store_literal_in_memory_97859f657b3d95198b68f29ae96ee966779795bec3ef1e76700d2d39fefd7699(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20Votes: total supply risks o\")\n\n        mstore(add(memPtr, 32), \"verflowing votes\")\n\n    }\n\n    function abi_encode_t_stringliteral_97859f657b3d95198b68f29ae96ee966779795bec3ef1e76700d2d39fefd7699_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 48)\n        store_literal_in_memory_97859f657b3d95198b68f29ae96ee966779795bec3ef1e76700d2d39fefd7699(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_97859f657b3d95198b68f29ae96ee966779795bec3ef1e76700d2d39fefd7699__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_97859f657b3d95198b68f29ae96ee966779795bec3ef1e76700d2d39fefd7699_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: mint to the zero address\")\n\n    }\n\n    function abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function store_literal_in_memory_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79(memPtr) {\n\n        mstore(add(memPtr, 0), \"SafeCast: value doesn't fit in 2\")\n\n        mstore(add(memPtr, 32), \"24 bits\")\n\n    }\n\n    function abi_encode_t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 39)\n        store_literal_in_memory_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19(memPtr) {\n\n        mstore(add(memPtr, 0), \"SafeCast: value doesn't fit in 3\")\n\n        mstore(add(memPtr, 32), \"2 bits\")\n\n    }\n\n    function abi_encode_t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_599034f9324dd4e988c6cea5a00a30f53147fec1b01559682f18cd840028f495(memPtr) {\n\n        mstore(add(memPtr, 0), \"SafeCast: value doesn't fit in 4\")\n\n        mstore(add(memPtr, 32), \"8 bits\")\n\n    }\n\n    function abi_encode_t_stringliteral_599034f9324dd4e988c6cea5a00a30f53147fec1b01559682f18cd840028f495_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_599034f9324dd4e988c6cea5a00a30f53147fec1b01559682f18cd840028f495(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_599034f9324dd4e988c6cea5a00a30f53147fec1b01559682f18cd840028f495__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_599034f9324dd4e988c6cea5a00a30f53147fec1b01559682f18cd840028f495_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n}\n","id":23,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"","opcodes":"PUSH2 0x160 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x18 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x476F72696C6C6120476F7665726E616E636520546F6B656E0000000000000000 DUP2 MSTORE POP DUP1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3100000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xE DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x476F72696C6C6120546F6B656E73000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x8 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x474F52494C4C415A000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH3 0xFD SWAP2 SWAP1 PUSH3 0x106C JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH3 0x10F SWAP2 SWAP1 PUSH3 0x106C JUMP JUMPDEST POP POP POP PUSH3 0x128 PUSH1 0x5 DUP4 PUSH3 0x206 PUSH1 0x20 SHL SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x120 DUP2 DUP2 MSTORE POP POP PUSH3 0x146 PUSH1 0x6 DUP3 PUSH3 0x206 PUSH1 0x20 SHL SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x140 DUP2 DUP2 MSTORE POP POP DUP2 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0xE0 DUP2 DUP2 MSTORE POP POP DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH2 0x100 DUP2 DUP2 MSTORE POP POP CHAINID PUSH1 0xA0 DUP2 DUP2 MSTORE POP POP PUSH3 0x185 PUSH3 0x25E PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x80 DUP2 DUP2 MSTORE POP POP ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xC0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP POP POP POP PUSH3 0x1E3 PUSH3 0x1D7 PUSH3 0x2BB PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x2C3 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x200 CALLER PUSH11 0x84595161401484A000000 PUSH3 0x389 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x1737 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP4 MLOAD LT ISZERO PUSH3 0x22C JUMPI PUSH3 0x224 DUP4 PUSH3 0x39F PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP PUSH3 0x258 JUMP JUMPDEST DUP3 PUSH3 0x23E DUP4 PUSH3 0x40C PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x0 ADD SWAP1 DUP2 PUSH3 0x24F SWAP2 SWAP1 PUSH3 0x106C JUMP JUMPDEST POP PUSH1 0xFF PUSH1 0x0 SHL SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH1 0xE0 MLOAD PUSH2 0x100 MLOAD CHAINID ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH3 0x2A0 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0x11C4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0xC PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH3 0x39B DUP3 DUP3 PUSH3 0x416 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SWAP1 POP PUSH1 0x1F DUP2 MLOAD GT ISZERO PUSH3 0x3EF JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x305A27A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x3E6 SWAP2 SWAP1 PUSH3 0x12B0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH3 0x3FD SWAP1 PUSH3 0x1306 JUMP JUMPDEST PUSH1 0x0 SHR OR PUSH1 0x0 SHL SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x428 DUP3 DUP3 PUSH3 0x4CF PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x438 PUSH3 0x63C PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH3 0x466 PUSH3 0x660 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST GT ISZERO PUSH3 0x4AA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x4A1 SWAP1 PUSH3 0x13EC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x4C9 PUSH1 0xB PUSH3 0x66A PUSH1 0x20 SHL PUSH3 0x1217 OR DUP4 PUSH3 0x682 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x541 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x538 SWAP1 PUSH3 0x145E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x555 PUSH1 0x0 DUP4 DUP4 PUSH3 0x998 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH3 0x569 SWAP2 SWAP1 PUSH3 0x14AF JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH3 0x61C SWAP2 SWAP1 PUSH3 0x14EA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH3 0x638 PUSH1 0x0 DUP4 DUP4 PUSH3 0x99D PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH3 0x67A SWAP2 SWAP1 PUSH3 0x14AF JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH1 0x0 DUP1 DUP3 EQ PUSH3 0x752 JUMPI PUSH3 0x6AD DUP8 PUSH1 0x1 DUP5 SUB PUSH3 0x9B5 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP PUSH3 0x78E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP JUMPDEST SWAP1 POP DUP1 PUSH1 0x20 ADD MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP4 POP PUSH3 0x7C1 DUP5 DUP7 DUP9 PUSH1 0x20 SHR JUMP JUMPDEST SWAP3 POP PUSH1 0x0 DUP3 GT DUP1 ISZERO PUSH3 0x7F4 JUMPI POP PUSH3 0x7DF PUSH3 0x9CA PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH6 0xFFFFFFFFFFFF AND DUP2 PUSH1 0x0 ADD MLOAD PUSH4 0xFFFFFFFF AND EQ JUMPDEST ISZERO PUSH3 0x877 JUMPI PUSH3 0x80B DUP4 PUSH3 0x9E2 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x820 DUP9 PUSH1 0x1 DUP6 SUB PUSH3 0x9B5 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x4 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH3 0x98E JUMP JUMPDEST DUP7 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH3 0x8AB PUSH3 0x897 PUSH3 0x9CA PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH6 0xFFFFFFFFFFFF AND PUSH3 0xA50 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x8C7 DUP7 PUSH3 0x9E2 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x4 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP JUMPDEST POP POP SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH3 0x9B0 DUP4 DUP4 DUP4 PUSH3 0xAA6 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 MSTORE DUP2 PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x9DD NUMBER PUSH3 0xAF1 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 AND DUP3 GT ISZERO PUSH3 0xA48 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xA3F SWAP1 PUSH3 0x157D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP1 AND DUP3 GT ISZERO PUSH3 0xA9E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xA95 SWAP1 PUSH3 0x1615 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0xAB9 DUP4 DUP4 DUP4 PUSH3 0xB49 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0xAEC PUSH3 0xACE DUP5 PUSH3 0xB4E PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0xADF DUP5 PUSH3 0xB4E PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST DUP4 PUSH3 0xBB7 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH6 0xFFFFFFFFFFFF DUP1 AND DUP3 GT ISZERO PUSH3 0xB41 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xB38 SWAP1 PUSH3 0x16AD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x9 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH3 0xBF4 JUMPI POP PUSH1 0x0 DUP2 GT JUMPDEST ISZERO PUSH3 0xDD5 JUMPI PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH3 0xCE7 JUMPI PUSH1 0x0 DUP1 PUSH3 0xC8E PUSH1 0xA PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH3 0xDDA PUSH1 0x20 SHL PUSH3 0x122D OR DUP6 PUSH3 0x682 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDEC2BACDD2F05B59DE34DA9B523DFF8BE42E5E38E818C82FDB0BAE774387A724 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH3 0xCDC SWAP3 SWAP2 SWAP1 PUSH3 0x16CF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH3 0xDD4 JUMPI PUSH1 0x0 DUP1 PUSH3 0xD7B PUSH1 0xA PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH3 0x66A PUSH1 0x20 SHL PUSH3 0x1217 OR DUP6 PUSH3 0x682 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDEC2BACDD2F05B59DE34DA9B523DFF8BE42E5E38E818C82FDB0BAE774387A724 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH3 0xDC9 SWAP3 SWAP2 SWAP1 PUSH3 0x16CF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH3 0xDEA SWAP2 SWAP1 PUSH3 0x16FC JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0xE74 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0xE8A JUMPI PUSH3 0xE89 PUSH3 0xE2C JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH3 0xEF4 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0xEB5 JUMP JUMPDEST PUSH3 0xF00 DUP7 DUP4 PUSH3 0xEB5 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xF4D PUSH3 0xF47 PUSH3 0xF41 DUP5 PUSH3 0xF18 JUMP JUMPDEST PUSH3 0xF22 JUMP JUMPDEST PUSH3 0xF18 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0xF69 DUP4 PUSH3 0xF2C JUMP JUMPDEST PUSH3 0xF81 PUSH3 0xF78 DUP3 PUSH3 0xF54 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0xEC2 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH3 0xF98 PUSH3 0xF89 JUMP JUMPDEST PUSH3 0xFA5 DUP2 DUP5 DUP5 PUSH3 0xF5E JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0xFCD JUMPI PUSH3 0xFC1 PUSH1 0x0 DUP3 PUSH3 0xF8E JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0xFAB JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x101C JUMPI PUSH3 0xFE6 DUP2 PUSH3 0xE90 JUMP JUMPDEST PUSH3 0xFF1 DUP5 PUSH3 0xEA5 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x1001 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x1019 PUSH3 0x1010 DUP6 PUSH3 0xEA5 JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0xFAA JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1041 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x1021 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x105C DUP4 DUP4 PUSH3 0x102E JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x1077 DUP3 PUSH3 0xDF2 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x1093 JUMPI PUSH3 0x1092 PUSH3 0xDFD JUMP JUMPDEST JUMPDEST PUSH3 0x109F DUP3 SLOAD PUSH3 0xE5B JUMP JUMPDEST PUSH3 0x10AC DUP3 DUP3 DUP6 PUSH3 0xFD1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x10E4 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x10CF JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x10DB DUP6 DUP3 PUSH3 0x104E JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x114B JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x10F4 DUP7 PUSH3 0xE90 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x111E JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x10F7 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x113E JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x113A PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x102E JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x1168 DUP2 PUSH3 0x1153 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH3 0x1179 DUP2 PUSH3 0xF18 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x11AC DUP3 PUSH3 0x117F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x11BE DUP2 PUSH3 0x119F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH3 0x11DB PUSH1 0x0 DUP4 ADD DUP9 PUSH3 0x115D JUMP JUMPDEST PUSH3 0x11EA PUSH1 0x20 DUP4 ADD DUP8 PUSH3 0x115D JUMP JUMPDEST PUSH3 0x11F9 PUSH1 0x40 DUP4 ADD DUP7 PUSH3 0x115D JUMP JUMPDEST PUSH3 0x1208 PUSH1 0x60 DUP4 ADD DUP6 PUSH3 0x116E JUMP JUMPDEST PUSH3 0x1217 PUSH1 0x80 DUP4 ADD DUP5 PUSH3 0x11B3 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x1252 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x1235 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x127C DUP3 PUSH3 0xDF2 JUMP JUMPDEST PUSH3 0x1288 DUP2 DUP6 PUSH3 0x1221 JUMP JUMPDEST SWAP4 POP PUSH3 0x129A DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH3 0x1232 JUMP JUMPDEST PUSH3 0x12A5 DUP2 PUSH3 0x125E JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x12CC DUP2 DUP5 PUSH3 0x126F JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x12FD DUP3 MLOAD PUSH3 0x1153 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1313 DUP3 PUSH3 0x12D4 JUMP JUMPDEST DUP3 PUSH3 0x131F DUP5 PUSH3 0x12DF JUMP JUMPDEST SWAP1 POP PUSH3 0x132C DUP2 PUSH3 0x12EF JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP3 LT ISZERO PUSH3 0x136F JUMPI PUSH3 0x136A PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 PUSH1 0x20 SUB PUSH1 0x8 MUL PUSH3 0xEB5 JUMP JUMPDEST DUP4 AND SWAP3 POP JUMPDEST POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433230566F7465733A20746F74616C20737570706C79207269736B73206F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x766572666C6F77696E6720766F74657300000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x13D4 PUSH1 0x30 DUP4 PUSH3 0x1221 JUMP JUMPDEST SWAP2 POP PUSH3 0x13E1 DUP3 PUSH3 0x1376 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x1407 DUP2 PUSH3 0x13C5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1446 PUSH1 0x1F DUP4 PUSH3 0x1221 JUMP JUMPDEST SWAP2 POP PUSH3 0x1453 DUP3 PUSH3 0x140E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x1479 DUP2 PUSH3 0x1437 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH3 0x14BC DUP3 PUSH3 0xF18 JUMP JUMPDEST SWAP2 POP PUSH3 0x14C9 DUP4 PUSH3 0xF18 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH3 0x14E4 JUMPI PUSH3 0x14E3 PUSH3 0x1480 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x1501 PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x116E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x53616665436173743A2076616C756520646F65736E27742066697420696E2032 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x3234206269747300000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1565 PUSH1 0x27 DUP4 PUSH3 0x1221 JUMP JUMPDEST SWAP2 POP PUSH3 0x1572 DUP3 PUSH3 0x1507 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x1598 DUP2 PUSH3 0x1556 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x53616665436173743A2076616C756520646F65736E27742066697420696E2033 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x3220626974730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x15FD PUSH1 0x26 DUP4 PUSH3 0x1221 JUMP JUMPDEST SWAP2 POP PUSH3 0x160A DUP3 PUSH3 0x159F JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x1630 DUP2 PUSH3 0x15EE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x53616665436173743A2076616C756520646F65736E27742066697420696E2034 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x3820626974730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1695 PUSH1 0x26 DUP4 PUSH3 0x1221 JUMP JUMPDEST SWAP2 POP PUSH3 0x16A2 DUP3 PUSH3 0x1637 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x16C8 DUP2 PUSH3 0x1686 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH3 0x16E6 PUSH1 0x0 DUP4 ADD DUP6 PUSH3 0x116E JUMP JUMPDEST PUSH3 0x16F5 PUSH1 0x20 DUP4 ADD DUP5 PUSH3 0x116E JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1709 DUP3 PUSH3 0xF18 JUMP JUMPDEST SWAP2 POP PUSH3 0x1716 DUP4 PUSH3 0xF18 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH3 0x1731 JUMPI PUSH3 0x1730 PUSH3 0x1480 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH1 0xC0 MLOAD PUSH1 0xE0 MLOAD PUSH2 0x100 MLOAD PUSH2 0x120 MLOAD PUSH2 0x140 MLOAD PUSH2 0x3F47 PUSH3 0x1792 PUSH1 0x0 CODECOPY PUSH1 0x0 PUSH2 0xA29 ADD MSTORE PUSH1 0x0 PUSH2 0x9F5 ADD MSTORE PUSH1 0x0 PUSH2 0x1DD7 ADD MSTORE PUSH1 0x0 PUSH2 0x1DB6 ADD MSTORE PUSH1 0x0 PUSH2 0x171A ADD MSTORE PUSH1 0x0 PUSH2 0x1770 ADD MSTORE PUSH1 0x0 PUSH2 0x1799 ADD MSTORE PUSH2 0x3F47 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1C4 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7ECEBE00 GT PUSH2 0xF9 JUMPI DUP1 PUSH4 0xA457C2D7 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xD505ACCF GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x55F JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x57B JUMPI DUP1 PUSH4 0xF1127ED8 EQ PUSH2 0x5AB JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x5DB JUMPI PUSH2 0x1C4 JUMP JUMPDEST DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x4E3 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x513 JUMPI DUP1 PUSH4 0xC3CDA520 EQ PUSH2 0x543 JUMPI PUSH2 0x1C4 JUMP JUMPDEST DUP1 PUSH4 0x8E539E8C GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x8E539E8C EQ PUSH2 0x447 JUMPI DUP1 PUSH4 0x91DDADF4 EQ PUSH2 0x477 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x495 JUMPI DUP1 PUSH4 0x9AB24EB0 EQ PUSH2 0x4B3 JUMPI PUSH2 0x1C4 JUMP JUMPDEST DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x3D5 JUMPI DUP1 PUSH4 0x84B0196E EQ PUSH2 0x405 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x429 JUMPI PUSH2 0x1C4 JUMP JUMPDEST DUP1 PUSH4 0x3A46B1A8 GT PUSH2 0x166 JUMPI DUP1 PUSH4 0x5C19A95C GT PUSH2 0x140 JUMPI DUP1 PUSH4 0x5C19A95C EQ PUSH2 0x34F JUMPI DUP1 PUSH4 0x6FCFFF45 EQ PUSH2 0x36B JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x39B JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x3CB JUMPI PUSH2 0x1C4 JUMP JUMPDEST DUP1 PUSH4 0x3A46B1A8 EQ PUSH2 0x2D1 JUMPI DUP1 PUSH4 0x4BF5D7E9 EQ PUSH2 0x301 JUMPI DUP1 PUSH4 0x587CDE1E EQ PUSH2 0x31F JUMPI PUSH2 0x1C4 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0x1A2 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x235 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x265 JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x283 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x2A1 JUMPI PUSH2 0x1C4 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1C9 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1E7 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x217 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1D1 PUSH2 0x5F7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DE SWAP2 SWAP1 PUSH2 0x29F5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x201 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FC SWAP2 SWAP1 PUSH2 0x2AB0 JUMP JUMPDEST PUSH2 0x689 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20E SWAP2 SWAP1 PUSH2 0x2B0B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x21F PUSH2 0x6AC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x22C SWAP2 SWAP1 PUSH2 0x2B35 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x24F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x24A SWAP2 SWAP1 PUSH2 0x2B50 JUMP JUMPDEST PUSH2 0x6B6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25C SWAP2 SWAP1 PUSH2 0x2B0B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x26D PUSH2 0x6E5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27A SWAP2 SWAP1 PUSH2 0x2BBF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x28B PUSH2 0x6EE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x298 SWAP2 SWAP1 PUSH2 0x2BF3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2BB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B6 SWAP2 SWAP1 PUSH2 0x2AB0 JUMP JUMPDEST PUSH2 0x6FD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C8 SWAP2 SWAP1 PUSH2 0x2B0B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2EB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E6 SWAP2 SWAP1 PUSH2 0x2AB0 JUMP JUMPDEST PUSH2 0x734 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F8 SWAP2 SWAP1 PUSH2 0x2B35 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x309 PUSH2 0x7D7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x316 SWAP2 SWAP1 PUSH2 0x29F5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x339 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x334 SWAP2 SWAP1 PUSH2 0x2C0E JUMP JUMPDEST PUSH2 0x865 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x346 SWAP2 SWAP1 PUSH2 0x2C4A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x369 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x364 SWAP2 SWAP1 PUSH2 0x2C0E JUMP JUMPDEST PUSH2 0x8CE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x385 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x380 SWAP2 SWAP1 PUSH2 0x2C0E JUMP JUMPDEST PUSH2 0x8E2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x392 SWAP2 SWAP1 PUSH2 0x2C84 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3B5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3B0 SWAP2 SWAP1 PUSH2 0x2C0E JUMP JUMPDEST PUSH2 0x936 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3C2 SWAP2 SWAP1 PUSH2 0x2B35 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3D3 PUSH2 0x97E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3EF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3EA SWAP2 SWAP1 PUSH2 0x2C0E JUMP JUMPDEST PUSH2 0x992 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3FC SWAP2 SWAP1 PUSH2 0x2B35 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x40D PUSH2 0x9E2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x420 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2D98 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x431 PUSH2 0xAE4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x43E SWAP2 SWAP1 PUSH2 0x2C4A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x461 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x45C SWAP2 SWAP1 PUSH2 0x2E1C JUMP JUMPDEST PUSH2 0xB0E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x46E SWAP2 SWAP1 PUSH2 0x2B35 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x47F PUSH2 0xB73 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x48C SWAP2 SWAP1 PUSH2 0x2E6A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x49D PUSH2 0xB83 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4AA SWAP2 SWAP1 PUSH2 0x29F5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4CD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4C8 SWAP2 SWAP1 PUSH2 0x2C0E JUMP JUMPDEST PUSH2 0xC15 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4DA SWAP2 SWAP1 PUSH2 0x2B35 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4FD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4F8 SWAP2 SWAP1 PUSH2 0x2AB0 JUMP JUMPDEST PUSH2 0xD1D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x50A SWAP2 SWAP1 PUSH2 0x2B0B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x52D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x528 SWAP2 SWAP1 PUSH2 0x2AB0 JUMP JUMPDEST PUSH2 0xD94 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x53A SWAP2 SWAP1 PUSH2 0x2B0B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x55D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x558 SWAP2 SWAP1 PUSH2 0x2EDD JUMP JUMPDEST PUSH2 0xDB7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x579 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x574 SWAP2 SWAP1 PUSH2 0x2F6A JUMP JUMPDEST PUSH2 0xEBB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x595 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x590 SWAP2 SWAP1 PUSH2 0x300C JUMP JUMPDEST PUSH2 0xFFD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5A2 SWAP2 SWAP1 PUSH2 0x2B35 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5C5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5C0 SWAP2 SWAP1 PUSH2 0x3078 JUMP JUMPDEST PUSH2 0x1084 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5D2 SWAP2 SWAP1 PUSH2 0x312D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5F5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5F0 SWAP2 SWAP1 PUSH2 0x2C0E JUMP JUMPDEST PUSH2 0x1194 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x606 SWAP1 PUSH2 0x3177 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x632 SWAP1 PUSH2 0x3177 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x67F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x654 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x67F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x662 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x694 PUSH2 0x1243 JUMP JUMPDEST SWAP1 POP PUSH2 0x6A1 DUP2 DUP6 DUP6 PUSH2 0x124B JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x6C1 PUSH2 0x1243 JUMP JUMPDEST SWAP1 POP PUSH2 0x6CE DUP6 DUP3 DUP6 PUSH2 0x1414 JUMP JUMPDEST PUSH2 0x6D9 DUP6 DUP6 DUP6 PUSH2 0x14A0 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6F8 PUSH2 0x1716 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x708 PUSH2 0x1243 JUMP JUMPDEST SWAP1 POP PUSH2 0x729 DUP2 DUP6 DUP6 PUSH2 0x71A DUP6 DUP10 PUSH2 0xFFD JUMP JUMPDEST PUSH2 0x724 SWAP2 SWAP1 PUSH2 0x31D7 JUMP JUMPDEST PUSH2 0x124B JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x73E PUSH2 0xB73 JUMP JUMPDEST PUSH6 0xFFFFFFFFFFFF AND DUP3 LT PUSH2 0x787 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x77E SWAP1 PUSH2 0x3257 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7CF PUSH1 0xA PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP4 PUSH2 0x17CD JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 NUMBER PUSH2 0x7E2 PUSH2 0xB73 JUMP JUMPDEST PUSH6 0xFFFFFFFFFFFF AND EQ PUSH2 0x82A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x821 SWAP1 PUSH2 0x32C3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1D DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x6D6F64653D626C6F636B6E756D6265722666726F6D3D64656661756C74000000 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x9 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x8DF PUSH2 0x8D9 PUSH2 0x1243 JUMP JUMPDEST DUP3 PUSH2 0x1915 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x92F PUSH1 0xA PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD SWAP1 POP PUSH2 0x1A2F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x986 PUSH2 0x1A82 JUMP JUMPDEST PUSH2 0x990 PUSH1 0x0 PUSH2 0x1B00 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9DB PUSH1 0x7 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x1BC6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 PUSH2 0xA22 PUSH1 0x5 PUSH32 0x0 PUSH2 0x1BD4 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xA56 PUSH1 0x6 PUSH32 0x0 PUSH2 0x1BD4 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST CHAINID ADDRESS PUSH1 0x0 DUP1 SHL PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xA77 JUMPI PUSH2 0xA76 PUSH2 0x32E3 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xAA5 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP PUSH32 0xF00000000000000000000000000000000000000000000000000000000000000 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 SWAP7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB18 PUSH2 0xB73 JUMP JUMPDEST PUSH6 0xFFFFFFFFFFFF AND DUP3 LT PUSH2 0xB61 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB58 SWAP1 PUSH2 0x3257 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB6C PUSH1 0xB DUP4 PUSH2 0x17CD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB7E NUMBER PUSH2 0x1C84 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0xB92 SWAP1 PUSH2 0x3177 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xBBE SWAP1 PUSH2 0x3177 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xC0B JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xBE0 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xC0B JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xBEE JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xA PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH1 0x0 DUP2 EQ PUSH2 0xCF4 JUMPI PUSH1 0xA PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 DUP3 SUB DUP2 SLOAD DUP2 LT PUSH2 0xCB9 JUMPI PUSH2 0xCB8 PUSH2 0x3312 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 ADD PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xCF7 JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xD28 PUSH2 0x1243 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xD36 DUP3 DUP7 PUSH2 0xFFD JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0xD7B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD72 SWAP1 PUSH2 0x33B3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD88 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x124B JUMP JUMPDEST PUSH1 0x1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xD9F PUSH2 0x1243 JUMP JUMPDEST SWAP1 POP PUSH2 0xDAC DUP2 DUP6 DUP6 PUSH2 0x14A0 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP4 TIMESTAMP GT ISZERO PUSH2 0xDFA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDF1 SWAP1 PUSH2 0x341F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xE5C PUSH2 0xE54 PUSH32 0xE48329057BFD03D55E49B547132E39CFFD9C1820AD7B9D4C5307691425D15ADF DUP10 DUP10 DUP10 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xE39 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x343F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH2 0x1CD9 JUMP JUMPDEST DUP6 DUP6 DUP6 PUSH2 0x1CF3 JUMP JUMPDEST SWAP1 POP PUSH2 0xE67 DUP2 PUSH2 0x1D1E JUMP JUMPDEST DUP7 EQ PUSH2 0xEA8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE9F SWAP1 PUSH2 0x34D0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xEB2 DUP2 DUP9 PUSH2 0x1915 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST DUP4 TIMESTAMP GT ISZERO PUSH2 0xEFE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEF5 SWAP1 PUSH2 0x353C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP9 DUP9 DUP9 PUSH2 0xF2D DUP13 PUSH2 0x1D1E JUMP JUMPDEST DUP10 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xF43 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x355C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH2 0xF66 DUP3 PUSH2 0x1CD9 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xF76 DUP3 DUP8 DUP8 DUP8 PUSH2 0x1CF3 JUMP JUMPDEST SWAP1 POP DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xFE6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFDD SWAP1 PUSH2 0x3609 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xFF1 DUP11 DUP11 DUP11 PUSH2 0x124B JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x108C PUSH2 0x2927 JUMP JUMPDEST PUSH1 0xA PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP3 PUSH4 0xFFFFFFFF AND DUP2 SLOAD DUP2 LT PUSH2 0x10E3 JUMPI PUSH2 0x10E2 PUSH2 0x3312 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x119C PUSH2 0x1A82 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x120B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1202 SWAP1 PUSH2 0x369B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1214 DUP2 PUSH2 0x1B00 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x1225 SWAP2 SWAP1 PUSH2 0x31D7 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x123B SWAP2 SWAP1 PUSH2 0x36BB JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x12BA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12B1 SWAP1 PUSH2 0x3761 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1329 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1320 SWAP1 PUSH2 0x37F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1407 SWAP2 SWAP1 PUSH2 0x2B35 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1420 DUP5 DUP5 PUSH2 0xFFD JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x149A JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x148C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1483 SWAP1 PUSH2 0x385F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1499 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x124B JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x150F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1506 SWAP1 PUSH2 0x38F1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x157E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1575 SWAP1 PUSH2 0x3983 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1589 DUP4 DUP4 DUP4 PUSH2 0x1D7C JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x160F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1606 SWAP1 PUSH2 0x3A15 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x16FD SWAP2 SWAP1 PUSH2 0x2B35 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x1710 DUP5 DUP5 DUP5 PUSH2 0x1D81 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x1792 JUMPI POP PUSH32 0x0 CHAINID EQ JUMPDEST ISZERO PUSH2 0x17BF JUMPI PUSH32 0x0 SWAP1 POP PUSH2 0x17CA JUMP JUMPDEST PUSH2 0x17C7 PUSH2 0x1D91 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH1 0x0 DUP1 DUP3 SWAP1 POP PUSH1 0x5 DUP4 GT ISZERO PUSH2 0x1843 JUMPI PUSH1 0x0 PUSH2 0x17F1 DUP5 PUSH2 0x1E27 JUMP JUMPDEST DUP5 PUSH2 0x17FC SWAP2 SWAP1 PUSH2 0x36BB JUMP JUMPDEST SWAP1 POP DUP6 PUSH2 0x1809 DUP9 DUP4 PUSH2 0x1F20 JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND GT ISZERO PUSH2 0x1831 JUMPI DUP1 SWAP2 POP PUSH2 0x1841 JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH2 0x183E SWAP2 SWAP1 PUSH2 0x31D7 JUMP JUMPDEST SWAP3 POP JUMPDEST POP JUMPDEST JUMPDEST DUP1 DUP3 LT ISZERO PUSH2 0x18A3 JUMPI PUSH1 0x0 PUSH2 0x1858 DUP4 DUP4 PUSH2 0x1F35 JUMP JUMPDEST SWAP1 POP DUP6 PUSH2 0x1865 DUP9 DUP4 PUSH2 0x1F20 JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND GT ISZERO PUSH2 0x188D JUMPI DUP1 SWAP2 POP PUSH2 0x189D JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH2 0x189A SWAP2 SWAP1 PUSH2 0x31D7 JUMP JUMPDEST SWAP3 POP JUMPDEST POP PUSH2 0x1844 JUMP JUMPDEST PUSH1 0x0 DUP2 EQ PUSH2 0x18E9 JUMPI PUSH2 0x18B8 DUP7 PUSH1 0x1 DUP4 SUB PUSH2 0x1F20 JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x18EC JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1920 DUP4 PUSH2 0x865 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x192D DUP5 PUSH2 0x936 JUMP JUMPDEST SWAP1 POP DUP3 PUSH1 0x9 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x3134E8A2E6D97E929A7E54011EA5485D7D196DD5F0BA4D4EF95803E8E3FC257F PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x1A29 DUP3 DUP5 DUP4 PUSH2 0x1F5B JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP1 AND DUP3 GT ISZERO PUSH2 0x1A7A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A71 SWAP1 PUSH2 0x3AA7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A8A PUSH2 0x1243 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1AA8 PUSH2 0xAE4 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1AFE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1AF5 SWAP1 PUSH2 0x3B13 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0xC PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0xFF PUSH1 0x0 SHL DUP4 EQ PUSH2 0x1BF1 JUMPI PUSH2 0x1BEA DUP4 PUSH2 0x2154 JUMP JUMPDEST SWAP1 POP PUSH2 0x1C7E JUMP JUMPDEST DUP2 DUP1 SLOAD PUSH2 0x1BFD SWAP1 PUSH2 0x3177 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1C29 SWAP1 PUSH2 0x3177 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1C76 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1C4B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1C76 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1C59 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH6 0xFFFFFFFFFFFF DUP1 AND DUP3 GT ISZERO PUSH2 0x1CD1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1CC8 SWAP1 PUSH2 0x3BA5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CEC PUSH2 0x1CE6 PUSH2 0x1716 JUMP JUMPDEST DUP4 PUSH2 0x21C8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x1D04 DUP8 DUP8 DUP8 DUP8 PUSH2 0x2209 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x1D11 DUP2 PUSH2 0x22EB JUMP JUMPDEST DUP2 SWAP3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x7 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH2 0x1D6B DUP2 PUSH2 0x1BC6 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D76 DUP2 PUSH2 0x2451 JUMP JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x1D8C DUP4 DUP4 DUP4 PUSH2 0x2467 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH32 0x0 PUSH32 0x0 CHAINID ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1E0C SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3BC5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SUB PUSH2 0x1E39 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x1F1B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH2 0x1E46 DUP5 PUSH2 0x2492 JUMP JUMPDEST SWAP1 SHR PUSH1 0x1 SWAP1 SHL SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x1E60 JUMPI PUSH2 0x1E5F PUSH2 0x3C18 JUMP JUMPDEST JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x1E79 JUMPI PUSH2 0x1E78 PUSH2 0x3C18 JUMP JUMPDEST JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x1E92 JUMPI PUSH2 0x1E91 PUSH2 0x3C18 JUMP JUMPDEST JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x1EAB JUMPI PUSH2 0x1EAA PUSH2 0x3C18 JUMP JUMPDEST JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x1EC4 JUMPI PUSH2 0x1EC3 PUSH2 0x3C18 JUMP JUMPDEST JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x1EDD JUMPI PUSH2 0x1EDC PUSH2 0x3C18 JUMP JUMPDEST JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x1EF6 JUMPI PUSH2 0x1EF5 PUSH2 0x3C18 JUMP JUMPDEST JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH2 0x1F17 DUP2 DUP3 DUP6 DUP2 PUSH2 0x1F11 JUMPI PUSH2 0x1F10 PUSH2 0x3C18 JUMP JUMPDEST JUMPDEST DIV PUSH2 0x2573 JUMP JUMPDEST SWAP2 POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 MSTORE DUP2 PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DUP5 XOR PUSH2 0x1F46 SWAP2 SWAP1 PUSH2 0x3C47 JUMP JUMPDEST DUP3 DUP5 AND PUSH2 0x1F53 SWAP2 SWAP1 PUSH2 0x31D7 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x1F97 JUMPI POP PUSH1 0x0 DUP2 GT JUMPDEST ISZERO PUSH2 0x214F JUMPI PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2075 JUMPI PUSH1 0x0 DUP1 PUSH2 0x201E PUSH1 0xA PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x122D DUP6 PUSH2 0x258C JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDEC2BACDD2F05B59DE34DA9B523DFF8BE42E5E38E818C82FDB0BAE774387A724 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x206A SWAP3 SWAP2 SWAP1 PUSH2 0x3C78 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x214E JUMPI PUSH1 0x0 DUP1 PUSH2 0x20F7 PUSH1 0xA PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x1217 DUP6 PUSH2 0x258C JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDEC2BACDD2F05B59DE34DA9B523DFF8BE42E5E38E818C82FDB0BAE774387A724 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x2143 SWAP3 SWAP2 SWAP1 PUSH2 0x3C78 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x2161 DUP4 PUSH2 0x2867 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x20 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2180 JUMPI PUSH2 0x217F PUSH2 0x32E3 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x21B2 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 MSTORE DUP4 PUSH1 0x20 DUP3 ADD MSTORE DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1901000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE DUP4 PUSH1 0x2 DUP3 ADD MSTORE DUP3 PUSH1 0x22 DUP3 ADD MSTORE PUSH1 0x42 DUP2 KECCAK256 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP4 PUSH1 0x0 SHR GT ISZERO PUSH2 0x2244 JUMPI PUSH1 0x0 PUSH1 0x3 SWAP2 POP SWAP2 POP PUSH2 0x22E2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP8 DUP8 DUP8 DUP8 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x2269 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3CA1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x228B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x22D9 JUMPI PUSH1 0x0 PUSH1 0x1 SWAP3 POP SWAP3 POP POP PUSH2 0x22E2 JUMP JUMPDEST DUP1 PUSH1 0x0 SWAP3 POP SWAP3 POP POP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x22FF JUMPI PUSH2 0x22FE PUSH2 0x3CE6 JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x2312 JUMPI PUSH2 0x2311 PUSH2 0x3CE6 JUMP JUMPDEST JUMPDEST SUB ISZERO PUSH2 0x244E JUMPI PUSH1 0x1 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x232C JUMPI PUSH2 0x232B PUSH2 0x3CE6 JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x233F JUMPI PUSH2 0x233E PUSH2 0x3CE6 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x237F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2376 SWAP1 PUSH2 0x3D61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x2393 JUMPI PUSH2 0x2392 PUSH2 0x3CE6 JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x23A6 JUMPI PUSH2 0x23A5 PUSH2 0x3CE6 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x23E6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x23DD SWAP1 PUSH2 0x3DCD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x23FA JUMPI PUSH2 0x23F9 PUSH2 0x3CE6 JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x240D JUMPI PUSH2 0x240C PUSH2 0x3CE6 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x244D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2444 SWAP1 PUSH2 0x3E5F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x2472 DUP4 DUP4 DUP4 PUSH2 0x28B7 JUMP JUMPDEST PUSH2 0x248D PUSH2 0x247E DUP5 PUSH2 0x865 JUMP JUMPDEST PUSH2 0x2487 DUP5 PUSH2 0x865 JUMP JUMPDEST DUP4 PUSH2 0x1F5B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH1 0x0 PUSH1 0x80 DUP5 SWAP1 SHR GT ISZERO PUSH2 0x24B4 JUMPI PUSH1 0x80 DUP4 SWAP1 SHR SWAP3 POP PUSH1 0x80 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP5 SWAP1 SHR GT ISZERO PUSH2 0x24CF JUMPI PUSH1 0x40 DUP4 SWAP1 SHR SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP5 SWAP1 SHR GT ISZERO PUSH2 0x24EA JUMPI PUSH1 0x20 DUP4 SWAP1 SHR SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x0 PUSH1 0x10 DUP5 SWAP1 SHR GT ISZERO PUSH2 0x2505 JUMPI PUSH1 0x10 DUP4 SWAP1 SHR SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP5 SWAP1 SHR GT ISZERO PUSH2 0x2520 JUMPI PUSH1 0x8 DUP4 SWAP1 SHR SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x0 PUSH1 0x4 DUP5 SWAP1 SHR GT ISZERO PUSH2 0x253B JUMPI PUSH1 0x4 DUP4 SWAP1 SHR SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP5 SWAP1 SHR GT ISZERO PUSH2 0x2556 JUMPI PUSH1 0x2 DUP4 SWAP1 SHR SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP5 SWAP1 SHR GT ISZERO PUSH2 0x256A JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 LT PUSH2 0x2582 JUMPI DUP2 PUSH2 0x2584 JUMP JUMPDEST DUP3 JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH1 0x0 DUP1 DUP3 EQ PUSH2 0x2652 JUMPI PUSH2 0x25AE DUP8 PUSH1 0x1 DUP5 SUB PUSH2 0x1F20 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP PUSH2 0x268E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP JUMPDEST SWAP1 POP DUP1 PUSH1 0x20 ADD MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP4 POP PUSH2 0x26C3 DUP5 DUP7 DUP9 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP3 POP PUSH1 0x0 DUP3 GT DUP1 ISZERO PUSH2 0x26ED JUMPI POP PUSH2 0x26D8 PUSH2 0xB73 JUMP JUMPDEST PUSH6 0xFFFFFFFFFFFF AND DUP2 PUSH1 0x0 ADD MLOAD PUSH4 0xFFFFFFFF AND EQ JUMPDEST ISZERO PUSH2 0x275E JUMPI PUSH2 0x26FB DUP4 PUSH2 0x28BC JUMP JUMPDEST PUSH2 0x2708 DUP9 PUSH1 0x1 DUP6 SUB PUSH2 0x1F20 JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x4 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x285D JUMP JUMPDEST DUP7 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x2782 PUSH2 0x2775 PUSH2 0xB73 JUMP JUMPDEST PUSH6 0xFFFFFFFFFFFF AND PUSH2 0x1A2F JUMP JUMPDEST PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2796 DUP7 PUSH2 0x28BC JUMP JUMPDEST PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x4 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP JUMPDEST POP POP SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xFF DUP4 PUSH1 0x0 SHR AND SWAP1 POP PUSH1 0x1F DUP2 GT ISZERO PUSH2 0x28AE JUMPI PUSH1 0x40 MLOAD PUSH32 0xB3512B0C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 AND DUP3 GT ISZERO PUSH2 0x291F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2916 SWAP1 PUSH2 0x3EF1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x299F JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2984 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x29C7 DUP3 PUSH2 0x2965 JUMP JUMPDEST PUSH2 0x29D1 DUP2 DUP6 PUSH2 0x2970 JUMP JUMPDEST SWAP4 POP PUSH2 0x29E1 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2981 JUMP JUMPDEST PUSH2 0x29EA DUP2 PUSH2 0x29AB JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2A0F DUP2 DUP5 PUSH2 0x29BC JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A47 DUP3 PUSH2 0x2A1C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2A57 DUP2 PUSH2 0x2A3C JUMP JUMPDEST DUP2 EQ PUSH2 0x2A62 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2A74 DUP2 PUSH2 0x2A4E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2A8D DUP2 PUSH2 0x2A7A JUMP JUMPDEST DUP2 EQ PUSH2 0x2A98 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2AAA DUP2 PUSH2 0x2A84 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2AC7 JUMPI PUSH2 0x2AC6 PUSH2 0x2A17 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2AD5 DUP6 DUP3 DUP7 ADD PUSH2 0x2A65 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2AE6 DUP6 DUP3 DUP7 ADD PUSH2 0x2A9B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2B05 DUP2 PUSH2 0x2AF0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2B20 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2AFC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2B2F DUP2 PUSH2 0x2A7A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2B4A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2B26 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2B69 JUMPI PUSH2 0x2B68 PUSH2 0x2A17 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2B77 DUP7 DUP3 DUP8 ADD PUSH2 0x2A65 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x2B88 DUP7 DUP3 DUP8 ADD PUSH2 0x2A65 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x2B99 DUP7 DUP3 DUP8 ADD PUSH2 0x2A9B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2BB9 DUP2 PUSH2 0x2BA3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2BD4 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2BB0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2BED DUP2 PUSH2 0x2BDA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2C08 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2BE4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2C24 JUMPI PUSH2 0x2C23 PUSH2 0x2A17 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2C32 DUP5 DUP3 DUP6 ADD PUSH2 0x2A65 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2C44 DUP2 PUSH2 0x2A3C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2C5F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2C3B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2C7E DUP2 PUSH2 0x2C65 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2C99 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2C75 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFF00000000000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2CD4 DUP2 PUSH2 0x2C9F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2D0F DUP2 PUSH2 0x2A7A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2D21 DUP4 DUP4 PUSH2 0x2D06 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2D45 DUP3 PUSH2 0x2CDA JUMP JUMPDEST PUSH2 0x2D4F DUP2 DUP6 PUSH2 0x2CE5 JUMP JUMPDEST SWAP4 POP PUSH2 0x2D5A DUP4 PUSH2 0x2CF6 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2D8B JUMPI DUP2 MLOAD PUSH2 0x2D72 DUP9 DUP3 PUSH2 0x2D15 JUMP JUMPDEST SWAP8 POP PUSH2 0x2D7D DUP4 PUSH2 0x2D2D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x2D5E JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE0 DUP3 ADD SWAP1 POP PUSH2 0x2DAD PUSH1 0x0 DUP4 ADD DUP11 PUSH2 0x2CCB JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x2DBF DUP2 DUP10 PUSH2 0x29BC JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x2DD3 DUP2 DUP9 PUSH2 0x29BC JUMP JUMPDEST SWAP1 POP PUSH2 0x2DE2 PUSH1 0x60 DUP4 ADD DUP8 PUSH2 0x2B26 JUMP JUMPDEST PUSH2 0x2DEF PUSH1 0x80 DUP4 ADD DUP7 PUSH2 0x2C3B JUMP JUMPDEST PUSH2 0x2DFC PUSH1 0xA0 DUP4 ADD DUP6 PUSH2 0x2BE4 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0xC0 DUP4 ADD MSTORE PUSH2 0x2E0E DUP2 DUP5 PUSH2 0x2D3A JUMP JUMPDEST SWAP1 POP SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2E32 JUMPI PUSH2 0x2E31 PUSH2 0x2A17 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2E40 DUP5 DUP3 DUP6 ADD PUSH2 0x2A9B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH6 0xFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2E64 DUP2 PUSH2 0x2E49 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2E7F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2E5B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2E8E DUP2 PUSH2 0x2BA3 JUMP JUMPDEST DUP2 EQ PUSH2 0x2E99 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2EAB DUP2 PUSH2 0x2E85 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2EBA DUP2 PUSH2 0x2BDA JUMP JUMPDEST DUP2 EQ PUSH2 0x2EC5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2ED7 DUP2 PUSH2 0x2EB1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x2EFA JUMPI PUSH2 0x2EF9 PUSH2 0x2A17 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2F08 DUP10 DUP3 DUP11 ADD PUSH2 0x2A65 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x20 PUSH2 0x2F19 DUP10 DUP3 DUP11 ADD PUSH2 0x2A9B JUMP JUMPDEST SWAP6 POP POP PUSH1 0x40 PUSH2 0x2F2A DUP10 DUP3 DUP11 ADD PUSH2 0x2A9B JUMP JUMPDEST SWAP5 POP POP PUSH1 0x60 PUSH2 0x2F3B DUP10 DUP3 DUP11 ADD PUSH2 0x2E9C JUMP JUMPDEST SWAP4 POP POP PUSH1 0x80 PUSH2 0x2F4C DUP10 DUP3 DUP11 ADD PUSH2 0x2EC8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xA0 PUSH2 0x2F5D DUP10 DUP3 DUP11 ADD PUSH2 0x2EC8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x2F89 JUMPI PUSH2 0x2F88 PUSH2 0x2A17 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2F97 DUP11 DUP3 DUP12 ADD PUSH2 0x2A65 JUMP JUMPDEST SWAP8 POP POP PUSH1 0x20 PUSH2 0x2FA8 DUP11 DUP3 DUP12 ADD PUSH2 0x2A65 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x40 PUSH2 0x2FB9 DUP11 DUP3 DUP12 ADD PUSH2 0x2A9B JUMP JUMPDEST SWAP6 POP POP PUSH1 0x60 PUSH2 0x2FCA DUP11 DUP3 DUP12 ADD PUSH2 0x2A9B JUMP JUMPDEST SWAP5 POP POP PUSH1 0x80 PUSH2 0x2FDB DUP11 DUP3 DUP12 ADD PUSH2 0x2E9C JUMP JUMPDEST SWAP4 POP POP PUSH1 0xA0 PUSH2 0x2FEC DUP11 DUP3 DUP12 ADD PUSH2 0x2EC8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xC0 PUSH2 0x2FFD DUP11 DUP3 DUP12 ADD PUSH2 0x2EC8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3023 JUMPI PUSH2 0x3022 PUSH2 0x2A17 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3031 DUP6 DUP3 DUP7 ADD PUSH2 0x2A65 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x3042 DUP6 DUP3 DUP7 ADD PUSH2 0x2A65 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x3055 DUP2 PUSH2 0x2C65 JUMP JUMPDEST DUP2 EQ PUSH2 0x3060 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3072 DUP2 PUSH2 0x304C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x308F JUMPI PUSH2 0x308E PUSH2 0x2A17 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x309D DUP6 DUP3 DUP7 ADD PUSH2 0x2A65 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x30AE DUP6 DUP3 DUP7 ADD PUSH2 0x3063 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x30C1 DUP2 PUSH2 0x2C65 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x30F8 DUP2 PUSH2 0x30C7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x40 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x3114 PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x30B8 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x3127 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x30EF JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3142 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x30FE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x318F JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x31A2 JUMPI PUSH2 0x31A1 PUSH2 0x3148 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x31E2 DUP3 PUSH2 0x2A7A JUMP JUMPDEST SWAP2 POP PUSH2 0x31ED DUP4 PUSH2 0x2A7A JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x3205 JUMPI PUSH2 0x3204 PUSH2 0x31A8 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4552433230566F7465733A20667574757265206C6F6F6B757000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3241 PUSH1 0x19 DUP4 PUSH2 0x2970 JUMP JUMPDEST SWAP2 POP PUSH2 0x324C DUP3 PUSH2 0x320B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3270 DUP2 PUSH2 0x3234 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433230566F7465733A2062726F6B656E20636C6F636B206D6F6465000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x32AD PUSH1 0x1D DUP4 PUSH2 0x2970 JUMP JUMPDEST SWAP2 POP PUSH2 0x32B8 DUP3 PUSH2 0x3277 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x32DC DUP2 PUSH2 0x32A0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x207A65726F000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x339D PUSH1 0x25 DUP4 PUSH2 0x2970 JUMP JUMPDEST SWAP2 POP PUSH2 0x33A8 DUP3 PUSH2 0x3341 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x33CC DUP2 PUSH2 0x3390 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433230566F7465733A207369676E61747572652065787069726564000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3409 PUSH1 0x1D DUP4 PUSH2 0x2970 JUMP JUMPDEST SWAP2 POP PUSH2 0x3414 DUP3 PUSH2 0x33D3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3438 DUP2 PUSH2 0x33FC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x3454 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x2BE4 JUMP JUMPDEST PUSH2 0x3461 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x2C3B JUMP JUMPDEST PUSH2 0x346E PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x2B26 JUMP JUMPDEST PUSH2 0x347B PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x2B26 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4552433230566F7465733A20696E76616C6964206E6F6E636500000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x34BA PUSH1 0x19 DUP4 PUSH2 0x2970 JUMP JUMPDEST SWAP2 POP PUSH2 0x34C5 DUP3 PUSH2 0x3484 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x34E9 DUP2 PUSH2 0x34AD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332305065726D69743A206578706972656420646561646C696E65000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3526 PUSH1 0x1D DUP4 PUSH2 0x2970 JUMP JUMPDEST SWAP2 POP PUSH2 0x3531 DUP3 PUSH2 0x34F0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3555 DUP2 PUSH2 0x3519 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0x3571 PUSH1 0x0 DUP4 ADD DUP10 PUSH2 0x2BE4 JUMP JUMPDEST PUSH2 0x357E PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0x2C3B JUMP JUMPDEST PUSH2 0x358B PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0x2C3B JUMP JUMPDEST PUSH2 0x3598 PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x2B26 JUMP JUMPDEST PUSH2 0x35A5 PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x2B26 JUMP JUMPDEST PUSH2 0x35B2 PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0x2B26 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x45524332305065726D69743A20696E76616C6964207369676E61747572650000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x35F3 PUSH1 0x1E DUP4 PUSH2 0x2970 JUMP JUMPDEST SWAP2 POP PUSH2 0x35FE DUP3 PUSH2 0x35BD JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3622 DUP2 PUSH2 0x35E6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3685 PUSH1 0x26 DUP4 PUSH2 0x2970 JUMP JUMPDEST SWAP2 POP PUSH2 0x3690 DUP3 PUSH2 0x3629 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x36B4 DUP2 PUSH2 0x3678 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x36C6 DUP3 PUSH2 0x2A7A JUMP JUMPDEST SWAP2 POP PUSH2 0x36D1 DUP4 PUSH2 0x2A7A JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x36E9 JUMPI PUSH2 0x36E8 PUSH2 0x31A8 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x374B PUSH1 0x24 DUP4 PUSH2 0x2970 JUMP JUMPDEST SWAP2 POP PUSH2 0x3756 DUP3 PUSH2 0x36EF JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x377A DUP2 PUSH2 0x373E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x37DD PUSH1 0x22 DUP4 PUSH2 0x2970 JUMP JUMPDEST SWAP2 POP PUSH2 0x37E8 DUP3 PUSH2 0x3781 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x380C DUP2 PUSH2 0x37D0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3849 PUSH1 0x1D DUP4 PUSH2 0x2970 JUMP JUMPDEST SWAP2 POP PUSH2 0x3854 DUP3 PUSH2 0x3813 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3878 DUP2 PUSH2 0x383C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x38DB PUSH1 0x25 DUP4 PUSH2 0x2970 JUMP JUMPDEST SWAP2 POP PUSH2 0x38E6 DUP3 PUSH2 0x387F JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x390A DUP2 PUSH2 0x38CE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x396D PUSH1 0x23 DUP4 PUSH2 0x2970 JUMP JUMPDEST SWAP2 POP PUSH2 0x3978 DUP3 PUSH2 0x3911 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x399C DUP2 PUSH2 0x3960 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x616C616E63650000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x39FF PUSH1 0x26 DUP4 PUSH2 0x2970 JUMP JUMPDEST SWAP2 POP PUSH2 0x3A0A DUP3 PUSH2 0x39A3 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3A2E DUP2 PUSH2 0x39F2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x53616665436173743A2076616C756520646F65736E27742066697420696E2033 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x3220626974730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3A91 PUSH1 0x26 DUP4 PUSH2 0x2970 JUMP JUMPDEST SWAP2 POP PUSH2 0x3A9C DUP3 PUSH2 0x3A35 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3AC0 DUP2 PUSH2 0x3A84 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3AFD PUSH1 0x20 DUP4 PUSH2 0x2970 JUMP JUMPDEST SWAP2 POP PUSH2 0x3B08 DUP3 PUSH2 0x3AC7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3B2C DUP2 PUSH2 0x3AF0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x53616665436173743A2076616C756520646F65736E27742066697420696E2034 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x3820626974730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3B8F PUSH1 0x26 DUP4 PUSH2 0x2970 JUMP JUMPDEST SWAP2 POP PUSH2 0x3B9A DUP3 PUSH2 0x3B33 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3BBE DUP2 PUSH2 0x3B82 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x3BDA PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x2BE4 JUMP JUMPDEST PUSH2 0x3BE7 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x2BE4 JUMP JUMPDEST PUSH2 0x3BF4 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x2BE4 JUMP JUMPDEST PUSH2 0x3C01 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x2B26 JUMP JUMPDEST PUSH2 0x3C0E PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x2C3B JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3C52 DUP3 PUSH2 0x2A7A JUMP JUMPDEST SWAP2 POP PUSH2 0x3C5D DUP4 PUSH2 0x2A7A JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x3C6D JUMPI PUSH2 0x3C6C PUSH2 0x3C18 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3C8D PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x2B26 JUMP JUMPDEST PUSH2 0x3C9A PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2B26 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x3CB6 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x2BE4 JUMP JUMPDEST PUSH2 0x3CC3 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x2BB0 JUMP JUMPDEST PUSH2 0x3CD0 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x2BE4 JUMP JUMPDEST PUSH2 0x3CDD PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x2BE4 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x45434453413A20696E76616C6964207369676E61747572650000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3D4B PUSH1 0x18 DUP4 PUSH2 0x2970 JUMP JUMPDEST SWAP2 POP PUSH2 0x3D56 DUP3 PUSH2 0x3D15 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3D7A DUP2 PUSH2 0x3D3E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45434453413A20696E76616C6964207369676E6174757265206C656E67746800 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3DB7 PUSH1 0x1F DUP4 PUSH2 0x2970 JUMP JUMPDEST SWAP2 POP PUSH2 0x3DC2 DUP3 PUSH2 0x3D81 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3DE6 DUP2 PUSH2 0x3DAA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45434453413A20696E76616C6964207369676E6174757265202773272076616C PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7565000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3E49 PUSH1 0x22 DUP4 PUSH2 0x2970 JUMP JUMPDEST SWAP2 POP PUSH2 0x3E54 DUP3 PUSH2 0x3DED JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3E78 DUP2 PUSH2 0x3E3C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x53616665436173743A2076616C756520646F65736E27742066697420696E2032 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x3234206269747300000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3EDB PUSH1 0x27 DUP4 PUSH2 0x2970 JUMP JUMPDEST SWAP2 POP PUSH2 0x3EE6 DUP3 PUSH2 0x3E7F JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3F0A DUP2 PUSH2 0x3ECE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH6 0xF1DF12A52299 SWAP2 PUSH12 0x2771CE9906AF6FDF69B27275 0xD1 0xD7 SHL CHAINID STOP 0xE1 MSIZE SWAP8 0xC 0xCB 0xAB PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ","sourceMap":"396:853:22:-:0;;;461:143;;;;;;;;;;1817:52:7;;;;;;;;;;;;;;;;;1856:4;3178:431:18;;;;;;;;;;;;;;;;;1980:113:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2054:5;2046;:13;;;;;;:::i;:::-;;2079:7;2069;:17;;;;;;:::i;:::-;;1980:113;;3251:45:18;3282:13;3251:4;:30;;;;:45;;;;:::i;:::-;3243:53;;;;;;3317:51;3351:16;3317:7;:33;;;;:51;;;;:::i;:::-;3306:62;;;;;;3408:4;3392:22;;;;;;3378:36;;;;;;3457:7;3441:25;;;;;;3424:42;;;;;;3494:13;3477:30;;;;;;3542:23;:21;;;:23;;:::i;:::-;3517:48;;;;;;3597:4;3575:27;;;;;;;;;;3178:431;;1817:52:7;936:32:0;955:12;:10;;;:12;;:::i;:::-;936:18;;;:32;;:::i;:::-;562:34:22::2;568:10;580:15;562:5;;;:34;;:::i;:::-;396:853:::0;;2895:341:14;2991:11;3040:2;3024:5;3018:19;:24;3014:216;;;3065:20;3079:5;3065:13;;;:20;;:::i;:::-;3058:27;;;;3014:216;3157:5;3116:32;3142:5;3116:25;;;:32;;:::i;:::-;:38;;:46;;;;;;:::i;:::-;;1371:66;3200:18;;3176:43;;2895:341;;;;;:::o;3963:180:18:-;4018:7;1929:95;4077:11;;4090:14;;4106:13;4129:4;4054:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;4044:92;;;;;;4037:99;;3963:180;:::o;640:96:12:-;693:7;719:10;712:17;;640:96;:::o;2426:187:0:-;2499:16;2518:6;;;;;;;;;;;2499:25;;2543:8;2534:6;;:17;;;;;;;;;;;;;;;;;;2597:8;2566:40;;2587:8;2566:40;;;;;;;;;;;;2489:124;2426:187;:::o;921:145:22:-;1035:23;1047:2;1051:6;1035:11;;;:23;;:::i;:::-;921:145;;:::o;1689:286:14:-;1754:11;1777:17;1803:3;1777:30;;1835:2;1821:4;:11;:16;1817:72;;;1874:3;1860:18;;;;;;;;;;;:::i;:::-;;;;;;;;1817:72;1955:4;:11;1946:4;1938:13;;;:::i;:::-;1930:22;;:36;1922:45;;1898:70;;;1689:286;;;:::o;3310:202:15:-;3378:20;3486:10;3476:20;;3310:202;;;:::o;7332:285:8:-;7416:28;7428:7;7437:6;7416:11;;;:28;;:::i;:::-;7479:12;:10;;;:12;;:::i;:::-;7462:29;;:13;:11;;;:13;;:::i;:::-;:29;;7454:90;;;;;;;;;;;;:::i;:::-;;;;;;;;;7555:55;7572:23;7597:4;;;;;7603:6;7555:16;;;:55;;:::i;:::-;;;7332:285;;:::o;8520:535:5:-;8622:1;8603:21;;:7;:21;;;8595:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;8671:49;8700:1;8704:7;8713:6;8671:20;;;:49;;:::i;:::-;8747:6;8731:12;;:22;;;;;;;:::i;:::-;;;;;;;;8921:6;8899:9;:18;8909:7;8899:18;;;;;;;;;;;;;;;;:28;;;;;;;;;;;8973:7;8952:37;;8969:1;8952:37;;;8982:6;8952:37;;;;;;:::i;:::-;;;;;;;;9000:48;9028:1;9032:7;9041:6;9000:19;;;:48;;:::i;:::-;8520:535;;:::o;7140:103:8:-;7193:7;7219:17;7212:24;;7140:103;:::o;3255:106:5:-;3316:7;3342:12;;3335:19;;3255:106;:::o;10194:96:8:-;10252:7;10282:1;10278;:5;;;;:::i;:::-;10271:12;;10194:96;;;;:::o;9420:768::-;9590:17;9609;9638:11;9652:5;:12;;;;9638:26;;9699:25;9734:1;9727:3;:8;:59;;9757:29;9771:5;9784:1;9778:3;:7;9757:13;;;:29;;:::i;:::-;9727:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9738:16;;;;;;;;9749:1;9738:16;;;;;;9752:1;9738:16;;;;;9727:59;9699:87;;9813:7;:13;;;9801:25;;;;9852:20;9855:9;9866:5;9852:2;:20;;:::i;:::-;9840:32;;9897:1;9891:3;:7;:39;;;;;9923:7;:5;;;:7;;:::i;:::-;9902:28;;:7;:17;;;:28;;;9891:39;9887:285;;;9988:29;10007:9;9988:18;;;:29;;:::i;:::-;9950;9964:5;9977:1;9971:3;:7;9950:13;;;:29;;:::i;:::-;:35;;;:67;;;;;;;;;;;;;;;;;;9887:285;;;10056:5;10067:89;;;;;;;;10090:26;10108:7;:5;;;:7;;:::i;:::-;10090:26;;:17;;;:26;;:::i;:::-;10067:89;;;;;;10125:29;10144:9;10125:18;;;:29;;:::i;:::-;10067:89;;;;;10056:101;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9887:285;9675:507;9628:560;9420:768;;;;;;:::o;12073:91:5:-;;;;:::o;707:193:22:-;849:43;875:4;881:2;885:6;849:25;;;:43;;:::i;:::-;707:193;;;:::o;10540:239:8:-;10626:25;10696:10;10693:1;10686:21;10759:3;10752:4;10749:1;10739:18;10735:28;10720:43;;10540:239;;;;:::o;1817:118::-;1872:6;1897:31;1915:12;1897:17;;;:31;;:::i;:::-;1890:38;;1817:118;:::o;2836:192:20:-;2893:7;2929:17;2920:26;;:5;:26;;2912:78;;;;;;;;;;;;:::i;:::-;;;;;;;;;3015:5;3000:21;;2836:192;;;:::o;15264:187::-;15320:6;15355:16;15346:25;;:5;:25;;15338:76;;;;;;;;;;;;:::i;:::-;;;;;;;;;15438:5;15424:20;;15264:187;;;:::o;8036:224:8:-;8143:43;8169:4;8175:2;8179:6;8143:25;;;:43;;:::i;:::-;8197:56;8214:15;8224:4;8214:9;;;:15;;:::i;:::-;8231:13;8241:2;8231:9;;;:13;;:::i;:::-;8246:6;8197:16;;;:56;;:::i;:::-;8036:224;;;:::o;14240:187:20:-;14296:6;14331:16;14322:25;;:5;:25;;14314:76;;;;;;;;;;;;:::i;:::-;;;;;;;;;14414:5;14400:20;;14240:187;;;:::o;12752:90:5:-;;;;:::o;2838:126:8:-;2912:7;2938:10;:19;2949:7;2938:19;;;;;;;;;;;;;;;;;;;;;;;;;2931:26;;2838:126;;;:::o;8817:597::-;8914:3;8907:10;;:3;:10;;;;:24;;;;;8930:1;8921:6;:10;8907:24;8903:505;;;8966:1;8951:17;;:3;:17;;;8947:221;;8989:17;9008;9029:54;9046:12;:17;9059:3;9046:17;;;;;;;;;;;;;;;9065:9;;;;;9076:6;9029:16;;;:54;;:::i;:::-;8988:95;;;;9127:3;9106:47;;;9132:9;9143;9106:47;;;;;;;:::i;:::-;;;;;;;;8970:198;;8947:221;9201:1;9186:17;;:3;:17;;;9182:216;;9224:17;9243;9264:49;9281:12;:17;9294:3;9281:17;;;;;;;;;;;;;;;9300:4;;;;;9306:6;9264:16;;;:49;;:::i;:::-;9223:90;;;;9357:3;9336:47;;;9362:9;9373;9336:47;;;;;;;:::i;:::-;;;;;;;;9205:193;;9182:216;8903:505;8817:597;;;:::o;10296:101::-;10359:7;10389:1;10385;:5;;;;:::i;:::-;10378:12;;10296:101;;;;:::o;7:99:23:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:180::-;160:77;157:1;150:88;257:4;254:1;247:15;281:4;278:1;271:15;298:180;346:77;343:1;336:88;443:4;440:1;433:15;467:4;464:1;457:15;484:320;528:6;565:1;559:4;555:12;545:22;;612:1;606:4;602:12;633:18;623:81;;689:4;681:6;677:17;667:27;;623:81;751:2;743:6;740:14;720:18;717:38;714:84;;770:18;;:::i;:::-;714:84;535:269;484:320;;;:::o;810:141::-;859:4;882:3;874:11;;905:3;902:1;895:14;939:4;936:1;926:18;918:26;;810:141;;;:::o;957:93::-;994:6;1041:2;1036;1029:5;1025:14;1021:23;1011:33;;957:93;;;:::o;1056:107::-;1100:8;1150:5;1144:4;1140:16;1119:37;;1056:107;;;;:::o;1169:393::-;1238:6;1288:1;1276:10;1272:18;1311:97;1341:66;1330:9;1311:97;:::i;:::-;1429:39;1459:8;1448:9;1429:39;:::i;:::-;1417:51;;1501:4;1497:9;1490:5;1486:21;1477:30;;1550:4;1540:8;1536:19;1529:5;1526:30;1516:40;;1245:317;;1169:393;;;;;:::o;1568:77::-;1605:7;1634:5;1623:16;;1568:77;;;:::o;1651:60::-;1679:3;1700:5;1693:12;;1651:60;;;:::o;1717:142::-;1767:9;1800:53;1818:34;1827:24;1845:5;1827:24;:::i;:::-;1818:34;:::i;:::-;1800:53;:::i;:::-;1787:66;;1717:142;;;:::o;1865:75::-;1908:3;1929:5;1922:12;;1865:75;;;:::o;1946:269::-;2056:39;2087:7;2056:39;:::i;:::-;2117:91;2166:41;2190:16;2166:41;:::i;:::-;2158:6;2151:4;2145:11;2117:91;:::i;:::-;2111:4;2104:105;2022:193;1946:269;;;:::o;2221:73::-;2266:3;2221:73;:::o;2300:189::-;2377:32;;:::i;:::-;2418:65;2476:6;2468;2462:4;2418:65;:::i;:::-;2353:136;2300:189;;:::o;2495:186::-;2555:120;2572:3;2565:5;2562:14;2555:120;;;2626:39;2663:1;2656:5;2626:39;:::i;:::-;2599:1;2592:5;2588:13;2579:22;;2555:120;;;2495:186;;:::o;2687:543::-;2788:2;2783:3;2780:11;2777:446;;;2822:38;2854:5;2822:38;:::i;:::-;2906:29;2924:10;2906:29;:::i;:::-;2896:8;2892:44;3089:2;3077:10;3074:18;3071:49;;;3110:8;3095:23;;3071:49;3133:80;3189:22;3207:3;3189:22;:::i;:::-;3179:8;3175:37;3162:11;3133:80;:::i;:::-;2792:431;;2777:446;2687:543;;;:::o;3236:117::-;3290:8;3340:5;3334:4;3330:16;3309:37;;3236:117;;;;:::o;3359:169::-;3403:6;3436:51;3484:1;3480:6;3472:5;3469:1;3465:13;3436:51;:::i;:::-;3432:56;3517:4;3511;3507:15;3497:25;;3410:118;3359:169;;;;:::o;3533:295::-;3609:4;3755:29;3780:3;3774:4;3755:29;:::i;:::-;3747:37;;3817:3;3814:1;3810:11;3804:4;3801:21;3793:29;;3533:295;;;;:::o;3833:1395::-;3950:37;3983:3;3950:37;:::i;:::-;4052:18;4044:6;4041:30;4038:56;;;4074:18;;:::i;:::-;4038:56;4118:38;4150:4;4144:11;4118:38;:::i;:::-;4203:67;4263:6;4255;4249:4;4203:67;:::i;:::-;4297:1;4321:4;4308:17;;4353:2;4345:6;4342:14;4370:1;4365:618;;;;5027:1;5044:6;5041:77;;;5093:9;5088:3;5084:19;5078:26;5069:35;;5041:77;5144:67;5204:6;5197:5;5144:67;:::i;:::-;5138:4;5131:81;5000:222;4335:887;;4365:618;4417:4;4413:9;4405:6;4401:22;4451:37;4483:4;4451:37;:::i;:::-;4510:1;4524:208;4538:7;4535:1;4532:14;4524:208;;;4617:9;4612:3;4608:19;4602:26;4594:6;4587:42;4668:1;4660:6;4656:14;4646:24;;4715:2;4704:9;4700:18;4687:31;;4561:4;4558:1;4554:12;4549:17;;4524:208;;;4760:6;4751:7;4748:19;4745:179;;;4818:9;4813:3;4809:19;4803:26;4861:48;4903:4;4895:6;4891:17;4880:9;4861:48;:::i;:::-;4853:6;4846:64;4768:156;4745:179;4970:1;4966;4958:6;4954:14;4950:22;4944:4;4937:36;4372:611;;;4335:887;;3925:1303;;;3833:1395;;:::o;5234:77::-;5271:7;5300:5;5289:16;;5234:77;;;:::o;5317:118::-;5404:24;5422:5;5404:24;:::i;:::-;5399:3;5392:37;5317:118;;:::o;5441:::-;5528:24;5546:5;5528:24;:::i;:::-;5523:3;5516:37;5441:118;;:::o;5565:126::-;5602:7;5642:42;5635:5;5631:54;5620:65;;5565:126;;;:::o;5697:96::-;5734:7;5763:24;5781:5;5763:24;:::i;:::-;5752:35;;5697:96;;;:::o;5799:118::-;5886:24;5904:5;5886:24;:::i;:::-;5881:3;5874:37;5799:118;;:::o;5923:664::-;6128:4;6166:3;6155:9;6151:19;6143:27;;6180:71;6248:1;6237:9;6233:17;6224:6;6180:71;:::i;:::-;6261:72;6329:2;6318:9;6314:18;6305:6;6261:72;:::i;:::-;6343;6411:2;6400:9;6396:18;6387:6;6343:72;:::i;:::-;6425;6493:2;6482:9;6478:18;6469:6;6425:72;:::i;:::-;6507:73;6575:3;6564:9;6560:19;6551:6;6507:73;:::i;:::-;5923:664;;;;;;;;:::o;6593:169::-;6677:11;6711:6;6706:3;6699:19;6751:4;6746:3;6742:14;6727:29;;6593:169;;;;:::o;6768:246::-;6849:1;6859:113;6873:6;6870:1;6867:13;6859:113;;;6958:1;6953:3;6949:11;6943:18;6939:1;6934:3;6930:11;6923:39;6895:2;6892:1;6888:10;6883:15;;6859:113;;;7006:1;6997:6;6992:3;6988:16;6981:27;6830:184;6768:246;;;:::o;7020:102::-;7061:6;7112:2;7108:7;7103:2;7096:5;7092:14;7088:28;7078:38;;7020:102;;;:::o;7128:377::-;7216:3;7244:39;7277:5;7244:39;:::i;:::-;7299:71;7363:6;7358:3;7299:71;:::i;:::-;7292:78;;7379:65;7437:6;7432:3;7425:4;7418:5;7414:16;7379:65;:::i;:::-;7469:29;7491:6;7469:29;:::i;:::-;7464:3;7460:39;7453:46;;7220:285;7128:377;;;;:::o;7511:313::-;7624:4;7662:2;7651:9;7647:18;7639:26;;7711:9;7705:4;7701:20;7697:1;7686:9;7682:17;7675:47;7739:78;7812:4;7803:6;7739:78;:::i;:::-;7731:86;;7511:313;;;;:::o;7830:98::-;7881:6;7915:5;7909:12;7899:22;;7830:98;;;:::o;7934:116::-;7985:4;8008:3;8000:11;;8038:4;8033:3;8029:14;8021:22;;7934:116;;;:::o;8056:154::-;8099:11;8135:29;8159:3;8153:10;8135:29;:::i;:::-;8198:5;8174:29;;8111:99;8056:154;;;:::o;8216:594::-;8300:5;8331:38;8363:5;8331:38;:::i;:::-;8394:5;8421:40;8455:5;8421:40;:::i;:::-;8409:52;;8480:35;8506:8;8480:35;:::i;:::-;8471:44;;8539:2;8531:6;8528:14;8525:278;;;8610:169;8695:66;8665:6;8661:2;8657:15;8654:1;8650:23;8610:169;:::i;:::-;8587:5;8566:227;8557:236;;8525:278;8306:504;;8216:594;;;:::o;8816:235::-;8956:34;8952:1;8944:6;8940:14;8933:58;9025:18;9020:2;9012:6;9008:15;9001:43;8816:235;:::o;9057:366::-;9199:3;9220:67;9284:2;9279:3;9220:67;:::i;:::-;9213:74;;9296:93;9385:3;9296:93;:::i;:::-;9414:2;9409:3;9405:12;9398:19;;9057:366;;;:::o;9429:419::-;9595:4;9633:2;9622:9;9618:18;9610:26;;9682:9;9676:4;9672:20;9668:1;9657:9;9653:17;9646:47;9710:131;9836:4;9710:131;:::i;:::-;9702:139;;9429:419;;;:::o;9854:181::-;9994:33;9990:1;9982:6;9978:14;9971:57;9854:181;:::o;10041:366::-;10183:3;10204:67;10268:2;10263:3;10204:67;:::i;:::-;10197:74;;10280:93;10369:3;10280:93;:::i;:::-;10398:2;10393:3;10389:12;10382:19;;10041:366;;;:::o;10413:419::-;10579:4;10617:2;10606:9;10602:18;10594:26;;10666:9;10660:4;10656:20;10652:1;10641:9;10637:17;10630:47;10694:131;10820:4;10694:131;:::i;:::-;10686:139;;10413:419;;;:::o;10838:180::-;10886:77;10883:1;10876:88;10983:4;10980:1;10973:15;11007:4;11004:1;10997:15;11024:191;11064:3;11083:20;11101:1;11083:20;:::i;:::-;11078:25;;11117:20;11135:1;11117:20;:::i;:::-;11112:25;;11160:1;11157;11153:9;11146:16;;11181:3;11178:1;11175:10;11172:36;;;11188:18;;:::i;:::-;11172:36;11024:191;;;;:::o;11221:222::-;11314:4;11352:2;11341:9;11337:18;11329:26;;11365:71;11433:1;11422:9;11418:17;11409:6;11365:71;:::i;:::-;11221:222;;;;:::o;11449:226::-;11589:34;11585:1;11577:6;11573:14;11566:58;11658:9;11653:2;11645:6;11641:15;11634:34;11449:226;:::o;11681:366::-;11823:3;11844:67;11908:2;11903:3;11844:67;:::i;:::-;11837:74;;11920:93;12009:3;11920:93;:::i;:::-;12038:2;12033:3;12029:12;12022:19;;11681:366;;;:::o;12053:419::-;12219:4;12257:2;12246:9;12242:18;12234:26;;12306:9;12300:4;12296:20;12292:1;12281:9;12277:17;12270:47;12334:131;12460:4;12334:131;:::i;:::-;12326:139;;12053:419;;;:::o;12478:225::-;12618:34;12614:1;12606:6;12602:14;12595:58;12687:8;12682:2;12674:6;12670:15;12663:33;12478:225;:::o;12709:366::-;12851:3;12872:67;12936:2;12931:3;12872:67;:::i;:::-;12865:74;;12948:93;13037:3;12948:93;:::i;:::-;13066:2;13061:3;13057:12;13050:19;;12709:366;;;:::o;13081:419::-;13247:4;13285:2;13274:9;13270:18;13262:26;;13334:9;13328:4;13324:20;13320:1;13309:9;13305:17;13298:47;13362:131;13488:4;13362:131;:::i;:::-;13354:139;;13081:419;;;:::o;13506:225::-;13646:34;13642:1;13634:6;13630:14;13623:58;13715:8;13710:2;13702:6;13698:15;13691:33;13506:225;:::o;13737:366::-;13879:3;13900:67;13964:2;13959:3;13900:67;:::i;:::-;13893:74;;13976:93;14065:3;13976:93;:::i;:::-;14094:2;14089:3;14085:12;14078:19;;13737:366;;;:::o;14109:419::-;14275:4;14313:2;14302:9;14298:18;14290:26;;14362:9;14356:4;14352:20;14348:1;14337:9;14333:17;14326:47;14390:131;14516:4;14390:131;:::i;:::-;14382:139;;14109:419;;;:::o;14534:332::-;14655:4;14693:2;14682:9;14678:18;14670:26;;14706:71;14774:1;14763:9;14759:17;14750:6;14706:71;:::i;:::-;14787:72;14855:2;14844:9;14840:18;14831:6;14787:72;:::i;:::-;14534:332;;;;;:::o;14872:194::-;14912:4;14932:20;14950:1;14932:20;:::i;:::-;14927:25;;14966:20;14984:1;14966:20;:::i;:::-;14961:25;;15010:1;15007;15003:9;14995:17;;15034:1;15028:4;15025:11;15022:37;;;15039:18;;:::i;:::-;15022:37;14872:194;;;;:::o;396:853:22:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@CLOCK_MODE_1145":{"entryPoint":2007,"id":1145,"parameterSlots":0,"returnSlots":1},"@DOMAIN_SEPARATOR_1046":{"entryPoint":1774,"id":1046,"parameterSlots":0,"returnSlots":1},"@_add_1780":{"entryPoint":4631,"id":1780,"parameterSlots":2,"returnSlots":1},"@_afterTokenTransfer_1555":{"entryPoint":9319,"id":1555,"parameterSlots":3,"returnSlots":0},"@_afterTokenTransfer_5663":{"entryPoint":7553,"id":5663,"parameterSlots":3,"returnSlots":0},"@_afterTokenTransfer_825":{"entryPoint":10423,"id":825,"parameterSlots":3,"returnSlots":0},"@_approve_760":{"entryPoint":4683,"id":760,"parameterSlots":3,"returnSlots":0},"@_beforeTokenTransfer_814":{"entryPoint":7548,"id":814,"parameterSlots":3,"returnSlots":0},"@_buildDomainSeparator_3031":{"entryPoint":7569,"id":3031,"parameterSlots":0,"returnSlots":1},"@_checkOwner_54":{"entryPoint":6786,"id":54,"parameterSlots":0,"returnSlots":0},"@_checkpointsLookup_1383":{"entryPoint":6093,"id":1383,"parameterSlots":2,"returnSlots":1},"@_delegate_1594":{"entryPoint":6421,"id":1594,"parameterSlots":2,"returnSlots":0},"@_domainSeparatorV4_3010":{"entryPoint":5910,"id":3010,"parameterSlots":0,"returnSlots":1},"@_hashTypedDataV4_3047":{"entryPoint":7385,"id":3047,"parameterSlots":1,"returnSlots":1},"@_moveVotingPower_1665":{"entryPoint":8027,"id":1665,"parameterSlots":3,"returnSlots":0},"@_msgSender_1886":{"entryPoint":4675,"id":1886,"parameterSlots":0,"returnSlots":1},"@_spendAllowance_803":{"entryPoint":5140,"id":803,"parameterSlots":3,"returnSlots":0},"@_subtract_1794":{"entryPoint":4653,"id":1794,"parameterSlots":2,"returnSlots":1},"@_throwError_2579":{"entryPoint":8939,"id":2579,"parameterSlots":1,"returnSlots":0},"@_transferOwnership_111":{"entryPoint":6912,"id":111,"parameterSlots":1,"returnSlots":0},"@_transfer_586":{"entryPoint":5280,"id":586,"parameterSlots":3,"returnSlots":0},"@_unsafeAccess_1809":{"entryPoint":7968,"id":1809,"parameterSlots":2,"returnSlots":1},"@_useNonce_1075":{"entryPoint":7454,"id":1075,"parameterSlots":1,"returnSlots":1},"@_writeCheckpoint_1766":{"entryPoint":9612,"id":1766,"parameterSlots":3,"returnSlots":2},"@allowance_381":{"entryPoint":4093,"id":381,"parameterSlots":2,"returnSlots":1},"@approve_406":{"entryPoint":1673,"id":406,"parameterSlots":2,"returnSlots":1},"@average_3161":{"entryPoint":7989,"id":3161,"parameterSlots":2,"returnSlots":1},"@balanceOf_338":{"entryPoint":2358,"id":338,"parameterSlots":1,"returnSlots":1},"@byteLength_2087":{"entryPoint":10343,"id":2087,"parameterSlots":1,"returnSlots":1},"@checkpoints_1163":{"entryPoint":4228,"id":1163,"parameterSlots":2,"returnSlots":1},"@clock_1126":{"entryPoint":2931,"id":1126,"parameterSlots":0,"returnSlots":1},"@current_1914":{"entryPoint":7110,"id":1914,"parameterSlots":1,"returnSlots":1},"@decimals_314":{"entryPoint":1765,"id":314,"parameterSlots":0,"returnSlots":1},"@decreaseAllowance_509":{"entryPoint":3357,"id":509,"parameterSlots":2,"returnSlots":1},"@delegateBySig_1457":{"entryPoint":3511,"id":1457,"parameterSlots":6,"returnSlots":0},"@delegate_1397":{"entryPoint":2254,"id":1397,"parameterSlots":1,"returnSlots":0},"@delegates_1194":{"entryPoint":2149,"id":1194,"parameterSlots":1,"returnSlots":1},"@eip712Domain_3094":{"entryPoint":2530,"id":3094,"parameterSlots":0,"returnSlots":7},"@getPastTotalSupply_1276":{"entryPoint":2830,"id":1276,"parameterSlots":1,"returnSlots":1},"@getPastVotes_1253":{"entryPoint":1844,"id":1253,"parameterSlots":2,"returnSlots":1},"@getVotes_1226":{"entryPoint":3093,"id":1226,"parameterSlots":1,"returnSlots":1},"@increaseAllowance_468":{"entryPoint":1789,"id":468,"parameterSlots":2,"returnSlots":1},"@increment_1928":{"entryPoint":9297,"id":1928,"parameterSlots":1,"returnSlots":0},"@log2_3633":{"entryPoint":9362,"id":3633,"parameterSlots":1,"returnSlots":1},"@min_3138":{"entryPoint":9587,"id":3138,"parameterSlots":2,"returnSlots":1},"@name_294":{"entryPoint":1527,"id":294,"parameterSlots":0,"returnSlots":1},"@nonces_1035":{"entryPoint":2450,"id":1035,"parameterSlots":1,"returnSlots":1},"@numCheckpoints_1180":{"entryPoint":2274,"id":1180,"parameterSlots":1,"returnSlots":1},"@owner_40":{"entryPoint":2788,"id":40,"parameterSlots":0,"returnSlots":1},"@permit_1019":{"entryPoint":3771,"id":1019,"parameterSlots":7,"returnSlots":0},"@recover_2826":{"entryPoint":7411,"id":2826,"parameterSlots":4,"returnSlots":1},"@renounceOwnership_68":{"entryPoint":2430,"id":68,"parameterSlots":0,"returnSlots":0},"@sqrt_3465":{"entryPoint":7719,"id":3465,"parameterSlots":1,"returnSlots":1},"@symbol_304":{"entryPoint":2947,"id":304,"parameterSlots":0,"returnSlots":1},"@toStringWithFallback_2154":{"entryPoint":7124,"id":2154,"parameterSlots":2,"returnSlots":1},"@toString_2055":{"entryPoint":8532,"id":2055,"parameterSlots":1,"returnSlots":1},"@toTypedDataHash_2870":{"entryPoint":8648,"id":2870,"parameterSlots":2,"returnSlots":1},"@toUint224_4064":{"entryPoint":10428,"id":4064,"parameterSlots":1,"returnSlots":1},"@toUint32_4664":{"entryPoint":6703,"id":4664,"parameterSlots":1,"returnSlots":1},"@toUint48_4614":{"entryPoint":7300,"id":4614,"parameterSlots":1,"returnSlots":1},"@totalSupply_324":{"entryPoint":1708,"id":324,"parameterSlots":0,"returnSlots":1},"@transferFrom_439":{"entryPoint":1718,"id":439,"parameterSlots":3,"returnSlots":1},"@transferOwnership_91":{"entryPoint":4500,"id":91,"parameterSlots":1,"returnSlots":0},"@transfer_363":{"entryPoint":3476,"id":363,"parameterSlots":2,"returnSlots":1},"@tryRecover_2793":{"entryPoint":8713,"id":2793,"parameterSlots":4,"returnSlots":2},"abi_decode_t_address":{"entryPoint":10853,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes32":{"entryPoint":11976,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":10907,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint32":{"entryPoint":12387,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint8":{"entryPoint":11932,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":11278,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":12300,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":11088,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32":{"entryPoint":12138,"id":null,"parameterSlots":2,"returnSlots":7},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":10928,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32":{"entryPoint":11997,"id":null,"parameterSlots":2,"returnSlots":6},"abi_decode_tuple_t_addresst_uint32":{"entryPoint":12408,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint256":{"entryPoint":11804,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encodeUpdatedPos_t_uint256_to_t_uint256":{"entryPoint":11541,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":11323,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack":{"entryPoint":11578,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":11004,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes1_to_t_bytes1_fromStack":{"entryPoint":11467,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32_fromStack":{"entryPoint":11236,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":10684,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be_to_t_string_memory_ptr_fromStack":{"entryPoint":15678,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack":{"entryPoint":14688,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_136d0f69bc85a5c125b5cc368e2880ebdb3c89d4d9828f6476431c386ea60257_to_t_string_memory_ptr_fromStack":{"entryPoint":13308,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77_to_t_string_memory_ptr_fromStack":{"entryPoint":15786,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_1a23b43d95073d55a7380117ca03cace60cd22fee15d5cb140d51e46236e6872_to_t_string_memory_ptr_fromStack":{"entryPoint":13485,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack":{"entryPoint":13944,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack":{"entryPoint":14288,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack":{"entryPoint":14396,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_3e89525a63fb9c966b61cf8f5305156de8420bc773a2b60828a2f32c3c5797bd_to_t_string_memory_ptr_fromStack":{"entryPoint":13593,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack":{"entryPoint":14834,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd_to_t_string_memory_ptr_fromStack":{"entryPoint":15932,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_599034f9324dd4e988c6cea5a00a30f53147fec1b01559682f18cd840028f495_to_t_string_memory_ptr_fromStack":{"entryPoint":15234,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_94ca1ab58dfda790a1782ffbb0c0a140ec51d4148dbeecc6c39e37b25ff4b124_to_t_string_memory_ptr_fromStack":{"entryPoint":13798,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack":{"entryPoint":15088,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79_to_t_string_memory_ptr_fromStack":{"entryPoint":16078,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_9fb4d8462c9084391e0cf06f1b2a0a5b1a23dc8fede26e3b7b37154948e87a72_to_t_string_memory_ptr_fromStack":{"entryPoint":12852,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack":{"entryPoint":14542,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19_to_t_string_memory_ptr_fromStack":{"entryPoint":14980,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack":{"entryPoint":14142,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_d8b645ec611d4ec3e2023618b4603d577ce189d5bc833b5325ebd41cfe74f8df_to_t_string_memory_ptr_fromStack":{"entryPoint":12960,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack":{"entryPoint":13200,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_struct$_Checkpoint_$1093_memory_ptr_to_t_struct$_Checkpoint_$1093_memory_ptr_fromStack":{"entryPoint":12542,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint224_to_t_uint224":{"entryPoint":12527,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256":{"entryPoint":11526,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":11046,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint32_to_t_uint32":{"entryPoint":12472,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint32_to_t_uint32_fromStack":{"entryPoint":11381,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint48_to_t_uint48_fromStack":{"entryPoint":11867,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint8_to_t_uint8_fromStack":{"entryPoint":11184,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":11338,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":11019,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__to_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":11672,"id":null,"parameterSlots":8,"returnSlots":1},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed":{"entryPoint":11251,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":13660,"id":null,"parameterSlots":7,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_address_t_uint256_t_uint256__to_t_bytes32_t_address_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":13375,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed":{"entryPoint":15301,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed":{"entryPoint":15521,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":10741,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":15713,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":14723,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_136d0f69bc85a5c125b5cc368e2880ebdb3c89d4d9828f6476431c386ea60257__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":13343,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":15821,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_1a23b43d95073d55a7380117ca03cace60cd22fee15d5cb140d51e46236e6872__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":13520,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":13979,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":14323,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":14431,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_3e89525a63fb9c966b61cf8f5305156de8420bc773a2b60828a2f32c3c5797bd__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":13628,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":14869,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":15967,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_599034f9324dd4e988c6cea5a00a30f53147fec1b01559682f18cd840028f495__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":15269,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_94ca1ab58dfda790a1782ffbb0c0a140ec51d4148dbeecc6c39e37b25ff4b124__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":13833,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":15123,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":16113,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9fb4d8462c9084391e0cf06f1b2a0a5b1a23dc8fede26e3b7b37154948e87a72__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":12887,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":14577,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":15015,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":14177,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_d8b645ec611d4ec3e2023618b4603d577ce189d5bc833b5325ebd41cfe74f8df__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":12995,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":13235,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_struct$_Checkpoint_$1093_memory_ptr__to_t_struct$_Checkpoint_$1093_memory_ptr__fromStack_reversed":{"entryPoint":12589,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":11061,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":15480,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed":{"entryPoint":11396,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint48__to_t_uint48__fromStack_reversed":{"entryPoint":11882,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":11199,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":11510,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":11482,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":10597,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":11565,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack":{"entryPoint":11493,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":10608,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":12759,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_t_uint256":{"entryPoint":15431,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":14011,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":10812,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":10992,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes1":{"entryPoint":11423,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":11226,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":10780,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint224":{"entryPoint":12487,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":10874,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint32":{"entryPoint":11365,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint48":{"entryPoint":11849,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint8":{"entryPoint":11171,"id":null,"parameterSlots":1,"returnSlots":1},"copy_memory_to_memory_with_cleanup":{"entryPoint":10625,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":12663,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":12712,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":15384,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x21":{"entryPoint":15590,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":12616,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":13074,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":13027,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":10775,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":10667,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be":{"entryPoint":15637,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f":{"entryPoint":14609,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_136d0f69bc85a5c125b5cc368e2880ebdb3c89d4d9828f6476431c386ea60257":{"entryPoint":13267,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77":{"entryPoint":15745,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_1a23b43d95073d55a7380117ca03cace60cd22fee15d5cb140d51e46236e6872":{"entryPoint":13444,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe":{"entryPoint":13865,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029":{"entryPoint":14209,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe":{"entryPoint":14355,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_3e89525a63fb9c966b61cf8f5305156de8420bc773a2b60828a2f32c3c5797bd":{"entryPoint":13552,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6":{"entryPoint":14755,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd":{"entryPoint":15853,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_599034f9324dd4e988c6cea5a00a30f53147fec1b01559682f18cd840028f495":{"entryPoint":15155,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_94ca1ab58dfda790a1782ffbb0c0a140ec51d4148dbeecc6c39e37b25ff4b124":{"entryPoint":13757,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe":{"entryPoint":15047,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79":{"entryPoint":15999,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_9fb4d8462c9084391e0cf06f1b2a0a5b1a23dc8fede26e3b7b37154948e87a72":{"entryPoint":12811,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea":{"entryPoint":14463,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19":{"entryPoint":14901,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208":{"entryPoint":14063,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_d8b645ec611d4ec3e2023618b4603d577ce189d5bc833b5325ebd41cfe74f8df":{"entryPoint":12919,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8":{"entryPoint":13121,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":10830,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes32":{"entryPoint":11953,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":10884,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint32":{"entryPoint":12364,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint8":{"entryPoint":11909,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:41699:23","statements":[{"body":{"nodeType":"YulBlock","src":"66:40:23","statements":[{"nodeType":"YulAssignment","src":"77:22:23","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"93:5:23"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"87:5:23"},"nodeType":"YulFunctionCall","src":"87:12:23"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"77:6:23"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"49:5:23","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"59:6:23","type":""}],"src":"7:99:23"},{"body":{"nodeType":"YulBlock","src":"208:73:23","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"225:3:23"},{"name":"length","nodeType":"YulIdentifier","src":"230:6:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"218:6:23"},"nodeType":"YulFunctionCall","src":"218:19:23"},"nodeType":"YulExpressionStatement","src":"218:19:23"},{"nodeType":"YulAssignment","src":"246:29:23","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"265:3:23"},{"kind":"number","nodeType":"YulLiteral","src":"270:4:23","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"261:3:23"},"nodeType":"YulFunctionCall","src":"261:14:23"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"246:11:23"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"180:3:23","type":""},{"name":"length","nodeType":"YulTypedName","src":"185:6:23","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"196:11:23","type":""}],"src":"112:169:23"},{"body":{"nodeType":"YulBlock","src":"349:184:23","statements":[{"nodeType":"YulVariableDeclaration","src":"359:10:23","value":{"kind":"number","nodeType":"YulLiteral","src":"368:1:23","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"363:1:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"428:63:23","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"453:3:23"},{"name":"i","nodeType":"YulIdentifier","src":"458:1:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"449:3:23"},"nodeType":"YulFunctionCall","src":"449:11:23"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"472:3:23"},{"name":"i","nodeType":"YulIdentifier","src":"477:1:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"468:3:23"},"nodeType":"YulFunctionCall","src":"468:11:23"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"462:5:23"},"nodeType":"YulFunctionCall","src":"462:18:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"442:6:23"},"nodeType":"YulFunctionCall","src":"442:39:23"},"nodeType":"YulExpressionStatement","src":"442:39:23"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"389:1:23"},{"name":"length","nodeType":"YulIdentifier","src":"392:6:23"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"386:2:23"},"nodeType":"YulFunctionCall","src":"386:13:23"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"400:19:23","statements":[{"nodeType":"YulAssignment","src":"402:15:23","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"411:1:23"},{"kind":"number","nodeType":"YulLiteral","src":"414:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"407:3:23"},"nodeType":"YulFunctionCall","src":"407:10:23"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"402:1:23"}]}]},"pre":{"nodeType":"YulBlock","src":"382:3:23","statements":[]},"src":"378:113:23"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"511:3:23"},{"name":"length","nodeType":"YulIdentifier","src":"516:6:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"507:3:23"},"nodeType":"YulFunctionCall","src":"507:16:23"},{"kind":"number","nodeType":"YulLiteral","src":"525:1:23","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"500:6:23"},"nodeType":"YulFunctionCall","src":"500:27:23"},"nodeType":"YulExpressionStatement","src":"500:27:23"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"331:3:23","type":""},{"name":"dst","nodeType":"YulTypedName","src":"336:3:23","type":""},{"name":"length","nodeType":"YulTypedName","src":"341:6:23","type":""}],"src":"287:246:23"},{"body":{"nodeType":"YulBlock","src":"587:54:23","statements":[{"nodeType":"YulAssignment","src":"597:38:23","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"615:5:23"},{"kind":"number","nodeType":"YulLiteral","src":"622:2:23","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"611:3:23"},"nodeType":"YulFunctionCall","src":"611:14:23"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"631:2:23","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"627:3:23"},"nodeType":"YulFunctionCall","src":"627:7:23"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"607:3:23"},"nodeType":"YulFunctionCall","src":"607:28:23"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"597:6:23"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"570:5:23","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"580:6:23","type":""}],"src":"539:102:23"},{"body":{"nodeType":"YulBlock","src":"739:285:23","statements":[{"nodeType":"YulVariableDeclaration","src":"749:53:23","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"796:5:23"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"763:32:23"},"nodeType":"YulFunctionCall","src":"763:39:23"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"753:6:23","type":""}]},{"nodeType":"YulAssignment","src":"811:78:23","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"877:3:23"},{"name":"length","nodeType":"YulIdentifier","src":"882:6:23"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"818:58:23"},"nodeType":"YulFunctionCall","src":"818:71:23"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"811:3:23"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"937:5:23"},{"kind":"number","nodeType":"YulLiteral","src":"944:4:23","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"933:3:23"},"nodeType":"YulFunctionCall","src":"933:16:23"},{"name":"pos","nodeType":"YulIdentifier","src":"951:3:23"},{"name":"length","nodeType":"YulIdentifier","src":"956:6:23"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"898:34:23"},"nodeType":"YulFunctionCall","src":"898:65:23"},"nodeType":"YulExpressionStatement","src":"898:65:23"},{"nodeType":"YulAssignment","src":"972:46:23","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"983:3:23"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1010:6:23"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"988:21:23"},"nodeType":"YulFunctionCall","src":"988:29:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"979:3:23"},"nodeType":"YulFunctionCall","src":"979:39:23"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"972:3:23"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"720:5:23","type":""},{"name":"pos","nodeType":"YulTypedName","src":"727:3:23","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"735:3:23","type":""}],"src":"647:377:23"},{"body":{"nodeType":"YulBlock","src":"1148:195:23","statements":[{"nodeType":"YulAssignment","src":"1158:26:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1170:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"1181:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1166:3:23"},"nodeType":"YulFunctionCall","src":"1166:18:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1158:4:23"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1205:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"1216:1:23","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1201:3:23"},"nodeType":"YulFunctionCall","src":"1201:17:23"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"1224:4:23"},{"name":"headStart","nodeType":"YulIdentifier","src":"1230:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1220:3:23"},"nodeType":"YulFunctionCall","src":"1220:20:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1194:6:23"},"nodeType":"YulFunctionCall","src":"1194:47:23"},"nodeType":"YulExpressionStatement","src":"1194:47:23"},{"nodeType":"YulAssignment","src":"1250:86:23","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1322:6:23"},{"name":"tail","nodeType":"YulIdentifier","src":"1331:4:23"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"1258:63:23"},"nodeType":"YulFunctionCall","src":"1258:78:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1250:4:23"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1120:9:23","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1132:6:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1143:4:23","type":""}],"src":"1030:313:23"},{"body":{"nodeType":"YulBlock","src":"1389:35:23","statements":[{"nodeType":"YulAssignment","src":"1399:19:23","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1415:2:23","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1409:5:23"},"nodeType":"YulFunctionCall","src":"1409:9:23"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1399:6:23"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1382:6:23","type":""}],"src":"1349:75:23"},{"body":{"nodeType":"YulBlock","src":"1519:28:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1536:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1539:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1529:6:23"},"nodeType":"YulFunctionCall","src":"1529:12:23"},"nodeType":"YulExpressionStatement","src":"1529:12:23"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"1430:117:23"},{"body":{"nodeType":"YulBlock","src":"1642:28:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1659:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1662:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1652:6:23"},"nodeType":"YulFunctionCall","src":"1652:12:23"},"nodeType":"YulExpressionStatement","src":"1652:12:23"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"1553:117:23"},{"body":{"nodeType":"YulBlock","src":"1721:81:23","statements":[{"nodeType":"YulAssignment","src":"1731:65:23","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1746:5:23"},{"kind":"number","nodeType":"YulLiteral","src":"1753:42:23","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1742:3:23"},"nodeType":"YulFunctionCall","src":"1742:54:23"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1731:7:23"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1703:5:23","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1713:7:23","type":""}],"src":"1676:126:23"},{"body":{"nodeType":"YulBlock","src":"1853:51:23","statements":[{"nodeType":"YulAssignment","src":"1863:35:23","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1892:5:23"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"1874:17:23"},"nodeType":"YulFunctionCall","src":"1874:24:23"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1863:7:23"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1835:5:23","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1845:7:23","type":""}],"src":"1808:96:23"},{"body":{"nodeType":"YulBlock","src":"1953:79:23","statements":[{"body":{"nodeType":"YulBlock","src":"2010:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2019:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2022:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2012:6:23"},"nodeType":"YulFunctionCall","src":"2012:12:23"},"nodeType":"YulExpressionStatement","src":"2012:12:23"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1976:5:23"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2001:5:23"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"1983:17:23"},"nodeType":"YulFunctionCall","src":"1983:24:23"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1973:2:23"},"nodeType":"YulFunctionCall","src":"1973:35:23"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1966:6:23"},"nodeType":"YulFunctionCall","src":"1966:43:23"},"nodeType":"YulIf","src":"1963:63:23"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1946:5:23","type":""}],"src":"1910:122:23"},{"body":{"nodeType":"YulBlock","src":"2090:87:23","statements":[{"nodeType":"YulAssignment","src":"2100:29:23","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2122:6:23"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2109:12:23"},"nodeType":"YulFunctionCall","src":"2109:20:23"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2100:5:23"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2165:5:23"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"2138:26:23"},"nodeType":"YulFunctionCall","src":"2138:33:23"},"nodeType":"YulExpressionStatement","src":"2138:33:23"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2068:6:23","type":""},{"name":"end","nodeType":"YulTypedName","src":"2076:3:23","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2084:5:23","type":""}],"src":"2038:139:23"},{"body":{"nodeType":"YulBlock","src":"2228:32:23","statements":[{"nodeType":"YulAssignment","src":"2238:16:23","value":{"name":"value","nodeType":"YulIdentifier","src":"2249:5:23"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2238:7:23"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2210:5:23","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2220:7:23","type":""}],"src":"2183:77:23"},{"body":{"nodeType":"YulBlock","src":"2309:79:23","statements":[{"body":{"nodeType":"YulBlock","src":"2366:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2375:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2378:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2368:6:23"},"nodeType":"YulFunctionCall","src":"2368:12:23"},"nodeType":"YulExpressionStatement","src":"2368:12:23"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2332:5:23"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2357:5:23"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"2339:17:23"},"nodeType":"YulFunctionCall","src":"2339:24:23"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2329:2:23"},"nodeType":"YulFunctionCall","src":"2329:35:23"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2322:6:23"},"nodeType":"YulFunctionCall","src":"2322:43:23"},"nodeType":"YulIf","src":"2319:63:23"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2302:5:23","type":""}],"src":"2266:122:23"},{"body":{"nodeType":"YulBlock","src":"2446:87:23","statements":[{"nodeType":"YulAssignment","src":"2456:29:23","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2478:6:23"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2465:12:23"},"nodeType":"YulFunctionCall","src":"2465:20:23"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2456:5:23"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2521:5:23"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"2494:26:23"},"nodeType":"YulFunctionCall","src":"2494:33:23"},"nodeType":"YulExpressionStatement","src":"2494:33:23"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2424:6:23","type":""},{"name":"end","nodeType":"YulTypedName","src":"2432:3:23","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2440:5:23","type":""}],"src":"2394:139:23"},{"body":{"nodeType":"YulBlock","src":"2622:391:23","statements":[{"body":{"nodeType":"YulBlock","src":"2668:83:23","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2670:77:23"},"nodeType":"YulFunctionCall","src":"2670:79:23"},"nodeType":"YulExpressionStatement","src":"2670:79:23"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2643:7:23"},{"name":"headStart","nodeType":"YulIdentifier","src":"2652:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2639:3:23"},"nodeType":"YulFunctionCall","src":"2639:23:23"},{"kind":"number","nodeType":"YulLiteral","src":"2664:2:23","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2635:3:23"},"nodeType":"YulFunctionCall","src":"2635:32:23"},"nodeType":"YulIf","src":"2632:119:23"},{"nodeType":"YulBlock","src":"2761:117:23","statements":[{"nodeType":"YulVariableDeclaration","src":"2776:15:23","value":{"kind":"number","nodeType":"YulLiteral","src":"2790:1:23","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2780:6:23","type":""}]},{"nodeType":"YulAssignment","src":"2805:63:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2840:9:23"},{"name":"offset","nodeType":"YulIdentifier","src":"2851:6:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2836:3:23"},"nodeType":"YulFunctionCall","src":"2836:22:23"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2860:7:23"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"2815:20:23"},"nodeType":"YulFunctionCall","src":"2815:53:23"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2805:6:23"}]}]},{"nodeType":"YulBlock","src":"2888:118:23","statements":[{"nodeType":"YulVariableDeclaration","src":"2903:16:23","value":{"kind":"number","nodeType":"YulLiteral","src":"2917:2:23","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2907:6:23","type":""}]},{"nodeType":"YulAssignment","src":"2933:63:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2968:9:23"},{"name":"offset","nodeType":"YulIdentifier","src":"2979:6:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2964:3:23"},"nodeType":"YulFunctionCall","src":"2964:22:23"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2988:7:23"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"2943:20:23"},"nodeType":"YulFunctionCall","src":"2943:53:23"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2933:6:23"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2584:9:23","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2595:7:23","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2607:6:23","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2615:6:23","type":""}],"src":"2539:474:23"},{"body":{"nodeType":"YulBlock","src":"3061:48:23","statements":[{"nodeType":"YulAssignment","src":"3071:32:23","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3096:5:23"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3089:6:23"},"nodeType":"YulFunctionCall","src":"3089:13:23"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3082:6:23"},"nodeType":"YulFunctionCall","src":"3082:21:23"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3071:7:23"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3043:5:23","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3053:7:23","type":""}],"src":"3019:90:23"},{"body":{"nodeType":"YulBlock","src":"3174:50:23","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3191:3:23"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3211:5:23"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"3196:14:23"},"nodeType":"YulFunctionCall","src":"3196:21:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3184:6:23"},"nodeType":"YulFunctionCall","src":"3184:34:23"},"nodeType":"YulExpressionStatement","src":"3184:34:23"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3162:5:23","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3169:3:23","type":""}],"src":"3115:109:23"},{"body":{"nodeType":"YulBlock","src":"3322:118:23","statements":[{"nodeType":"YulAssignment","src":"3332:26:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3344:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"3355:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3340:3:23"},"nodeType":"YulFunctionCall","src":"3340:18:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3332:4:23"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3406:6:23"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3419:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"3430:1:23","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3415:3:23"},"nodeType":"YulFunctionCall","src":"3415:17:23"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"3368:37:23"},"nodeType":"YulFunctionCall","src":"3368:65:23"},"nodeType":"YulExpressionStatement","src":"3368:65:23"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3294:9:23","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3306:6:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3317:4:23","type":""}],"src":"3230:210:23"},{"body":{"nodeType":"YulBlock","src":"3511:53:23","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3528:3:23"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3551:5:23"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"3533:17:23"},"nodeType":"YulFunctionCall","src":"3533:24:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3521:6:23"},"nodeType":"YulFunctionCall","src":"3521:37:23"},"nodeType":"YulExpressionStatement","src":"3521:37:23"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3499:5:23","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3506:3:23","type":""}],"src":"3446:118:23"},{"body":{"nodeType":"YulBlock","src":"3668:124:23","statements":[{"nodeType":"YulAssignment","src":"3678:26:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3690:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"3701:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3686:3:23"},"nodeType":"YulFunctionCall","src":"3686:18:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3678:4:23"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3758:6:23"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3771:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"3782:1:23","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3767:3:23"},"nodeType":"YulFunctionCall","src":"3767:17:23"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"3714:43:23"},"nodeType":"YulFunctionCall","src":"3714:71:23"},"nodeType":"YulExpressionStatement","src":"3714:71:23"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3640:9:23","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3652:6:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3663:4:23","type":""}],"src":"3570:222:23"},{"body":{"nodeType":"YulBlock","src":"3898:519:23","statements":[{"body":{"nodeType":"YulBlock","src":"3944:83:23","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3946:77:23"},"nodeType":"YulFunctionCall","src":"3946:79:23"},"nodeType":"YulExpressionStatement","src":"3946:79:23"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3919:7:23"},{"name":"headStart","nodeType":"YulIdentifier","src":"3928:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3915:3:23"},"nodeType":"YulFunctionCall","src":"3915:23:23"},{"kind":"number","nodeType":"YulLiteral","src":"3940:2:23","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3911:3:23"},"nodeType":"YulFunctionCall","src":"3911:32:23"},"nodeType":"YulIf","src":"3908:119:23"},{"nodeType":"YulBlock","src":"4037:117:23","statements":[{"nodeType":"YulVariableDeclaration","src":"4052:15:23","value":{"kind":"number","nodeType":"YulLiteral","src":"4066:1:23","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4056:6:23","type":""}]},{"nodeType":"YulAssignment","src":"4081:63:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4116:9:23"},{"name":"offset","nodeType":"YulIdentifier","src":"4127:6:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4112:3:23"},"nodeType":"YulFunctionCall","src":"4112:22:23"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4136:7:23"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4091:20:23"},"nodeType":"YulFunctionCall","src":"4091:53:23"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4081:6:23"}]}]},{"nodeType":"YulBlock","src":"4164:118:23","statements":[{"nodeType":"YulVariableDeclaration","src":"4179:16:23","value":{"kind":"number","nodeType":"YulLiteral","src":"4193:2:23","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4183:6:23","type":""}]},{"nodeType":"YulAssignment","src":"4209:63:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4244:9:23"},{"name":"offset","nodeType":"YulIdentifier","src":"4255:6:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4240:3:23"},"nodeType":"YulFunctionCall","src":"4240:22:23"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4264:7:23"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4219:20:23"},"nodeType":"YulFunctionCall","src":"4219:53:23"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4209:6:23"}]}]},{"nodeType":"YulBlock","src":"4292:118:23","statements":[{"nodeType":"YulVariableDeclaration","src":"4307:16:23","value":{"kind":"number","nodeType":"YulLiteral","src":"4321:2:23","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4311:6:23","type":""}]},{"nodeType":"YulAssignment","src":"4337:63:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4372:9:23"},{"name":"offset","nodeType":"YulIdentifier","src":"4383:6:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4368:3:23"},"nodeType":"YulFunctionCall","src":"4368:22:23"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4392:7:23"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"4347:20:23"},"nodeType":"YulFunctionCall","src":"4347:53:23"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"4337:6:23"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3852:9:23","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3863:7:23","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3875:6:23","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3883:6:23","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3891:6:23","type":""}],"src":"3798:619:23"},{"body":{"nodeType":"YulBlock","src":"4466:43:23","statements":[{"nodeType":"YulAssignment","src":"4476:27:23","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4491:5:23"},{"kind":"number","nodeType":"YulLiteral","src":"4498:4:23","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4487:3:23"},"nodeType":"YulFunctionCall","src":"4487:16:23"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"4476:7:23"}]}]},"name":"cleanup_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4448:5:23","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"4458:7:23","type":""}],"src":"4423:86:23"},{"body":{"nodeType":"YulBlock","src":"4576:51:23","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4593:3:23"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4614:5:23"}],"functionName":{"name":"cleanup_t_uint8","nodeType":"YulIdentifier","src":"4598:15:23"},"nodeType":"YulFunctionCall","src":"4598:22:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4586:6:23"},"nodeType":"YulFunctionCall","src":"4586:35:23"},"nodeType":"YulExpressionStatement","src":"4586:35:23"}]},"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4564:5:23","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4571:3:23","type":""}],"src":"4515:112:23"},{"body":{"nodeType":"YulBlock","src":"4727:120:23","statements":[{"nodeType":"YulAssignment","src":"4737:26:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4749:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"4760:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4745:3:23"},"nodeType":"YulFunctionCall","src":"4745:18:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4737:4:23"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4813:6:23"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4826:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"4837:1:23","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4822:3:23"},"nodeType":"YulFunctionCall","src":"4822:17:23"}],"functionName":{"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulIdentifier","src":"4773:39:23"},"nodeType":"YulFunctionCall","src":"4773:67:23"},"nodeType":"YulExpressionStatement","src":"4773:67:23"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4699:9:23","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4711:6:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4722:4:23","type":""}],"src":"4633:214:23"},{"body":{"nodeType":"YulBlock","src":"4898:32:23","statements":[{"nodeType":"YulAssignment","src":"4908:16:23","value":{"name":"value","nodeType":"YulIdentifier","src":"4919:5:23"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"4908:7:23"}]}]},"name":"cleanup_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4880:5:23","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"4890:7:23","type":""}],"src":"4853:77:23"},{"body":{"nodeType":"YulBlock","src":"5001:53:23","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5018:3:23"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5041:5:23"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"5023:17:23"},"nodeType":"YulFunctionCall","src":"5023:24:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5011:6:23"},"nodeType":"YulFunctionCall","src":"5011:37:23"},"nodeType":"YulExpressionStatement","src":"5011:37:23"}]},"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4989:5:23","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4996:3:23","type":""}],"src":"4936:118:23"},{"body":{"nodeType":"YulBlock","src":"5158:124:23","statements":[{"nodeType":"YulAssignment","src":"5168:26:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5180:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"5191:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5176:3:23"},"nodeType":"YulFunctionCall","src":"5176:18:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5168:4:23"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5248:6:23"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5261:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"5272:1:23","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5257:3:23"},"nodeType":"YulFunctionCall","src":"5257:17:23"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"5204:43:23"},"nodeType":"YulFunctionCall","src":"5204:71:23"},"nodeType":"YulExpressionStatement","src":"5204:71:23"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5130:9:23","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5142:6:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5153:4:23","type":""}],"src":"5060:222:23"},{"body":{"nodeType":"YulBlock","src":"5354:263:23","statements":[{"body":{"nodeType":"YulBlock","src":"5400:83:23","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5402:77:23"},"nodeType":"YulFunctionCall","src":"5402:79:23"},"nodeType":"YulExpressionStatement","src":"5402:79:23"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5375:7:23"},{"name":"headStart","nodeType":"YulIdentifier","src":"5384:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5371:3:23"},"nodeType":"YulFunctionCall","src":"5371:23:23"},{"kind":"number","nodeType":"YulLiteral","src":"5396:2:23","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5367:3:23"},"nodeType":"YulFunctionCall","src":"5367:32:23"},"nodeType":"YulIf","src":"5364:119:23"},{"nodeType":"YulBlock","src":"5493:117:23","statements":[{"nodeType":"YulVariableDeclaration","src":"5508:15:23","value":{"kind":"number","nodeType":"YulLiteral","src":"5522:1:23","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5512:6:23","type":""}]},{"nodeType":"YulAssignment","src":"5537:63:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5572:9:23"},{"name":"offset","nodeType":"YulIdentifier","src":"5583:6:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5568:3:23"},"nodeType":"YulFunctionCall","src":"5568:22:23"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5592:7:23"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5547:20:23"},"nodeType":"YulFunctionCall","src":"5547:53:23"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5537:6:23"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5324:9:23","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5335:7:23","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5347:6:23","type":""}],"src":"5288:329:23"},{"body":{"nodeType":"YulBlock","src":"5688:53:23","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5705:3:23"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5728:5:23"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"5710:17:23"},"nodeType":"YulFunctionCall","src":"5710:24:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5698:6:23"},"nodeType":"YulFunctionCall","src":"5698:37:23"},"nodeType":"YulExpressionStatement","src":"5698:37:23"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5676:5:23","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5683:3:23","type":""}],"src":"5623:118:23"},{"body":{"nodeType":"YulBlock","src":"5845:124:23","statements":[{"nodeType":"YulAssignment","src":"5855:26:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5867:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"5878:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5863:3:23"},"nodeType":"YulFunctionCall","src":"5863:18:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5855:4:23"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5935:6:23"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5948:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"5959:1:23","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5944:3:23"},"nodeType":"YulFunctionCall","src":"5944:17:23"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"5891:43:23"},"nodeType":"YulFunctionCall","src":"5891:71:23"},"nodeType":"YulExpressionStatement","src":"5891:71:23"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5817:9:23","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5829:6:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5840:4:23","type":""}],"src":"5747:222:23"},{"body":{"nodeType":"YulBlock","src":"6019:49:23","statements":[{"nodeType":"YulAssignment","src":"6029:33:23","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6044:5:23"},{"kind":"number","nodeType":"YulLiteral","src":"6051:10:23","type":"","value":"0xffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6040:3:23"},"nodeType":"YulFunctionCall","src":"6040:22:23"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"6029:7:23"}]}]},"name":"cleanup_t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6001:5:23","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"6011:7:23","type":""}],"src":"5975:93:23"},{"body":{"nodeType":"YulBlock","src":"6137:52:23","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6154:3:23"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6176:5:23"}],"functionName":{"name":"cleanup_t_uint32","nodeType":"YulIdentifier","src":"6159:16:23"},"nodeType":"YulFunctionCall","src":"6159:23:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6147:6:23"},"nodeType":"YulFunctionCall","src":"6147:36:23"},"nodeType":"YulExpressionStatement","src":"6147:36:23"}]},"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6125:5:23","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6132:3:23","type":""}],"src":"6074:115:23"},{"body":{"nodeType":"YulBlock","src":"6291:122:23","statements":[{"nodeType":"YulAssignment","src":"6301:26:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6313:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"6324:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6309:3:23"},"nodeType":"YulFunctionCall","src":"6309:18:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6301:4:23"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6379:6:23"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6392:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"6403:1:23","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6388:3:23"},"nodeType":"YulFunctionCall","src":"6388:17:23"}],"functionName":{"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nodeType":"YulIdentifier","src":"6337:41:23"},"nodeType":"YulFunctionCall","src":"6337:69:23"},"nodeType":"YulExpressionStatement","src":"6337:69:23"}]},"name":"abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6263:9:23","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6275:6:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6286:4:23","type":""}],"src":"6195:218:23"},{"body":{"nodeType":"YulBlock","src":"6463:105:23","statements":[{"nodeType":"YulAssignment","src":"6473:89:23","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6488:5:23"},{"kind":"number","nodeType":"YulLiteral","src":"6495:66:23","type":"","value":"0xff00000000000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6484:3:23"},"nodeType":"YulFunctionCall","src":"6484:78:23"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"6473:7:23"}]}]},"name":"cleanup_t_bytes1","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6445:5:23","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"6455:7:23","type":""}],"src":"6419:149:23"},{"body":{"nodeType":"YulBlock","src":"6637:52:23","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6654:3:23"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6676:5:23"}],"functionName":{"name":"cleanup_t_bytes1","nodeType":"YulIdentifier","src":"6659:16:23"},"nodeType":"YulFunctionCall","src":"6659:23:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6647:6:23"},"nodeType":"YulFunctionCall","src":"6647:36:23"},"nodeType":"YulExpressionStatement","src":"6647:36:23"}]},"name":"abi_encode_t_bytes1_to_t_bytes1_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6625:5:23","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6632:3:23","type":""}],"src":"6574:115:23"},{"body":{"nodeType":"YulBlock","src":"6769:40:23","statements":[{"nodeType":"YulAssignment","src":"6780:22:23","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6796:5:23"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6790:5:23"},"nodeType":"YulFunctionCall","src":"6790:12:23"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"6780:6:23"}]}]},"name":"array_length_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6752:5:23","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"6762:6:23","type":""}],"src":"6695:114:23"},{"body":{"nodeType":"YulBlock","src":"6926:73:23","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6943:3:23"},{"name":"length","nodeType":"YulIdentifier","src":"6948:6:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6936:6:23"},"nodeType":"YulFunctionCall","src":"6936:19:23"},"nodeType":"YulExpressionStatement","src":"6936:19:23"},{"nodeType":"YulAssignment","src":"6964:29:23","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6983:3:23"},{"kind":"number","nodeType":"YulLiteral","src":"6988:4:23","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6979:3:23"},"nodeType":"YulFunctionCall","src":"6979:14:23"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"6964:11:23"}]}]},"name":"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"6898:3:23","type":""},{"name":"length","nodeType":"YulTypedName","src":"6903:6:23","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"6914:11:23","type":""}],"src":"6815:184:23"},{"body":{"nodeType":"YulBlock","src":"7077:60:23","statements":[{"nodeType":"YulAssignment","src":"7087:11:23","value":{"name":"ptr","nodeType":"YulIdentifier","src":"7095:3:23"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"7087:4:23"}]},{"nodeType":"YulAssignment","src":"7108:22:23","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"7120:3:23"},{"kind":"number","nodeType":"YulLiteral","src":"7125:4:23","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7116:3:23"},"nodeType":"YulFunctionCall","src":"7116:14:23"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"7108:4:23"}]}]},"name":"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"7064:3:23","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"7072:4:23","type":""}],"src":"7005:132:23"},{"body":{"nodeType":"YulBlock","src":"7198:53:23","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7215:3:23"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7238:5:23"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"7220:17:23"},"nodeType":"YulFunctionCall","src":"7220:24:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7208:6:23"},"nodeType":"YulFunctionCall","src":"7208:37:23"},"nodeType":"YulExpressionStatement","src":"7208:37:23"}]},"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7186:5:23","type":""},{"name":"pos","nodeType":"YulTypedName","src":"7193:3:23","type":""}],"src":"7143:108:23"},{"body":{"nodeType":"YulBlock","src":"7337:99:23","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7381:6:23"},{"name":"pos","nodeType":"YulIdentifier","src":"7389:3:23"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"7347:33:23"},"nodeType":"YulFunctionCall","src":"7347:46:23"},"nodeType":"YulExpressionStatement","src":"7347:46:23"},{"nodeType":"YulAssignment","src":"7402:28:23","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7420:3:23"},{"kind":"number","nodeType":"YulLiteral","src":"7425:4:23","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7416:3:23"},"nodeType":"YulFunctionCall","src":"7416:14:23"},"variableNames":[{"name":"updatedPos","nodeType":"YulIdentifier","src":"7402:10:23"}]}]},"name":"abi_encodeUpdatedPos_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value0","nodeType":"YulTypedName","src":"7310:6:23","type":""},{"name":"pos","nodeType":"YulTypedName","src":"7318:3:23","type":""}],"returnVariables":[{"name":"updatedPos","nodeType":"YulTypedName","src":"7326:10:23","type":""}],"src":"7257:179:23"},{"body":{"nodeType":"YulBlock","src":"7517:38:23","statements":[{"nodeType":"YulAssignment","src":"7527:22:23","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"7539:3:23"},{"kind":"number","nodeType":"YulLiteral","src":"7544:4:23","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7535:3:23"},"nodeType":"YulFunctionCall","src":"7535:14:23"},"variableNames":[{"name":"next","nodeType":"YulIdentifier","src":"7527:4:23"}]}]},"name":"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"7504:3:23","type":""}],"returnVariables":[{"name":"next","nodeType":"YulTypedName","src":"7512:4:23","type":""}],"src":"7442:113:23"},{"body":{"nodeType":"YulBlock","src":"7715:608:23","statements":[{"nodeType":"YulVariableDeclaration","src":"7725:68:23","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7787:5:23"}],"functionName":{"name":"array_length_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"7739:47:23"},"nodeType":"YulFunctionCall","src":"7739:54:23"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"7729:6:23","type":""}]},{"nodeType":"YulAssignment","src":"7802:93:23","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7883:3:23"},{"name":"length","nodeType":"YulIdentifier","src":"7888:6:23"}],"functionName":{"name":"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7809:73:23"},"nodeType":"YulFunctionCall","src":"7809:86:23"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"7802:3:23"}]},{"nodeType":"YulVariableDeclaration","src":"7904:71:23","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7969:5:23"}],"functionName":{"name":"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"7919:49:23"},"nodeType":"YulFunctionCall","src":"7919:56:23"},"variables":[{"name":"baseRef","nodeType":"YulTypedName","src":"7908:7:23","type":""}]},{"nodeType":"YulVariableDeclaration","src":"7984:21:23","value":{"name":"baseRef","nodeType":"YulIdentifier","src":"7998:7:23"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"7988:6:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"8074:224:23","statements":[{"nodeType":"YulVariableDeclaration","src":"8088:34:23","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"8115:6:23"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8109:5:23"},"nodeType":"YulFunctionCall","src":"8109:13:23"},"variables":[{"name":"elementValue0","nodeType":"YulTypedName","src":"8092:13:23","type":""}]},{"nodeType":"YulAssignment","src":"8135:70:23","value":{"arguments":[{"name":"elementValue0","nodeType":"YulIdentifier","src":"8186:13:23"},{"name":"pos","nodeType":"YulIdentifier","src":"8201:3:23"}],"functionName":{"name":"abi_encodeUpdatedPos_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"8142:43:23"},"nodeType":"YulFunctionCall","src":"8142:63:23"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"8135:3:23"}]},{"nodeType":"YulAssignment","src":"8218:70:23","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"8281:6:23"}],"functionName":{"name":"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"8228:52:23"},"nodeType":"YulFunctionCall","src":"8228:60:23"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"8218:6:23"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"8036:1:23"},{"name":"length","nodeType":"YulIdentifier","src":"8039:6:23"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"8033:2:23"},"nodeType":"YulFunctionCall","src":"8033:13:23"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"8047:18:23","statements":[{"nodeType":"YulAssignment","src":"8049:14:23","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"8058:1:23"},{"kind":"number","nodeType":"YulLiteral","src":"8061:1:23","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8054:3:23"},"nodeType":"YulFunctionCall","src":"8054:9:23"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"8049:1:23"}]}]},"pre":{"nodeType":"YulBlock","src":"8018:14:23","statements":[{"nodeType":"YulVariableDeclaration","src":"8020:10:23","value":{"kind":"number","nodeType":"YulLiteral","src":"8029:1:23","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"8024:1:23","type":""}]}]},"src":"8014:284:23"},{"nodeType":"YulAssignment","src":"8307:10:23","value":{"name":"pos","nodeType":"YulIdentifier","src":"8314:3:23"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"8307:3:23"}]}]},"name":"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7694:5:23","type":""},{"name":"pos","nodeType":"YulTypedName","src":"7701:3:23","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"7710:3:23","type":""}],"src":"7591:732:23"},{"body":{"nodeType":"YulBlock","src":"8683:861:23","statements":[{"nodeType":"YulAssignment","src":"8693:27:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8705:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"8716:3:23","type":"","value":"224"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8701:3:23"},"nodeType":"YulFunctionCall","src":"8701:19:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8693:4:23"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"8772:6:23"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8785:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"8796:1:23","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8781:3:23"},"nodeType":"YulFunctionCall","src":"8781:17:23"}],"functionName":{"name":"abi_encode_t_bytes1_to_t_bytes1_fromStack","nodeType":"YulIdentifier","src":"8730:41:23"},"nodeType":"YulFunctionCall","src":"8730:69:23"},"nodeType":"YulExpressionStatement","src":"8730:69:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8820:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"8831:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8816:3:23"},"nodeType":"YulFunctionCall","src":"8816:18:23"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"8840:4:23"},{"name":"headStart","nodeType":"YulIdentifier","src":"8846:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8836:3:23"},"nodeType":"YulFunctionCall","src":"8836:20:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8809:6:23"},"nodeType":"YulFunctionCall","src":"8809:48:23"},"nodeType":"YulExpressionStatement","src":"8809:48:23"},{"nodeType":"YulAssignment","src":"8866:86:23","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"8938:6:23"},{"name":"tail","nodeType":"YulIdentifier","src":"8947:4:23"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8874:63:23"},"nodeType":"YulFunctionCall","src":"8874:78:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8866:4:23"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8973:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"8984:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8969:3:23"},"nodeType":"YulFunctionCall","src":"8969:18:23"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"8993:4:23"},{"name":"headStart","nodeType":"YulIdentifier","src":"8999:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8989:3:23"},"nodeType":"YulFunctionCall","src":"8989:20:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8962:6:23"},"nodeType":"YulFunctionCall","src":"8962:48:23"},"nodeType":"YulExpressionStatement","src":"8962:48:23"},{"nodeType":"YulAssignment","src":"9019:86:23","value":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"9091:6:23"},{"name":"tail","nodeType":"YulIdentifier","src":"9100:4:23"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9027:63:23"},"nodeType":"YulFunctionCall","src":"9027:78:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9019:4:23"}]},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"9159:6:23"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9172:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"9183:2:23","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9168:3:23"},"nodeType":"YulFunctionCall","src":"9168:18:23"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"9115:43:23"},"nodeType":"YulFunctionCall","src":"9115:72:23"},"nodeType":"YulExpressionStatement","src":"9115:72:23"},{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"9241:6:23"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9254:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"9265:3:23","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9250:3:23"},"nodeType":"YulFunctionCall","src":"9250:19:23"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"9197:43:23"},"nodeType":"YulFunctionCall","src":"9197:73:23"},"nodeType":"YulExpressionStatement","src":"9197:73:23"},{"expression":{"arguments":[{"name":"value5","nodeType":"YulIdentifier","src":"9324:6:23"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9337:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"9348:3:23","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9333:3:23"},"nodeType":"YulFunctionCall","src":"9333:19:23"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"9280:43:23"},"nodeType":"YulFunctionCall","src":"9280:73:23"},"nodeType":"YulExpressionStatement","src":"9280:73:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9374:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"9385:3:23","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9370:3:23"},"nodeType":"YulFunctionCall","src":"9370:19:23"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"9395:4:23"},{"name":"headStart","nodeType":"YulIdentifier","src":"9401:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9391:3:23"},"nodeType":"YulFunctionCall","src":"9391:20:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9363:6:23"},"nodeType":"YulFunctionCall","src":"9363:49:23"},"nodeType":"YulExpressionStatement","src":"9363:49:23"},{"nodeType":"YulAssignment","src":"9421:116:23","value":{"arguments":[{"name":"value6","nodeType":"YulIdentifier","src":"9523:6:23"},{"name":"tail","nodeType":"YulIdentifier","src":"9532:4:23"}],"functionName":{"name":"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9429:93:23"},"nodeType":"YulFunctionCall","src":"9429:108:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9421:4:23"}]}]},"name":"abi_encode_tuple_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__to_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8607:9:23","type":""},{"name":"value6","nodeType":"YulTypedName","src":"8619:6:23","type":""},{"name":"value5","nodeType":"YulTypedName","src":"8627:6:23","type":""},{"name":"value4","nodeType":"YulTypedName","src":"8635:6:23","type":""},{"name":"value3","nodeType":"YulTypedName","src":"8643:6:23","type":""},{"name":"value2","nodeType":"YulTypedName","src":"8651:6:23","type":""},{"name":"value1","nodeType":"YulTypedName","src":"8659:6:23","type":""},{"name":"value0","nodeType":"YulTypedName","src":"8667:6:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8678:4:23","type":""}],"src":"8329:1215:23"},{"body":{"nodeType":"YulBlock","src":"9616:263:23","statements":[{"body":{"nodeType":"YulBlock","src":"9662:83:23","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"9664:77:23"},"nodeType":"YulFunctionCall","src":"9664:79:23"},"nodeType":"YulExpressionStatement","src":"9664:79:23"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"9637:7:23"},{"name":"headStart","nodeType":"YulIdentifier","src":"9646:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9633:3:23"},"nodeType":"YulFunctionCall","src":"9633:23:23"},{"kind":"number","nodeType":"YulLiteral","src":"9658:2:23","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"9629:3:23"},"nodeType":"YulFunctionCall","src":"9629:32:23"},"nodeType":"YulIf","src":"9626:119:23"},{"nodeType":"YulBlock","src":"9755:117:23","statements":[{"nodeType":"YulVariableDeclaration","src":"9770:15:23","value":{"kind":"number","nodeType":"YulLiteral","src":"9784:1:23","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9774:6:23","type":""}]},{"nodeType":"YulAssignment","src":"9799:63:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9834:9:23"},{"name":"offset","nodeType":"YulIdentifier","src":"9845:6:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9830:3:23"},"nodeType":"YulFunctionCall","src":"9830:22:23"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9854:7:23"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"9809:20:23"},"nodeType":"YulFunctionCall","src":"9809:53:23"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"9799:6:23"}]}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9586:9:23","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"9597:7:23","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"9609:6:23","type":""}],"src":"9550:329:23"},{"body":{"nodeType":"YulBlock","src":"9929:53:23","statements":[{"nodeType":"YulAssignment","src":"9939:37:23","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9954:5:23"},{"kind":"number","nodeType":"YulLiteral","src":"9961:14:23","type":"","value":"0xffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"9950:3:23"},"nodeType":"YulFunctionCall","src":"9950:26:23"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"9939:7:23"}]}]},"name":"cleanup_t_uint48","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9911:5:23","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"9921:7:23","type":""}],"src":"9885:97:23"},{"body":{"nodeType":"YulBlock","src":"10051:52:23","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10068:3:23"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10090:5:23"}],"functionName":{"name":"cleanup_t_uint48","nodeType":"YulIdentifier","src":"10073:16:23"},"nodeType":"YulFunctionCall","src":"10073:23:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10061:6:23"},"nodeType":"YulFunctionCall","src":"10061:36:23"},"nodeType":"YulExpressionStatement","src":"10061:36:23"}]},"name":"abi_encode_t_uint48_to_t_uint48_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10039:5:23","type":""},{"name":"pos","nodeType":"YulTypedName","src":"10046:3:23","type":""}],"src":"9988:115:23"},{"body":{"nodeType":"YulBlock","src":"10205:122:23","statements":[{"nodeType":"YulAssignment","src":"10215:26:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10227:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"10238:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10223:3:23"},"nodeType":"YulFunctionCall","src":"10223:18:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10215:4:23"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"10293:6:23"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10306:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"10317:1:23","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10302:3:23"},"nodeType":"YulFunctionCall","src":"10302:17:23"}],"functionName":{"name":"abi_encode_t_uint48_to_t_uint48_fromStack","nodeType":"YulIdentifier","src":"10251:41:23"},"nodeType":"YulFunctionCall","src":"10251:69:23"},"nodeType":"YulExpressionStatement","src":"10251:69:23"}]},"name":"abi_encode_tuple_t_uint48__to_t_uint48__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10177:9:23","type":""},{"name":"value0","nodeType":"YulTypedName","src":"10189:6:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10200:4:23","type":""}],"src":"10109:218:23"},{"body":{"nodeType":"YulBlock","src":"10374:77:23","statements":[{"body":{"nodeType":"YulBlock","src":"10429:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10438:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10441:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10431:6:23"},"nodeType":"YulFunctionCall","src":"10431:12:23"},"nodeType":"YulExpressionStatement","src":"10431:12:23"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10397:5:23"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10420:5:23"}],"functionName":{"name":"cleanup_t_uint8","nodeType":"YulIdentifier","src":"10404:15:23"},"nodeType":"YulFunctionCall","src":"10404:22:23"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"10394:2:23"},"nodeType":"YulFunctionCall","src":"10394:33:23"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"10387:6:23"},"nodeType":"YulFunctionCall","src":"10387:41:23"},"nodeType":"YulIf","src":"10384:61:23"}]},"name":"validator_revert_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10367:5:23","type":""}],"src":"10333:118:23"},{"body":{"nodeType":"YulBlock","src":"10507:85:23","statements":[{"nodeType":"YulAssignment","src":"10517:29:23","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"10539:6:23"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"10526:12:23"},"nodeType":"YulFunctionCall","src":"10526:20:23"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"10517:5:23"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10580:5:23"}],"functionName":{"name":"validator_revert_t_uint8","nodeType":"YulIdentifier","src":"10555:24:23"},"nodeType":"YulFunctionCall","src":"10555:31:23"},"nodeType":"YulExpressionStatement","src":"10555:31:23"}]},"name":"abi_decode_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"10485:6:23","type":""},{"name":"end","nodeType":"YulTypedName","src":"10493:3:23","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"10501:5:23","type":""}],"src":"10457:135:23"},{"body":{"nodeType":"YulBlock","src":"10641:79:23","statements":[{"body":{"nodeType":"YulBlock","src":"10698:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10707:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10710:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10700:6:23"},"nodeType":"YulFunctionCall","src":"10700:12:23"},"nodeType":"YulExpressionStatement","src":"10700:12:23"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10664:5:23"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10689:5:23"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"10671:17:23"},"nodeType":"YulFunctionCall","src":"10671:24:23"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"10661:2:23"},"nodeType":"YulFunctionCall","src":"10661:35:23"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"10654:6:23"},"nodeType":"YulFunctionCall","src":"10654:43:23"},"nodeType":"YulIf","src":"10651:63:23"}]},"name":"validator_revert_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10634:5:23","type":""}],"src":"10598:122:23"},{"body":{"nodeType":"YulBlock","src":"10778:87:23","statements":[{"nodeType":"YulAssignment","src":"10788:29:23","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"10810:6:23"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"10797:12:23"},"nodeType":"YulFunctionCall","src":"10797:20:23"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"10788:5:23"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10853:5:23"}],"functionName":{"name":"validator_revert_t_bytes32","nodeType":"YulIdentifier","src":"10826:26:23"},"nodeType":"YulFunctionCall","src":"10826:33:23"},"nodeType":"YulExpressionStatement","src":"10826:33:23"}]},"name":"abi_decode_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"10756:6:23","type":""},{"name":"end","nodeType":"YulTypedName","src":"10764:3:23","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"10772:5:23","type":""}],"src":"10726:139:23"},{"body":{"nodeType":"YulBlock","src":"11020:904:23","statements":[{"body":{"nodeType":"YulBlock","src":"11067:83:23","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"11069:77:23"},"nodeType":"YulFunctionCall","src":"11069:79:23"},"nodeType":"YulExpressionStatement","src":"11069:79:23"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"11041:7:23"},{"name":"headStart","nodeType":"YulIdentifier","src":"11050:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11037:3:23"},"nodeType":"YulFunctionCall","src":"11037:23:23"},{"kind":"number","nodeType":"YulLiteral","src":"11062:3:23","type":"","value":"192"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"11033:3:23"},"nodeType":"YulFunctionCall","src":"11033:33:23"},"nodeType":"YulIf","src":"11030:120:23"},{"nodeType":"YulBlock","src":"11160:117:23","statements":[{"nodeType":"YulVariableDeclaration","src":"11175:15:23","value":{"kind":"number","nodeType":"YulLiteral","src":"11189:1:23","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"11179:6:23","type":""}]},{"nodeType":"YulAssignment","src":"11204:63:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11239:9:23"},{"name":"offset","nodeType":"YulIdentifier","src":"11250:6:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11235:3:23"},"nodeType":"YulFunctionCall","src":"11235:22:23"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11259:7:23"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"11214:20:23"},"nodeType":"YulFunctionCall","src":"11214:53:23"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"11204:6:23"}]}]},{"nodeType":"YulBlock","src":"11287:118:23","statements":[{"nodeType":"YulVariableDeclaration","src":"11302:16:23","value":{"kind":"number","nodeType":"YulLiteral","src":"11316:2:23","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"11306:6:23","type":""}]},{"nodeType":"YulAssignment","src":"11332:63:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11367:9:23"},{"name":"offset","nodeType":"YulIdentifier","src":"11378:6:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11363:3:23"},"nodeType":"YulFunctionCall","src":"11363:22:23"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11387:7:23"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"11342:20:23"},"nodeType":"YulFunctionCall","src":"11342:53:23"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"11332:6:23"}]}]},{"nodeType":"YulBlock","src":"11415:118:23","statements":[{"nodeType":"YulVariableDeclaration","src":"11430:16:23","value":{"kind":"number","nodeType":"YulLiteral","src":"11444:2:23","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"11434:6:23","type":""}]},{"nodeType":"YulAssignment","src":"11460:63:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11495:9:23"},{"name":"offset","nodeType":"YulIdentifier","src":"11506:6:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11491:3:23"},"nodeType":"YulFunctionCall","src":"11491:22:23"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11515:7:23"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"11470:20:23"},"nodeType":"YulFunctionCall","src":"11470:53:23"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"11460:6:23"}]}]},{"nodeType":"YulBlock","src":"11543:116:23","statements":[{"nodeType":"YulVariableDeclaration","src":"11558:16:23","value":{"kind":"number","nodeType":"YulLiteral","src":"11572:2:23","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"11562:6:23","type":""}]},{"nodeType":"YulAssignment","src":"11588:61:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11621:9:23"},{"name":"offset","nodeType":"YulIdentifier","src":"11632:6:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11617:3:23"},"nodeType":"YulFunctionCall","src":"11617:22:23"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11641:7:23"}],"functionName":{"name":"abi_decode_t_uint8","nodeType":"YulIdentifier","src":"11598:18:23"},"nodeType":"YulFunctionCall","src":"11598:51:23"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"11588:6:23"}]}]},{"nodeType":"YulBlock","src":"11669:119:23","statements":[{"nodeType":"YulVariableDeclaration","src":"11684:17:23","value":{"kind":"number","nodeType":"YulLiteral","src":"11698:3:23","type":"","value":"128"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"11688:6:23","type":""}]},{"nodeType":"YulAssignment","src":"11715:63:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11750:9:23"},{"name":"offset","nodeType":"YulIdentifier","src":"11761:6:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11746:3:23"},"nodeType":"YulFunctionCall","src":"11746:22:23"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11770:7:23"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"11725:20:23"},"nodeType":"YulFunctionCall","src":"11725:53:23"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"11715:6:23"}]}]},{"nodeType":"YulBlock","src":"11798:119:23","statements":[{"nodeType":"YulVariableDeclaration","src":"11813:17:23","value":{"kind":"number","nodeType":"YulLiteral","src":"11827:3:23","type":"","value":"160"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"11817:6:23","type":""}]},{"nodeType":"YulAssignment","src":"11844:63:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11879:9:23"},{"name":"offset","nodeType":"YulIdentifier","src":"11890:6:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11875:3:23"},"nodeType":"YulFunctionCall","src":"11875:22:23"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11899:7:23"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"11854:20:23"},"nodeType":"YulFunctionCall","src":"11854:53:23"},"variableNames":[{"name":"value5","nodeType":"YulIdentifier","src":"11844:6:23"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10950:9:23","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"10961:7:23","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"10973:6:23","type":""},{"name":"value1","nodeType":"YulTypedName","src":"10981:6:23","type":""},{"name":"value2","nodeType":"YulTypedName","src":"10989:6:23","type":""},{"name":"value3","nodeType":"YulTypedName","src":"10997:6:23","type":""},{"name":"value4","nodeType":"YulTypedName","src":"11005:6:23","type":""},{"name":"value5","nodeType":"YulTypedName","src":"11013:6:23","type":""}],"src":"10871:1053:23"},{"body":{"nodeType":"YulBlock","src":"12096:1033:23","statements":[{"body":{"nodeType":"YulBlock","src":"12143:83:23","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"12145:77:23"},"nodeType":"YulFunctionCall","src":"12145:79:23"},"nodeType":"YulExpressionStatement","src":"12145:79:23"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"12117:7:23"},{"name":"headStart","nodeType":"YulIdentifier","src":"12126:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12113:3:23"},"nodeType":"YulFunctionCall","src":"12113:23:23"},{"kind":"number","nodeType":"YulLiteral","src":"12138:3:23","type":"","value":"224"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"12109:3:23"},"nodeType":"YulFunctionCall","src":"12109:33:23"},"nodeType":"YulIf","src":"12106:120:23"},{"nodeType":"YulBlock","src":"12236:117:23","statements":[{"nodeType":"YulVariableDeclaration","src":"12251:15:23","value":{"kind":"number","nodeType":"YulLiteral","src":"12265:1:23","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"12255:6:23","type":""}]},{"nodeType":"YulAssignment","src":"12280:63:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12315:9:23"},{"name":"offset","nodeType":"YulIdentifier","src":"12326:6:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12311:3:23"},"nodeType":"YulFunctionCall","src":"12311:22:23"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"12335:7:23"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"12290:20:23"},"nodeType":"YulFunctionCall","src":"12290:53:23"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"12280:6:23"}]}]},{"nodeType":"YulBlock","src":"12363:118:23","statements":[{"nodeType":"YulVariableDeclaration","src":"12378:16:23","value":{"kind":"number","nodeType":"YulLiteral","src":"12392:2:23","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"12382:6:23","type":""}]},{"nodeType":"YulAssignment","src":"12408:63:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12443:9:23"},{"name":"offset","nodeType":"YulIdentifier","src":"12454:6:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12439:3:23"},"nodeType":"YulFunctionCall","src":"12439:22:23"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"12463:7:23"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"12418:20:23"},"nodeType":"YulFunctionCall","src":"12418:53:23"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"12408:6:23"}]}]},{"nodeType":"YulBlock","src":"12491:118:23","statements":[{"nodeType":"YulVariableDeclaration","src":"12506:16:23","value":{"kind":"number","nodeType":"YulLiteral","src":"12520:2:23","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"12510:6:23","type":""}]},{"nodeType":"YulAssignment","src":"12536:63:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12571:9:23"},{"name":"offset","nodeType":"YulIdentifier","src":"12582:6:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12567:3:23"},"nodeType":"YulFunctionCall","src":"12567:22:23"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"12591:7:23"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"12546:20:23"},"nodeType":"YulFunctionCall","src":"12546:53:23"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"12536:6:23"}]}]},{"nodeType":"YulBlock","src":"12619:118:23","statements":[{"nodeType":"YulVariableDeclaration","src":"12634:16:23","value":{"kind":"number","nodeType":"YulLiteral","src":"12648:2:23","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"12638:6:23","type":""}]},{"nodeType":"YulAssignment","src":"12664:63:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12699:9:23"},{"name":"offset","nodeType":"YulIdentifier","src":"12710:6:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12695:3:23"},"nodeType":"YulFunctionCall","src":"12695:22:23"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"12719:7:23"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"12674:20:23"},"nodeType":"YulFunctionCall","src":"12674:53:23"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"12664:6:23"}]}]},{"nodeType":"YulBlock","src":"12747:117:23","statements":[{"nodeType":"YulVariableDeclaration","src":"12762:17:23","value":{"kind":"number","nodeType":"YulLiteral","src":"12776:3:23","type":"","value":"128"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"12766:6:23","type":""}]},{"nodeType":"YulAssignment","src":"12793:61:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12826:9:23"},{"name":"offset","nodeType":"YulIdentifier","src":"12837:6:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12822:3:23"},"nodeType":"YulFunctionCall","src":"12822:22:23"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"12846:7:23"}],"functionName":{"name":"abi_decode_t_uint8","nodeType":"YulIdentifier","src":"12803:18:23"},"nodeType":"YulFunctionCall","src":"12803:51:23"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"12793:6:23"}]}]},{"nodeType":"YulBlock","src":"12874:119:23","statements":[{"nodeType":"YulVariableDeclaration","src":"12889:17:23","value":{"kind":"number","nodeType":"YulLiteral","src":"12903:3:23","type":"","value":"160"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"12893:6:23","type":""}]},{"nodeType":"YulAssignment","src":"12920:63:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12955:9:23"},{"name":"offset","nodeType":"YulIdentifier","src":"12966:6:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12951:3:23"},"nodeType":"YulFunctionCall","src":"12951:22:23"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"12975:7:23"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"12930:20:23"},"nodeType":"YulFunctionCall","src":"12930:53:23"},"variableNames":[{"name":"value5","nodeType":"YulIdentifier","src":"12920:6:23"}]}]},{"nodeType":"YulBlock","src":"13003:119:23","statements":[{"nodeType":"YulVariableDeclaration","src":"13018:17:23","value":{"kind":"number","nodeType":"YulLiteral","src":"13032:3:23","type":"","value":"192"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"13022:6:23","type":""}]},{"nodeType":"YulAssignment","src":"13049:63:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13084:9:23"},{"name":"offset","nodeType":"YulIdentifier","src":"13095:6:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13080:3:23"},"nodeType":"YulFunctionCall","src":"13080:22:23"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"13104:7:23"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"13059:20:23"},"nodeType":"YulFunctionCall","src":"13059:53:23"},"variableNames":[{"name":"value6","nodeType":"YulIdentifier","src":"13049:6:23"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12018:9:23","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"12029:7:23","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"12041:6:23","type":""},{"name":"value1","nodeType":"YulTypedName","src":"12049:6:23","type":""},{"name":"value2","nodeType":"YulTypedName","src":"12057:6:23","type":""},{"name":"value3","nodeType":"YulTypedName","src":"12065:6:23","type":""},{"name":"value4","nodeType":"YulTypedName","src":"12073:6:23","type":""},{"name":"value5","nodeType":"YulTypedName","src":"12081:6:23","type":""},{"name":"value6","nodeType":"YulTypedName","src":"12089:6:23","type":""}],"src":"11930:1199:23"},{"body":{"nodeType":"YulBlock","src":"13218:391:23","statements":[{"body":{"nodeType":"YulBlock","src":"13264:83:23","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"13266:77:23"},"nodeType":"YulFunctionCall","src":"13266:79:23"},"nodeType":"YulExpressionStatement","src":"13266:79:23"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"13239:7:23"},{"name":"headStart","nodeType":"YulIdentifier","src":"13248:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13235:3:23"},"nodeType":"YulFunctionCall","src":"13235:23:23"},{"kind":"number","nodeType":"YulLiteral","src":"13260:2:23","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"13231:3:23"},"nodeType":"YulFunctionCall","src":"13231:32:23"},"nodeType":"YulIf","src":"13228:119:23"},{"nodeType":"YulBlock","src":"13357:117:23","statements":[{"nodeType":"YulVariableDeclaration","src":"13372:15:23","value":{"kind":"number","nodeType":"YulLiteral","src":"13386:1:23","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"13376:6:23","type":""}]},{"nodeType":"YulAssignment","src":"13401:63:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13436:9:23"},{"name":"offset","nodeType":"YulIdentifier","src":"13447:6:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13432:3:23"},"nodeType":"YulFunctionCall","src":"13432:22:23"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"13456:7:23"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"13411:20:23"},"nodeType":"YulFunctionCall","src":"13411:53:23"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"13401:6:23"}]}]},{"nodeType":"YulBlock","src":"13484:118:23","statements":[{"nodeType":"YulVariableDeclaration","src":"13499:16:23","value":{"kind":"number","nodeType":"YulLiteral","src":"13513:2:23","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"13503:6:23","type":""}]},{"nodeType":"YulAssignment","src":"13529:63:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13564:9:23"},{"name":"offset","nodeType":"YulIdentifier","src":"13575:6:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13560:3:23"},"nodeType":"YulFunctionCall","src":"13560:22:23"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"13584:7:23"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"13539:20:23"},"nodeType":"YulFunctionCall","src":"13539:53:23"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"13529:6:23"}]}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13180:9:23","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"13191:7:23","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"13203:6:23","type":""},{"name":"value1","nodeType":"YulTypedName","src":"13211:6:23","type":""}],"src":"13135:474:23"},{"body":{"nodeType":"YulBlock","src":"13657:78:23","statements":[{"body":{"nodeType":"YulBlock","src":"13713:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13722:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"13725:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"13715:6:23"},"nodeType":"YulFunctionCall","src":"13715:12:23"},"nodeType":"YulExpressionStatement","src":"13715:12:23"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13680:5:23"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13704:5:23"}],"functionName":{"name":"cleanup_t_uint32","nodeType":"YulIdentifier","src":"13687:16:23"},"nodeType":"YulFunctionCall","src":"13687:23:23"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"13677:2:23"},"nodeType":"YulFunctionCall","src":"13677:34:23"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"13670:6:23"},"nodeType":"YulFunctionCall","src":"13670:42:23"},"nodeType":"YulIf","src":"13667:62:23"}]},"name":"validator_revert_t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"13650:5:23","type":""}],"src":"13615:120:23"},{"body":{"nodeType":"YulBlock","src":"13792:86:23","statements":[{"nodeType":"YulAssignment","src":"13802:29:23","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"13824:6:23"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"13811:12:23"},"nodeType":"YulFunctionCall","src":"13811:20:23"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"13802:5:23"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13866:5:23"}],"functionName":{"name":"validator_revert_t_uint32","nodeType":"YulIdentifier","src":"13840:25:23"},"nodeType":"YulFunctionCall","src":"13840:32:23"},"nodeType":"YulExpressionStatement","src":"13840:32:23"}]},"name":"abi_decode_t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"13770:6:23","type":""},{"name":"end","nodeType":"YulTypedName","src":"13778:3:23","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"13786:5:23","type":""}],"src":"13741:137:23"},{"body":{"nodeType":"YulBlock","src":"13966:390:23","statements":[{"body":{"nodeType":"YulBlock","src":"14012:83:23","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"14014:77:23"},"nodeType":"YulFunctionCall","src":"14014:79:23"},"nodeType":"YulExpressionStatement","src":"14014:79:23"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"13987:7:23"},{"name":"headStart","nodeType":"YulIdentifier","src":"13996:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13983:3:23"},"nodeType":"YulFunctionCall","src":"13983:23:23"},{"kind":"number","nodeType":"YulLiteral","src":"14008:2:23","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"13979:3:23"},"nodeType":"YulFunctionCall","src":"13979:32:23"},"nodeType":"YulIf","src":"13976:119:23"},{"nodeType":"YulBlock","src":"14105:117:23","statements":[{"nodeType":"YulVariableDeclaration","src":"14120:15:23","value":{"kind":"number","nodeType":"YulLiteral","src":"14134:1:23","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"14124:6:23","type":""}]},{"nodeType":"YulAssignment","src":"14149:63:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14184:9:23"},{"name":"offset","nodeType":"YulIdentifier","src":"14195:6:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14180:3:23"},"nodeType":"YulFunctionCall","src":"14180:22:23"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"14204:7:23"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"14159:20:23"},"nodeType":"YulFunctionCall","src":"14159:53:23"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"14149:6:23"}]}]},{"nodeType":"YulBlock","src":"14232:117:23","statements":[{"nodeType":"YulVariableDeclaration","src":"14247:16:23","value":{"kind":"number","nodeType":"YulLiteral","src":"14261:2:23","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"14251:6:23","type":""}]},{"nodeType":"YulAssignment","src":"14277:62:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14311:9:23"},{"name":"offset","nodeType":"YulIdentifier","src":"14322:6:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14307:3:23"},"nodeType":"YulFunctionCall","src":"14307:22:23"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"14331:7:23"}],"functionName":{"name":"abi_decode_t_uint32","nodeType":"YulIdentifier","src":"14287:19:23"},"nodeType":"YulFunctionCall","src":"14287:52:23"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"14277:6:23"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13928:9:23","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"13939:7:23","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"13951:6:23","type":""},{"name":"value1","nodeType":"YulTypedName","src":"13959:6:23","type":""}],"src":"13884:472:23"},{"body":{"nodeType":"YulBlock","src":"14415:52:23","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14432:3:23"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14454:5:23"}],"functionName":{"name":"cleanup_t_uint32","nodeType":"YulIdentifier","src":"14437:16:23"},"nodeType":"YulFunctionCall","src":"14437:23:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14425:6:23"},"nodeType":"YulFunctionCall","src":"14425:36:23"},"nodeType":"YulExpressionStatement","src":"14425:36:23"}]},"name":"abi_encode_t_uint32_to_t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"14403:5:23","type":""},{"name":"pos","nodeType":"YulTypedName","src":"14410:3:23","type":""}],"src":"14362:105:23"},{"body":{"nodeType":"YulBlock","src":"14518:97:23","statements":[{"nodeType":"YulAssignment","src":"14528:81:23","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14543:5:23"},{"kind":"number","nodeType":"YulLiteral","src":"14550:58:23","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"14539:3:23"},"nodeType":"YulFunctionCall","src":"14539:70:23"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"14528:7:23"}]}]},"name":"cleanup_t_uint224","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"14500:5:23","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"14510:7:23","type":""}],"src":"14473:142:23"},{"body":{"nodeType":"YulBlock","src":"14676:53:23","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14693:3:23"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14716:5:23"}],"functionName":{"name":"cleanup_t_uint224","nodeType":"YulIdentifier","src":"14698:17:23"},"nodeType":"YulFunctionCall","src":"14698:24:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14686:6:23"},"nodeType":"YulFunctionCall","src":"14686:37:23"},"nodeType":"YulExpressionStatement","src":"14686:37:23"}]},"name":"abi_encode_t_uint224_to_t_uint224","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"14664:5:23","type":""},{"name":"pos","nodeType":"YulTypedName","src":"14671:3:23","type":""}],"src":"14621:108:23"},{"body":{"nodeType":"YulBlock","src":"14925:395:23","statements":[{"nodeType":"YulVariableDeclaration","src":"14935:26:23","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14951:3:23"},{"kind":"number","nodeType":"YulLiteral","src":"14956:4:23","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14947:3:23"},"nodeType":"YulFunctionCall","src":"14947:14:23"},"variables":[{"name":"tail","nodeType":"YulTypedName","src":"14939:4:23","type":""}]},{"nodeType":"YulBlock","src":"14971:167:23","statements":[{"nodeType":"YulVariableDeclaration","src":"15011:43:23","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15041:5:23"},{"kind":"number","nodeType":"YulLiteral","src":"15048:4:23","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15037:3:23"},"nodeType":"YulFunctionCall","src":"15037:16:23"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"15031:5:23"},"nodeType":"YulFunctionCall","src":"15031:23:23"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"15015:12:23","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"15099:12:23"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15117:3:23"},{"kind":"number","nodeType":"YulLiteral","src":"15122:4:23","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15113:3:23"},"nodeType":"YulFunctionCall","src":"15113:14:23"}],"functionName":{"name":"abi_encode_t_uint32_to_t_uint32","nodeType":"YulIdentifier","src":"15067:31:23"},"nodeType":"YulFunctionCall","src":"15067:61:23"},"nodeType":"YulExpressionStatement","src":"15067:61:23"}]},{"nodeType":"YulBlock","src":"15148:165:23","statements":[{"nodeType":"YulVariableDeclaration","src":"15184:43:23","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15214:5:23"},{"kind":"number","nodeType":"YulLiteral","src":"15221:4:23","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15210:3:23"},"nodeType":"YulFunctionCall","src":"15210:16:23"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"15204:5:23"},"nodeType":"YulFunctionCall","src":"15204:23:23"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"15188:12:23","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"15274:12:23"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15292:3:23"},{"kind":"number","nodeType":"YulLiteral","src":"15297:4:23","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15288:3:23"},"nodeType":"YulFunctionCall","src":"15288:14:23"}],"functionName":{"name":"abi_encode_t_uint224_to_t_uint224","nodeType":"YulIdentifier","src":"15240:33:23"},"nodeType":"YulFunctionCall","src":"15240:63:23"},"nodeType":"YulExpressionStatement","src":"15240:63:23"}]}]},"name":"abi_encode_t_struct$_Checkpoint_$1093_memory_ptr_to_t_struct$_Checkpoint_$1093_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"14912:5:23","type":""},{"name":"pos","nodeType":"YulTypedName","src":"14919:3:23","type":""}],"src":"14803:517:23"},{"body":{"nodeType":"YulBlock","src":"15480:180:23","statements":[{"nodeType":"YulAssignment","src":"15490:26:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15502:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"15513:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15498:3:23"},"nodeType":"YulFunctionCall","src":"15498:18:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15490:4:23"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"15626:6:23"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15639:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"15650:1:23","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15635:3:23"},"nodeType":"YulFunctionCall","src":"15635:17:23"}],"functionName":{"name":"abi_encode_t_struct$_Checkpoint_$1093_memory_ptr_to_t_struct$_Checkpoint_$1093_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"15526:99:23"},"nodeType":"YulFunctionCall","src":"15526:127:23"},"nodeType":"YulExpressionStatement","src":"15526:127:23"}]},"name":"abi_encode_tuple_t_struct$_Checkpoint_$1093_memory_ptr__to_t_struct$_Checkpoint_$1093_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15452:9:23","type":""},{"name":"value0","nodeType":"YulTypedName","src":"15464:6:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15475:4:23","type":""}],"src":"15326:334:23"},{"body":{"nodeType":"YulBlock","src":"15694:152:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15711:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"15714:77:23","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15704:6:23"},"nodeType":"YulFunctionCall","src":"15704:88:23"},"nodeType":"YulExpressionStatement","src":"15704:88:23"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15808:1:23","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"15811:4:23","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15801:6:23"},"nodeType":"YulFunctionCall","src":"15801:15:23"},"nodeType":"YulExpressionStatement","src":"15801:15:23"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15832:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"15835:4:23","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"15825:6:23"},"nodeType":"YulFunctionCall","src":"15825:15:23"},"nodeType":"YulExpressionStatement","src":"15825:15:23"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"15666:180:23"},{"body":{"nodeType":"YulBlock","src":"15903:269:23","statements":[{"nodeType":"YulAssignment","src":"15913:22:23","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"15927:4:23"},{"kind":"number","nodeType":"YulLiteral","src":"15933:1:23","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"15923:3:23"},"nodeType":"YulFunctionCall","src":"15923:12:23"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"15913:6:23"}]},{"nodeType":"YulVariableDeclaration","src":"15944:38:23","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"15974:4:23"},{"kind":"number","nodeType":"YulLiteral","src":"15980:1:23","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"15970:3:23"},"nodeType":"YulFunctionCall","src":"15970:12:23"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"15948:18:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"16021:51:23","statements":[{"nodeType":"YulAssignment","src":"16035:27:23","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"16049:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"16057:4:23","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"16045:3:23"},"nodeType":"YulFunctionCall","src":"16045:17:23"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"16035:6:23"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"16001:18:23"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"15994:6:23"},"nodeType":"YulFunctionCall","src":"15994:26:23"},"nodeType":"YulIf","src":"15991:81:23"},{"body":{"nodeType":"YulBlock","src":"16124:42:23","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"16138:16:23"},"nodeType":"YulFunctionCall","src":"16138:18:23"},"nodeType":"YulExpressionStatement","src":"16138:18:23"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"16088:18:23"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"16111:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"16119:2:23","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"16108:2:23"},"nodeType":"YulFunctionCall","src":"16108:14:23"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"16085:2:23"},"nodeType":"YulFunctionCall","src":"16085:38:23"},"nodeType":"YulIf","src":"16082:84:23"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"15887:4:23","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"15896:6:23","type":""}],"src":"15852:320:23"},{"body":{"nodeType":"YulBlock","src":"16206:152:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16223:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"16226:77:23","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16216:6:23"},"nodeType":"YulFunctionCall","src":"16216:88:23"},"nodeType":"YulExpressionStatement","src":"16216:88:23"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16320:1:23","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"16323:4:23","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16313:6:23"},"nodeType":"YulFunctionCall","src":"16313:15:23"},"nodeType":"YulExpressionStatement","src":"16313:15:23"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16344:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"16347:4:23","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"16337:6:23"},"nodeType":"YulFunctionCall","src":"16337:15:23"},"nodeType":"YulExpressionStatement","src":"16337:15:23"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"16178:180:23"},{"body":{"nodeType":"YulBlock","src":"16408:147:23","statements":[{"nodeType":"YulAssignment","src":"16418:25:23","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"16441:1:23"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"16423:17:23"},"nodeType":"YulFunctionCall","src":"16423:20:23"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"16418:1:23"}]},{"nodeType":"YulAssignment","src":"16452:25:23","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"16475:1:23"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"16457:17:23"},"nodeType":"YulFunctionCall","src":"16457:20:23"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"16452:1:23"}]},{"nodeType":"YulAssignment","src":"16486:16:23","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"16497:1:23"},{"name":"y","nodeType":"YulIdentifier","src":"16500:1:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16493:3:23"},"nodeType":"YulFunctionCall","src":"16493:9:23"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"16486:3:23"}]},{"body":{"nodeType":"YulBlock","src":"16526:22:23","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"16528:16:23"},"nodeType":"YulFunctionCall","src":"16528:18:23"},"nodeType":"YulExpressionStatement","src":"16528:18:23"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"16518:1:23"},{"name":"sum","nodeType":"YulIdentifier","src":"16521:3:23"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"16515:2:23"},"nodeType":"YulFunctionCall","src":"16515:10:23"},"nodeType":"YulIf","src":"16512:36:23"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"16395:1:23","type":""},{"name":"y","nodeType":"YulTypedName","src":"16398:1:23","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"16404:3:23","type":""}],"src":"16364:191:23"},{"body":{"nodeType":"YulBlock","src":"16667:69:23","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"16689:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"16697:1:23","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16685:3:23"},"nodeType":"YulFunctionCall","src":"16685:14:23"},{"hexValue":"4552433230566f7465733a20667574757265206c6f6f6b7570","kind":"string","nodeType":"YulLiteral","src":"16701:27:23","type":"","value":"ERC20Votes: future lookup"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16678:6:23"},"nodeType":"YulFunctionCall","src":"16678:51:23"},"nodeType":"YulExpressionStatement","src":"16678:51:23"}]},"name":"store_literal_in_memory_9fb4d8462c9084391e0cf06f1b2a0a5b1a23dc8fede26e3b7b37154948e87a72","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"16659:6:23","type":""}],"src":"16561:175:23"},{"body":{"nodeType":"YulBlock","src":"16888:220:23","statements":[{"nodeType":"YulAssignment","src":"16898:74:23","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16964:3:23"},{"kind":"number","nodeType":"YulLiteral","src":"16969:2:23","type":"","value":"25"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"16905:58:23"},"nodeType":"YulFunctionCall","src":"16905:67:23"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"16898:3:23"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17070:3:23"}],"functionName":{"name":"store_literal_in_memory_9fb4d8462c9084391e0cf06f1b2a0a5b1a23dc8fede26e3b7b37154948e87a72","nodeType":"YulIdentifier","src":"16981:88:23"},"nodeType":"YulFunctionCall","src":"16981:93:23"},"nodeType":"YulExpressionStatement","src":"16981:93:23"},{"nodeType":"YulAssignment","src":"17083:19:23","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17094:3:23"},{"kind":"number","nodeType":"YulLiteral","src":"17099:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17090:3:23"},"nodeType":"YulFunctionCall","src":"17090:12:23"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"17083:3:23"}]}]},"name":"abi_encode_t_stringliteral_9fb4d8462c9084391e0cf06f1b2a0a5b1a23dc8fede26e3b7b37154948e87a72_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"16876:3:23","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"16884:3:23","type":""}],"src":"16742:366:23"},{"body":{"nodeType":"YulBlock","src":"17285:248:23","statements":[{"nodeType":"YulAssignment","src":"17295:26:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17307:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"17318:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17303:3:23"},"nodeType":"YulFunctionCall","src":"17303:18:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17295:4:23"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17342:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"17353:1:23","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17338:3:23"},"nodeType":"YulFunctionCall","src":"17338:17:23"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"17361:4:23"},{"name":"headStart","nodeType":"YulIdentifier","src":"17367:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"17357:3:23"},"nodeType":"YulFunctionCall","src":"17357:20:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17331:6:23"},"nodeType":"YulFunctionCall","src":"17331:47:23"},"nodeType":"YulExpressionStatement","src":"17331:47:23"},{"nodeType":"YulAssignment","src":"17387:139:23","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"17521:4:23"}],"functionName":{"name":"abi_encode_t_stringliteral_9fb4d8462c9084391e0cf06f1b2a0a5b1a23dc8fede26e3b7b37154948e87a72_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"17395:124:23"},"nodeType":"YulFunctionCall","src":"17395:131:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17387:4:23"}]}]},"name":"abi_encode_tuple_t_stringliteral_9fb4d8462c9084391e0cf06f1b2a0a5b1a23dc8fede26e3b7b37154948e87a72__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17265:9:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17280:4:23","type":""}],"src":"17114:419:23"},{"body":{"nodeType":"YulBlock","src":"17645:73:23","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"17667:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"17675:1:23","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17663:3:23"},"nodeType":"YulFunctionCall","src":"17663:14:23"},{"hexValue":"4552433230566f7465733a2062726f6b656e20636c6f636b206d6f6465","kind":"string","nodeType":"YulLiteral","src":"17679:31:23","type":"","value":"ERC20Votes: broken clock mode"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17656:6:23"},"nodeType":"YulFunctionCall","src":"17656:55:23"},"nodeType":"YulExpressionStatement","src":"17656:55:23"}]},"name":"store_literal_in_memory_d8b645ec611d4ec3e2023618b4603d577ce189d5bc833b5325ebd41cfe74f8df","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"17637:6:23","type":""}],"src":"17539:179:23"},{"body":{"nodeType":"YulBlock","src":"17870:220:23","statements":[{"nodeType":"YulAssignment","src":"17880:74:23","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17946:3:23"},{"kind":"number","nodeType":"YulLiteral","src":"17951:2:23","type":"","value":"29"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"17887:58:23"},"nodeType":"YulFunctionCall","src":"17887:67:23"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"17880:3:23"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18052:3:23"}],"functionName":{"name":"store_literal_in_memory_d8b645ec611d4ec3e2023618b4603d577ce189d5bc833b5325ebd41cfe74f8df","nodeType":"YulIdentifier","src":"17963:88:23"},"nodeType":"YulFunctionCall","src":"17963:93:23"},"nodeType":"YulExpressionStatement","src":"17963:93:23"},{"nodeType":"YulAssignment","src":"18065:19:23","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18076:3:23"},{"kind":"number","nodeType":"YulLiteral","src":"18081:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18072:3:23"},"nodeType":"YulFunctionCall","src":"18072:12:23"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"18065:3:23"}]}]},"name":"abi_encode_t_stringliteral_d8b645ec611d4ec3e2023618b4603d577ce189d5bc833b5325ebd41cfe74f8df_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"17858:3:23","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"17866:3:23","type":""}],"src":"17724:366:23"},{"body":{"nodeType":"YulBlock","src":"18267:248:23","statements":[{"nodeType":"YulAssignment","src":"18277:26:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18289:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"18300:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18285:3:23"},"nodeType":"YulFunctionCall","src":"18285:18:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18277:4:23"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18324:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"18335:1:23","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18320:3:23"},"nodeType":"YulFunctionCall","src":"18320:17:23"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"18343:4:23"},{"name":"headStart","nodeType":"YulIdentifier","src":"18349:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"18339:3:23"},"nodeType":"YulFunctionCall","src":"18339:20:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18313:6:23"},"nodeType":"YulFunctionCall","src":"18313:47:23"},"nodeType":"YulExpressionStatement","src":"18313:47:23"},{"nodeType":"YulAssignment","src":"18369:139:23","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"18503:4:23"}],"functionName":{"name":"abi_encode_t_stringliteral_d8b645ec611d4ec3e2023618b4603d577ce189d5bc833b5325ebd41cfe74f8df_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"18377:124:23"},"nodeType":"YulFunctionCall","src":"18377:131:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18369:4:23"}]}]},"name":"abi_encode_tuple_t_stringliteral_d8b645ec611d4ec3e2023618b4603d577ce189d5bc833b5325ebd41cfe74f8df__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18247:9:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"18262:4:23","type":""}],"src":"18096:419:23"},{"body":{"nodeType":"YulBlock","src":"18549:152:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18566:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"18569:77:23","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18559:6:23"},"nodeType":"YulFunctionCall","src":"18559:88:23"},"nodeType":"YulExpressionStatement","src":"18559:88:23"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18663:1:23","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"18666:4:23","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18656:6:23"},"nodeType":"YulFunctionCall","src":"18656:15:23"},"nodeType":"YulExpressionStatement","src":"18656:15:23"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18687:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"18690:4:23","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"18680:6:23"},"nodeType":"YulFunctionCall","src":"18680:15:23"},"nodeType":"YulExpressionStatement","src":"18680:15:23"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"18521:180:23"},{"body":{"nodeType":"YulBlock","src":"18735:152:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18752:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"18755:77:23","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18745:6:23"},"nodeType":"YulFunctionCall","src":"18745:88:23"},"nodeType":"YulExpressionStatement","src":"18745:88:23"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18849:1:23","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"18852:4:23","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18842:6:23"},"nodeType":"YulFunctionCall","src":"18842:15:23"},"nodeType":"YulExpressionStatement","src":"18842:15:23"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18873:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"18876:4:23","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"18866:6:23"},"nodeType":"YulFunctionCall","src":"18866:15:23"},"nodeType":"YulExpressionStatement","src":"18866:15:23"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"18707:180:23"},{"body":{"nodeType":"YulBlock","src":"18999:118:23","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"19021:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"19029:1:23","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19017:3:23"},"nodeType":"YulFunctionCall","src":"19017:14:23"},{"hexValue":"45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77","kind":"string","nodeType":"YulLiteral","src":"19033:34:23","type":"","value":"ERC20: decreased allowance below"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19010:6:23"},"nodeType":"YulFunctionCall","src":"19010:58:23"},"nodeType":"YulExpressionStatement","src":"19010:58:23"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"19089:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"19097:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19085:3:23"},"nodeType":"YulFunctionCall","src":"19085:15:23"},{"hexValue":"207a65726f","kind":"string","nodeType":"YulLiteral","src":"19102:7:23","type":"","value":" zero"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19078:6:23"},"nodeType":"YulFunctionCall","src":"19078:32:23"},"nodeType":"YulExpressionStatement","src":"19078:32:23"}]},"name":"store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"18991:6:23","type":""}],"src":"18893:224:23"},{"body":{"nodeType":"YulBlock","src":"19269:220:23","statements":[{"nodeType":"YulAssignment","src":"19279:74:23","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19345:3:23"},{"kind":"number","nodeType":"YulLiteral","src":"19350:2:23","type":"","value":"37"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"19286:58:23"},"nodeType":"YulFunctionCall","src":"19286:67:23"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"19279:3:23"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19451:3:23"}],"functionName":{"name":"store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","nodeType":"YulIdentifier","src":"19362:88:23"},"nodeType":"YulFunctionCall","src":"19362:93:23"},"nodeType":"YulExpressionStatement","src":"19362:93:23"},{"nodeType":"YulAssignment","src":"19464:19:23","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19475:3:23"},{"kind":"number","nodeType":"YulLiteral","src":"19480:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19471:3:23"},"nodeType":"YulFunctionCall","src":"19471:12:23"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"19464:3:23"}]}]},"name":"abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"19257:3:23","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"19265:3:23","type":""}],"src":"19123:366:23"},{"body":{"nodeType":"YulBlock","src":"19666:248:23","statements":[{"nodeType":"YulAssignment","src":"19676:26:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19688:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"19699:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19684:3:23"},"nodeType":"YulFunctionCall","src":"19684:18:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19676:4:23"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19723:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"19734:1:23","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19719:3:23"},"nodeType":"YulFunctionCall","src":"19719:17:23"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"19742:4:23"},{"name":"headStart","nodeType":"YulIdentifier","src":"19748:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"19738:3:23"},"nodeType":"YulFunctionCall","src":"19738:20:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19712:6:23"},"nodeType":"YulFunctionCall","src":"19712:47:23"},"nodeType":"YulExpressionStatement","src":"19712:47:23"},{"nodeType":"YulAssignment","src":"19768:139:23","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"19902:4:23"}],"functionName":{"name":"abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"19776:124:23"},"nodeType":"YulFunctionCall","src":"19776:131:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19768:4:23"}]}]},"name":"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19646:9:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"19661:4:23","type":""}],"src":"19495:419:23"},{"body":{"nodeType":"YulBlock","src":"20026:73:23","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"20048:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"20056:1:23","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20044:3:23"},"nodeType":"YulFunctionCall","src":"20044:14:23"},{"hexValue":"4552433230566f7465733a207369676e61747572652065787069726564","kind":"string","nodeType":"YulLiteral","src":"20060:31:23","type":"","value":"ERC20Votes: signature expired"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20037:6:23"},"nodeType":"YulFunctionCall","src":"20037:55:23"},"nodeType":"YulExpressionStatement","src":"20037:55:23"}]},"name":"store_literal_in_memory_136d0f69bc85a5c125b5cc368e2880ebdb3c89d4d9828f6476431c386ea60257","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"20018:6:23","type":""}],"src":"19920:179:23"},{"body":{"nodeType":"YulBlock","src":"20251:220:23","statements":[{"nodeType":"YulAssignment","src":"20261:74:23","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20327:3:23"},{"kind":"number","nodeType":"YulLiteral","src":"20332:2:23","type":"","value":"29"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"20268:58:23"},"nodeType":"YulFunctionCall","src":"20268:67:23"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"20261:3:23"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20433:3:23"}],"functionName":{"name":"store_literal_in_memory_136d0f69bc85a5c125b5cc368e2880ebdb3c89d4d9828f6476431c386ea60257","nodeType":"YulIdentifier","src":"20344:88:23"},"nodeType":"YulFunctionCall","src":"20344:93:23"},"nodeType":"YulExpressionStatement","src":"20344:93:23"},{"nodeType":"YulAssignment","src":"20446:19:23","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20457:3:23"},{"kind":"number","nodeType":"YulLiteral","src":"20462:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20453:3:23"},"nodeType":"YulFunctionCall","src":"20453:12:23"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"20446:3:23"}]}]},"name":"abi_encode_t_stringliteral_136d0f69bc85a5c125b5cc368e2880ebdb3c89d4d9828f6476431c386ea60257_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"20239:3:23","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"20247:3:23","type":""}],"src":"20105:366:23"},{"body":{"nodeType":"YulBlock","src":"20648:248:23","statements":[{"nodeType":"YulAssignment","src":"20658:26:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20670:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"20681:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20666:3:23"},"nodeType":"YulFunctionCall","src":"20666:18:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20658:4:23"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20705:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"20716:1:23","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20701:3:23"},"nodeType":"YulFunctionCall","src":"20701:17:23"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"20724:4:23"},{"name":"headStart","nodeType":"YulIdentifier","src":"20730:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"20720:3:23"},"nodeType":"YulFunctionCall","src":"20720:20:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20694:6:23"},"nodeType":"YulFunctionCall","src":"20694:47:23"},"nodeType":"YulExpressionStatement","src":"20694:47:23"},{"nodeType":"YulAssignment","src":"20750:139:23","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"20884:4:23"}],"functionName":{"name":"abi_encode_t_stringliteral_136d0f69bc85a5c125b5cc368e2880ebdb3c89d4d9828f6476431c386ea60257_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"20758:124:23"},"nodeType":"YulFunctionCall","src":"20758:131:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20750:4:23"}]}]},"name":"abi_encode_tuple_t_stringliteral_136d0f69bc85a5c125b5cc368e2880ebdb3c89d4d9828f6476431c386ea60257__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20628:9:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"20643:4:23","type":""}],"src":"20477:419:23"},{"body":{"nodeType":"YulBlock","src":"21084:371:23","statements":[{"nodeType":"YulAssignment","src":"21094:27:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21106:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"21117:3:23","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21102:3:23"},"nodeType":"YulFunctionCall","src":"21102:19:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21094:4:23"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"21175:6:23"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21188:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"21199:1:23","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21184:3:23"},"nodeType":"YulFunctionCall","src":"21184:17:23"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"21131:43:23"},"nodeType":"YulFunctionCall","src":"21131:71:23"},"nodeType":"YulExpressionStatement","src":"21131:71:23"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"21256:6:23"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21269:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"21280:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21265:3:23"},"nodeType":"YulFunctionCall","src":"21265:18:23"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"21212:43:23"},"nodeType":"YulFunctionCall","src":"21212:72:23"},"nodeType":"YulExpressionStatement","src":"21212:72:23"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"21338:6:23"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21351:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"21362:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21347:3:23"},"nodeType":"YulFunctionCall","src":"21347:18:23"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"21294:43:23"},"nodeType":"YulFunctionCall","src":"21294:72:23"},"nodeType":"YulExpressionStatement","src":"21294:72:23"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"21420:6:23"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21433:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"21444:2:23","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21429:3:23"},"nodeType":"YulFunctionCall","src":"21429:18:23"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"21376:43:23"},"nodeType":"YulFunctionCall","src":"21376:72:23"},"nodeType":"YulExpressionStatement","src":"21376:72:23"}]},"name":"abi_encode_tuple_t_bytes32_t_address_t_uint256_t_uint256__to_t_bytes32_t_address_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"21032:9:23","type":""},{"name":"value3","nodeType":"YulTypedName","src":"21044:6:23","type":""},{"name":"value2","nodeType":"YulTypedName","src":"21052:6:23","type":""},{"name":"value1","nodeType":"YulTypedName","src":"21060:6:23","type":""},{"name":"value0","nodeType":"YulTypedName","src":"21068:6:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"21079:4:23","type":""}],"src":"20902:553:23"},{"body":{"nodeType":"YulBlock","src":"21567:69:23","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"21589:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"21597:1:23","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21585:3:23"},"nodeType":"YulFunctionCall","src":"21585:14:23"},{"hexValue":"4552433230566f7465733a20696e76616c6964206e6f6e6365","kind":"string","nodeType":"YulLiteral","src":"21601:27:23","type":"","value":"ERC20Votes: invalid nonce"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21578:6:23"},"nodeType":"YulFunctionCall","src":"21578:51:23"},"nodeType":"YulExpressionStatement","src":"21578:51:23"}]},"name":"store_literal_in_memory_1a23b43d95073d55a7380117ca03cace60cd22fee15d5cb140d51e46236e6872","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"21559:6:23","type":""}],"src":"21461:175:23"},{"body":{"nodeType":"YulBlock","src":"21788:220:23","statements":[{"nodeType":"YulAssignment","src":"21798:74:23","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21864:3:23"},{"kind":"number","nodeType":"YulLiteral","src":"21869:2:23","type":"","value":"25"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"21805:58:23"},"nodeType":"YulFunctionCall","src":"21805:67:23"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"21798:3:23"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21970:3:23"}],"functionName":{"name":"store_literal_in_memory_1a23b43d95073d55a7380117ca03cace60cd22fee15d5cb140d51e46236e6872","nodeType":"YulIdentifier","src":"21881:88:23"},"nodeType":"YulFunctionCall","src":"21881:93:23"},"nodeType":"YulExpressionStatement","src":"21881:93:23"},{"nodeType":"YulAssignment","src":"21983:19:23","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21994:3:23"},{"kind":"number","nodeType":"YulLiteral","src":"21999:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21990:3:23"},"nodeType":"YulFunctionCall","src":"21990:12:23"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"21983:3:23"}]}]},"name":"abi_encode_t_stringliteral_1a23b43d95073d55a7380117ca03cace60cd22fee15d5cb140d51e46236e6872_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"21776:3:23","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"21784:3:23","type":""}],"src":"21642:366:23"},{"body":{"nodeType":"YulBlock","src":"22185:248:23","statements":[{"nodeType":"YulAssignment","src":"22195:26:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22207:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"22218:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22203:3:23"},"nodeType":"YulFunctionCall","src":"22203:18:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22195:4:23"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22242:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"22253:1:23","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22238:3:23"},"nodeType":"YulFunctionCall","src":"22238:17:23"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"22261:4:23"},{"name":"headStart","nodeType":"YulIdentifier","src":"22267:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"22257:3:23"},"nodeType":"YulFunctionCall","src":"22257:20:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22231:6:23"},"nodeType":"YulFunctionCall","src":"22231:47:23"},"nodeType":"YulExpressionStatement","src":"22231:47:23"},{"nodeType":"YulAssignment","src":"22287:139:23","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"22421:4:23"}],"functionName":{"name":"abi_encode_t_stringliteral_1a23b43d95073d55a7380117ca03cace60cd22fee15d5cb140d51e46236e6872_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"22295:124:23"},"nodeType":"YulFunctionCall","src":"22295:131:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22287:4:23"}]}]},"name":"abi_encode_tuple_t_stringliteral_1a23b43d95073d55a7380117ca03cace60cd22fee15d5cb140d51e46236e6872__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"22165:9:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"22180:4:23","type":""}],"src":"22014:419:23"},{"body":{"nodeType":"YulBlock","src":"22545:73:23","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"22567:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"22575:1:23","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22563:3:23"},"nodeType":"YulFunctionCall","src":"22563:14:23"},{"hexValue":"45524332305065726d69743a206578706972656420646561646c696e65","kind":"string","nodeType":"YulLiteral","src":"22579:31:23","type":"","value":"ERC20Permit: expired deadline"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22556:6:23"},"nodeType":"YulFunctionCall","src":"22556:55:23"},"nodeType":"YulExpressionStatement","src":"22556:55:23"}]},"name":"store_literal_in_memory_3e89525a63fb9c966b61cf8f5305156de8420bc773a2b60828a2f32c3c5797bd","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"22537:6:23","type":""}],"src":"22439:179:23"},{"body":{"nodeType":"YulBlock","src":"22770:220:23","statements":[{"nodeType":"YulAssignment","src":"22780:74:23","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22846:3:23"},{"kind":"number","nodeType":"YulLiteral","src":"22851:2:23","type":"","value":"29"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"22787:58:23"},"nodeType":"YulFunctionCall","src":"22787:67:23"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"22780:3:23"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22952:3:23"}],"functionName":{"name":"store_literal_in_memory_3e89525a63fb9c966b61cf8f5305156de8420bc773a2b60828a2f32c3c5797bd","nodeType":"YulIdentifier","src":"22863:88:23"},"nodeType":"YulFunctionCall","src":"22863:93:23"},"nodeType":"YulExpressionStatement","src":"22863:93:23"},{"nodeType":"YulAssignment","src":"22965:19:23","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22976:3:23"},{"kind":"number","nodeType":"YulLiteral","src":"22981:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22972:3:23"},"nodeType":"YulFunctionCall","src":"22972:12:23"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"22965:3:23"}]}]},"name":"abi_encode_t_stringliteral_3e89525a63fb9c966b61cf8f5305156de8420bc773a2b60828a2f32c3c5797bd_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"22758:3:23","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"22766:3:23","type":""}],"src":"22624:366:23"},{"body":{"nodeType":"YulBlock","src":"23167:248:23","statements":[{"nodeType":"YulAssignment","src":"23177:26:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23189:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"23200:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23185:3:23"},"nodeType":"YulFunctionCall","src":"23185:18:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"23177:4:23"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23224:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"23235:1:23","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23220:3:23"},"nodeType":"YulFunctionCall","src":"23220:17:23"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"23243:4:23"},{"name":"headStart","nodeType":"YulIdentifier","src":"23249:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"23239:3:23"},"nodeType":"YulFunctionCall","src":"23239:20:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23213:6:23"},"nodeType":"YulFunctionCall","src":"23213:47:23"},"nodeType":"YulExpressionStatement","src":"23213:47:23"},{"nodeType":"YulAssignment","src":"23269:139:23","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"23403:4:23"}],"functionName":{"name":"abi_encode_t_stringliteral_3e89525a63fb9c966b61cf8f5305156de8420bc773a2b60828a2f32c3c5797bd_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"23277:124:23"},"nodeType":"YulFunctionCall","src":"23277:131:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"23269:4:23"}]}]},"name":"abi_encode_tuple_t_stringliteral_3e89525a63fb9c966b61cf8f5305156de8420bc773a2b60828a2f32c3c5797bd__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"23147:9:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"23162:4:23","type":""}],"src":"22996:419:23"},{"body":{"nodeType":"YulBlock","src":"23659:537:23","statements":[{"nodeType":"YulAssignment","src":"23669:27:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23681:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"23692:3:23","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23677:3:23"},"nodeType":"YulFunctionCall","src":"23677:19:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"23669:4:23"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"23750:6:23"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23763:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"23774:1:23","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23759:3:23"},"nodeType":"YulFunctionCall","src":"23759:17:23"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"23706:43:23"},"nodeType":"YulFunctionCall","src":"23706:71:23"},"nodeType":"YulExpressionStatement","src":"23706:71:23"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"23831:6:23"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23844:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"23855:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23840:3:23"},"nodeType":"YulFunctionCall","src":"23840:18:23"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"23787:43:23"},"nodeType":"YulFunctionCall","src":"23787:72:23"},"nodeType":"YulExpressionStatement","src":"23787:72:23"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"23913:6:23"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23926:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"23937:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23922:3:23"},"nodeType":"YulFunctionCall","src":"23922:18:23"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"23869:43:23"},"nodeType":"YulFunctionCall","src":"23869:72:23"},"nodeType":"YulExpressionStatement","src":"23869:72:23"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"23995:6:23"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24008:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"24019:2:23","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24004:3:23"},"nodeType":"YulFunctionCall","src":"24004:18:23"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"23951:43:23"},"nodeType":"YulFunctionCall","src":"23951:72:23"},"nodeType":"YulExpressionStatement","src":"23951:72:23"},{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"24077:6:23"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24090:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"24101:3:23","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24086:3:23"},"nodeType":"YulFunctionCall","src":"24086:19:23"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"24033:43:23"},"nodeType":"YulFunctionCall","src":"24033:73:23"},"nodeType":"YulExpressionStatement","src":"24033:73:23"},{"expression":{"arguments":[{"name":"value5","nodeType":"YulIdentifier","src":"24160:6:23"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24173:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"24184:3:23","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24169:3:23"},"nodeType":"YulFunctionCall","src":"24169:19:23"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"24116:43:23"},"nodeType":"YulFunctionCall","src":"24116:73:23"},"nodeType":"YulExpressionStatement","src":"24116:73:23"}]},"name":"abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"23591:9:23","type":""},{"name":"value5","nodeType":"YulTypedName","src":"23603:6:23","type":""},{"name":"value4","nodeType":"YulTypedName","src":"23611:6:23","type":""},{"name":"value3","nodeType":"YulTypedName","src":"23619:6:23","type":""},{"name":"value2","nodeType":"YulTypedName","src":"23627:6:23","type":""},{"name":"value1","nodeType":"YulTypedName","src":"23635:6:23","type":""},{"name":"value0","nodeType":"YulTypedName","src":"23643:6:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"23654:4:23","type":""}],"src":"23421:775:23"},{"body":{"nodeType":"YulBlock","src":"24308:74:23","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"24330:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"24338:1:23","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24326:3:23"},"nodeType":"YulFunctionCall","src":"24326:14:23"},{"hexValue":"45524332305065726d69743a20696e76616c6964207369676e6174757265","kind":"string","nodeType":"YulLiteral","src":"24342:32:23","type":"","value":"ERC20Permit: invalid signature"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24319:6:23"},"nodeType":"YulFunctionCall","src":"24319:56:23"},"nodeType":"YulExpressionStatement","src":"24319:56:23"}]},"name":"store_literal_in_memory_94ca1ab58dfda790a1782ffbb0c0a140ec51d4148dbeecc6c39e37b25ff4b124","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"24300:6:23","type":""}],"src":"24202:180:23"},{"body":{"nodeType":"YulBlock","src":"24534:220:23","statements":[{"nodeType":"YulAssignment","src":"24544:74:23","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"24610:3:23"},{"kind":"number","nodeType":"YulLiteral","src":"24615:2:23","type":"","value":"30"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"24551:58:23"},"nodeType":"YulFunctionCall","src":"24551:67:23"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"24544:3:23"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"24716:3:23"}],"functionName":{"name":"store_literal_in_memory_94ca1ab58dfda790a1782ffbb0c0a140ec51d4148dbeecc6c39e37b25ff4b124","nodeType":"YulIdentifier","src":"24627:88:23"},"nodeType":"YulFunctionCall","src":"24627:93:23"},"nodeType":"YulExpressionStatement","src":"24627:93:23"},{"nodeType":"YulAssignment","src":"24729:19:23","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"24740:3:23"},{"kind":"number","nodeType":"YulLiteral","src":"24745:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24736:3:23"},"nodeType":"YulFunctionCall","src":"24736:12:23"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"24729:3:23"}]}]},"name":"abi_encode_t_stringliteral_94ca1ab58dfda790a1782ffbb0c0a140ec51d4148dbeecc6c39e37b25ff4b124_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"24522:3:23","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"24530:3:23","type":""}],"src":"24388:366:23"},{"body":{"nodeType":"YulBlock","src":"24931:248:23","statements":[{"nodeType":"YulAssignment","src":"24941:26:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24953:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"24964:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24949:3:23"},"nodeType":"YulFunctionCall","src":"24949:18:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"24941:4:23"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24988:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"24999:1:23","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24984:3:23"},"nodeType":"YulFunctionCall","src":"24984:17:23"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"25007:4:23"},{"name":"headStart","nodeType":"YulIdentifier","src":"25013:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"25003:3:23"},"nodeType":"YulFunctionCall","src":"25003:20:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24977:6:23"},"nodeType":"YulFunctionCall","src":"24977:47:23"},"nodeType":"YulExpressionStatement","src":"24977:47:23"},{"nodeType":"YulAssignment","src":"25033:139:23","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"25167:4:23"}],"functionName":{"name":"abi_encode_t_stringliteral_94ca1ab58dfda790a1782ffbb0c0a140ec51d4148dbeecc6c39e37b25ff4b124_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"25041:124:23"},"nodeType":"YulFunctionCall","src":"25041:131:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"25033:4:23"}]}]},"name":"abi_encode_tuple_t_stringliteral_94ca1ab58dfda790a1782ffbb0c0a140ec51d4148dbeecc6c39e37b25ff4b124__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"24911:9:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"24926:4:23","type":""}],"src":"24760:419:23"},{"body":{"nodeType":"YulBlock","src":"25291:119:23","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"25313:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"25321:1:23","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25309:3:23"},"nodeType":"YulFunctionCall","src":"25309:14:23"},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061","kind":"string","nodeType":"YulLiteral","src":"25325:34:23","type":"","value":"Ownable: new owner is the zero a"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25302:6:23"},"nodeType":"YulFunctionCall","src":"25302:58:23"},"nodeType":"YulExpressionStatement","src":"25302:58:23"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"25381:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"25389:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25377:3:23"},"nodeType":"YulFunctionCall","src":"25377:15:23"},{"hexValue":"646472657373","kind":"string","nodeType":"YulLiteral","src":"25394:8:23","type":"","value":"ddress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25370:6:23"},"nodeType":"YulFunctionCall","src":"25370:33:23"},"nodeType":"YulExpressionStatement","src":"25370:33:23"}]},"name":"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"25283:6:23","type":""}],"src":"25185:225:23"},{"body":{"nodeType":"YulBlock","src":"25562:220:23","statements":[{"nodeType":"YulAssignment","src":"25572:74:23","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"25638:3:23"},{"kind":"number","nodeType":"YulLiteral","src":"25643:2:23","type":"","value":"38"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"25579:58:23"},"nodeType":"YulFunctionCall","src":"25579:67:23"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"25572:3:23"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"25744:3:23"}],"functionName":{"name":"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","nodeType":"YulIdentifier","src":"25655:88:23"},"nodeType":"YulFunctionCall","src":"25655:93:23"},"nodeType":"YulExpressionStatement","src":"25655:93:23"},{"nodeType":"YulAssignment","src":"25757:19:23","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"25768:3:23"},{"kind":"number","nodeType":"YulLiteral","src":"25773:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25764:3:23"},"nodeType":"YulFunctionCall","src":"25764:12:23"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"25757:3:23"}]}]},"name":"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"25550:3:23","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"25558:3:23","type":""}],"src":"25416:366:23"},{"body":{"nodeType":"YulBlock","src":"25959:248:23","statements":[{"nodeType":"YulAssignment","src":"25969:26:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25981:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"25992:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25977:3:23"},"nodeType":"YulFunctionCall","src":"25977:18:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"25969:4:23"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26016:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"26027:1:23","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26012:3:23"},"nodeType":"YulFunctionCall","src":"26012:17:23"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"26035:4:23"},{"name":"headStart","nodeType":"YulIdentifier","src":"26041:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"26031:3:23"},"nodeType":"YulFunctionCall","src":"26031:20:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26005:6:23"},"nodeType":"YulFunctionCall","src":"26005:47:23"},"nodeType":"YulExpressionStatement","src":"26005:47:23"},{"nodeType":"YulAssignment","src":"26061:139:23","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"26195:4:23"}],"functionName":{"name":"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"26069:124:23"},"nodeType":"YulFunctionCall","src":"26069:131:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"26061:4:23"}]}]},"name":"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"25939:9:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"25954:4:23","type":""}],"src":"25788:419:23"},{"body":{"nodeType":"YulBlock","src":"26258:149:23","statements":[{"nodeType":"YulAssignment","src":"26268:25:23","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"26291:1:23"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"26273:17:23"},"nodeType":"YulFunctionCall","src":"26273:20:23"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"26268:1:23"}]},{"nodeType":"YulAssignment","src":"26302:25:23","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"26325:1:23"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"26307:17:23"},"nodeType":"YulFunctionCall","src":"26307:20:23"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"26302:1:23"}]},{"nodeType":"YulAssignment","src":"26336:17:23","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"26348:1:23"},{"name":"y","nodeType":"YulIdentifier","src":"26351:1:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"26344:3:23"},"nodeType":"YulFunctionCall","src":"26344:9:23"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"26336:4:23"}]},{"body":{"nodeType":"YulBlock","src":"26378:22:23","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"26380:16:23"},"nodeType":"YulFunctionCall","src":"26380:18:23"},"nodeType":"YulExpressionStatement","src":"26380:18:23"}]},"condition":{"arguments":[{"name":"diff","nodeType":"YulIdentifier","src":"26369:4:23"},{"name":"x","nodeType":"YulIdentifier","src":"26375:1:23"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"26366:2:23"},"nodeType":"YulFunctionCall","src":"26366:11:23"},"nodeType":"YulIf","src":"26363:37:23"}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"26244:1:23","type":""},{"name":"y","nodeType":"YulTypedName","src":"26247:1:23","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"26253:4:23","type":""}],"src":"26213:194:23"},{"body":{"nodeType":"YulBlock","src":"26519:117:23","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"26541:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"26549:1:23","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26537:3:23"},"nodeType":"YulFunctionCall","src":"26537:14:23"},{"hexValue":"45524332303a20617070726f76652066726f6d20746865207a65726f20616464","kind":"string","nodeType":"YulLiteral","src":"26553:34:23","type":"","value":"ERC20: approve from the zero add"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26530:6:23"},"nodeType":"YulFunctionCall","src":"26530:58:23"},"nodeType":"YulExpressionStatement","src":"26530:58:23"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"26609:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"26617:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26605:3:23"},"nodeType":"YulFunctionCall","src":"26605:15:23"},{"hexValue":"72657373","kind":"string","nodeType":"YulLiteral","src":"26622:6:23","type":"","value":"ress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26598:6:23"},"nodeType":"YulFunctionCall","src":"26598:31:23"},"nodeType":"YulExpressionStatement","src":"26598:31:23"}]},"name":"store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"26511:6:23","type":""}],"src":"26413:223:23"},{"body":{"nodeType":"YulBlock","src":"26788:220:23","statements":[{"nodeType":"YulAssignment","src":"26798:74:23","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"26864:3:23"},{"kind":"number","nodeType":"YulLiteral","src":"26869:2:23","type":"","value":"36"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"26805:58:23"},"nodeType":"YulFunctionCall","src":"26805:67:23"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"26798:3:23"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"26970:3:23"}],"functionName":{"name":"store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","nodeType":"YulIdentifier","src":"26881:88:23"},"nodeType":"YulFunctionCall","src":"26881:93:23"},"nodeType":"YulExpressionStatement","src":"26881:93:23"},{"nodeType":"YulAssignment","src":"26983:19:23","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"26994:3:23"},{"kind":"number","nodeType":"YulLiteral","src":"26999:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26990:3:23"},"nodeType":"YulFunctionCall","src":"26990:12:23"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"26983:3:23"}]}]},"name":"abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"26776:3:23","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"26784:3:23","type":""}],"src":"26642:366:23"},{"body":{"nodeType":"YulBlock","src":"27185:248:23","statements":[{"nodeType":"YulAssignment","src":"27195:26:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27207:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"27218:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27203:3:23"},"nodeType":"YulFunctionCall","src":"27203:18:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"27195:4:23"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27242:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"27253:1:23","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27238:3:23"},"nodeType":"YulFunctionCall","src":"27238:17:23"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"27261:4:23"},{"name":"headStart","nodeType":"YulIdentifier","src":"27267:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"27257:3:23"},"nodeType":"YulFunctionCall","src":"27257:20:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27231:6:23"},"nodeType":"YulFunctionCall","src":"27231:47:23"},"nodeType":"YulExpressionStatement","src":"27231:47:23"},{"nodeType":"YulAssignment","src":"27287:139:23","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"27421:4:23"}],"functionName":{"name":"abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"27295:124:23"},"nodeType":"YulFunctionCall","src":"27295:131:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"27287:4:23"}]}]},"name":"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"27165:9:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"27180:4:23","type":""}],"src":"27014:419:23"},{"body":{"nodeType":"YulBlock","src":"27545:115:23","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"27567:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"27575:1:23","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27563:3:23"},"nodeType":"YulFunctionCall","src":"27563:14:23"},{"hexValue":"45524332303a20617070726f766520746f20746865207a65726f206164647265","kind":"string","nodeType":"YulLiteral","src":"27579:34:23","type":"","value":"ERC20: approve to the zero addre"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27556:6:23"},"nodeType":"YulFunctionCall","src":"27556:58:23"},"nodeType":"YulExpressionStatement","src":"27556:58:23"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"27635:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"27643:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27631:3:23"},"nodeType":"YulFunctionCall","src":"27631:15:23"},{"hexValue":"7373","kind":"string","nodeType":"YulLiteral","src":"27648:4:23","type":"","value":"ss"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27624:6:23"},"nodeType":"YulFunctionCall","src":"27624:29:23"},"nodeType":"YulExpressionStatement","src":"27624:29:23"}]},"name":"store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"27537:6:23","type":""}],"src":"27439:221:23"},{"body":{"nodeType":"YulBlock","src":"27812:220:23","statements":[{"nodeType":"YulAssignment","src":"27822:74:23","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"27888:3:23"},{"kind":"number","nodeType":"YulLiteral","src":"27893:2:23","type":"","value":"34"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"27829:58:23"},"nodeType":"YulFunctionCall","src":"27829:67:23"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"27822:3:23"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"27994:3:23"}],"functionName":{"name":"store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","nodeType":"YulIdentifier","src":"27905:88:23"},"nodeType":"YulFunctionCall","src":"27905:93:23"},"nodeType":"YulExpressionStatement","src":"27905:93:23"},{"nodeType":"YulAssignment","src":"28007:19:23","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"28018:3:23"},{"kind":"number","nodeType":"YulLiteral","src":"28023:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28014:3:23"},"nodeType":"YulFunctionCall","src":"28014:12:23"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"28007:3:23"}]}]},"name":"abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"27800:3:23","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"27808:3:23","type":""}],"src":"27666:366:23"},{"body":{"nodeType":"YulBlock","src":"28209:248:23","statements":[{"nodeType":"YulAssignment","src":"28219:26:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28231:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"28242:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28227:3:23"},"nodeType":"YulFunctionCall","src":"28227:18:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"28219:4:23"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28266:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"28277:1:23","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28262:3:23"},"nodeType":"YulFunctionCall","src":"28262:17:23"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"28285:4:23"},{"name":"headStart","nodeType":"YulIdentifier","src":"28291:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"28281:3:23"},"nodeType":"YulFunctionCall","src":"28281:20:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28255:6:23"},"nodeType":"YulFunctionCall","src":"28255:47:23"},"nodeType":"YulExpressionStatement","src":"28255:47:23"},{"nodeType":"YulAssignment","src":"28311:139:23","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"28445:4:23"}],"functionName":{"name":"abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"28319:124:23"},"nodeType":"YulFunctionCall","src":"28319:131:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"28311:4:23"}]}]},"name":"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"28189:9:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"28204:4:23","type":""}],"src":"28038:419:23"},{"body":{"nodeType":"YulBlock","src":"28569:73:23","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"28591:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"28599:1:23","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28587:3:23"},"nodeType":"YulFunctionCall","src":"28587:14:23"},{"hexValue":"45524332303a20696e73756666696369656e7420616c6c6f77616e6365","kind":"string","nodeType":"YulLiteral","src":"28603:31:23","type":"","value":"ERC20: insufficient allowance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28580:6:23"},"nodeType":"YulFunctionCall","src":"28580:55:23"},"nodeType":"YulExpressionStatement","src":"28580:55:23"}]},"name":"store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"28561:6:23","type":""}],"src":"28463:179:23"},{"body":{"nodeType":"YulBlock","src":"28794:220:23","statements":[{"nodeType":"YulAssignment","src":"28804:74:23","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"28870:3:23"},{"kind":"number","nodeType":"YulLiteral","src":"28875:2:23","type":"","value":"29"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"28811:58:23"},"nodeType":"YulFunctionCall","src":"28811:67:23"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"28804:3:23"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"28976:3:23"}],"functionName":{"name":"store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","nodeType":"YulIdentifier","src":"28887:88:23"},"nodeType":"YulFunctionCall","src":"28887:93:23"},"nodeType":"YulExpressionStatement","src":"28887:93:23"},{"nodeType":"YulAssignment","src":"28989:19:23","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"29000:3:23"},{"kind":"number","nodeType":"YulLiteral","src":"29005:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28996:3:23"},"nodeType":"YulFunctionCall","src":"28996:12:23"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"28989:3:23"}]}]},"name":"abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"28782:3:23","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"28790:3:23","type":""}],"src":"28648:366:23"},{"body":{"nodeType":"YulBlock","src":"29191:248:23","statements":[{"nodeType":"YulAssignment","src":"29201:26:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29213:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"29224:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29209:3:23"},"nodeType":"YulFunctionCall","src":"29209:18:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"29201:4:23"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29248:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"29259:1:23","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29244:3:23"},"nodeType":"YulFunctionCall","src":"29244:17:23"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"29267:4:23"},{"name":"headStart","nodeType":"YulIdentifier","src":"29273:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"29263:3:23"},"nodeType":"YulFunctionCall","src":"29263:20:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29237:6:23"},"nodeType":"YulFunctionCall","src":"29237:47:23"},"nodeType":"YulExpressionStatement","src":"29237:47:23"},{"nodeType":"YulAssignment","src":"29293:139:23","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"29427:4:23"}],"functionName":{"name":"abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"29301:124:23"},"nodeType":"YulFunctionCall","src":"29301:131:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"29293:4:23"}]}]},"name":"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"29171:9:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"29186:4:23","type":""}],"src":"29020:419:23"},{"body":{"nodeType":"YulBlock","src":"29551:118:23","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"29573:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"29581:1:23","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29569:3:23"},"nodeType":"YulFunctionCall","src":"29569:14:23"},{"hexValue":"45524332303a207472616e736665722066726f6d20746865207a65726f206164","kind":"string","nodeType":"YulLiteral","src":"29585:34:23","type":"","value":"ERC20: transfer from the zero ad"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29562:6:23"},"nodeType":"YulFunctionCall","src":"29562:58:23"},"nodeType":"YulExpressionStatement","src":"29562:58:23"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"29641:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"29649:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29637:3:23"},"nodeType":"YulFunctionCall","src":"29637:15:23"},{"hexValue":"6472657373","kind":"string","nodeType":"YulLiteral","src":"29654:7:23","type":"","value":"dress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29630:6:23"},"nodeType":"YulFunctionCall","src":"29630:32:23"},"nodeType":"YulExpressionStatement","src":"29630:32:23"}]},"name":"store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"29543:6:23","type":""}],"src":"29445:224:23"},{"body":{"nodeType":"YulBlock","src":"29821:220:23","statements":[{"nodeType":"YulAssignment","src":"29831:74:23","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"29897:3:23"},{"kind":"number","nodeType":"YulLiteral","src":"29902:2:23","type":"","value":"37"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"29838:58:23"},"nodeType":"YulFunctionCall","src":"29838:67:23"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"29831:3:23"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"30003:3:23"}],"functionName":{"name":"store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","nodeType":"YulIdentifier","src":"29914:88:23"},"nodeType":"YulFunctionCall","src":"29914:93:23"},"nodeType":"YulExpressionStatement","src":"29914:93:23"},{"nodeType":"YulAssignment","src":"30016:19:23","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"30027:3:23"},{"kind":"number","nodeType":"YulLiteral","src":"30032:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30023:3:23"},"nodeType":"YulFunctionCall","src":"30023:12:23"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"30016:3:23"}]}]},"name":"abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"29809:3:23","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"29817:3:23","type":""}],"src":"29675:366:23"},{"body":{"nodeType":"YulBlock","src":"30218:248:23","statements":[{"nodeType":"YulAssignment","src":"30228:26:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30240:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"30251:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30236:3:23"},"nodeType":"YulFunctionCall","src":"30236:18:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"30228:4:23"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30275:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"30286:1:23","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30271:3:23"},"nodeType":"YulFunctionCall","src":"30271:17:23"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"30294:4:23"},{"name":"headStart","nodeType":"YulIdentifier","src":"30300:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"30290:3:23"},"nodeType":"YulFunctionCall","src":"30290:20:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30264:6:23"},"nodeType":"YulFunctionCall","src":"30264:47:23"},"nodeType":"YulExpressionStatement","src":"30264:47:23"},{"nodeType":"YulAssignment","src":"30320:139:23","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"30454:4:23"}],"functionName":{"name":"abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"30328:124:23"},"nodeType":"YulFunctionCall","src":"30328:131:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"30320:4:23"}]}]},"name":"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"30198:9:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"30213:4:23","type":""}],"src":"30047:419:23"},{"body":{"nodeType":"YulBlock","src":"30578:116:23","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"30600:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"30608:1:23","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30596:3:23"},"nodeType":"YulFunctionCall","src":"30596:14:23"},{"hexValue":"45524332303a207472616e7366657220746f20746865207a65726f2061646472","kind":"string","nodeType":"YulLiteral","src":"30612:34:23","type":"","value":"ERC20: transfer to the zero addr"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30589:6:23"},"nodeType":"YulFunctionCall","src":"30589:58:23"},"nodeType":"YulExpressionStatement","src":"30589:58:23"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"30668:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"30676:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30664:3:23"},"nodeType":"YulFunctionCall","src":"30664:15:23"},{"hexValue":"657373","kind":"string","nodeType":"YulLiteral","src":"30681:5:23","type":"","value":"ess"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30657:6:23"},"nodeType":"YulFunctionCall","src":"30657:30:23"},"nodeType":"YulExpressionStatement","src":"30657:30:23"}]},"name":"store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"30570:6:23","type":""}],"src":"30472:222:23"},{"body":{"nodeType":"YulBlock","src":"30846:220:23","statements":[{"nodeType":"YulAssignment","src":"30856:74:23","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"30922:3:23"},{"kind":"number","nodeType":"YulLiteral","src":"30927:2:23","type":"","value":"35"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"30863:58:23"},"nodeType":"YulFunctionCall","src":"30863:67:23"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"30856:3:23"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"31028:3:23"}],"functionName":{"name":"store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","nodeType":"YulIdentifier","src":"30939:88:23"},"nodeType":"YulFunctionCall","src":"30939:93:23"},"nodeType":"YulExpressionStatement","src":"30939:93:23"},{"nodeType":"YulAssignment","src":"31041:19:23","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"31052:3:23"},{"kind":"number","nodeType":"YulLiteral","src":"31057:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31048:3:23"},"nodeType":"YulFunctionCall","src":"31048:12:23"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"31041:3:23"}]}]},"name":"abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"30834:3:23","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"30842:3:23","type":""}],"src":"30700:366:23"},{"body":{"nodeType":"YulBlock","src":"31243:248:23","statements":[{"nodeType":"YulAssignment","src":"31253:26:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31265:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"31276:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31261:3:23"},"nodeType":"YulFunctionCall","src":"31261:18:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"31253:4:23"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31300:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"31311:1:23","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31296:3:23"},"nodeType":"YulFunctionCall","src":"31296:17:23"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"31319:4:23"},{"name":"headStart","nodeType":"YulIdentifier","src":"31325:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"31315:3:23"},"nodeType":"YulFunctionCall","src":"31315:20:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"31289:6:23"},"nodeType":"YulFunctionCall","src":"31289:47:23"},"nodeType":"YulExpressionStatement","src":"31289:47:23"},{"nodeType":"YulAssignment","src":"31345:139:23","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"31479:4:23"}],"functionName":{"name":"abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"31353:124:23"},"nodeType":"YulFunctionCall","src":"31353:131:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"31345:4:23"}]}]},"name":"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"31223:9:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"31238:4:23","type":""}],"src":"31072:419:23"},{"body":{"nodeType":"YulBlock","src":"31603:119:23","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"31625:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"31633:1:23","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31621:3:23"},"nodeType":"YulFunctionCall","src":"31621:14:23"},{"hexValue":"45524332303a207472616e7366657220616d6f756e7420657863656564732062","kind":"string","nodeType":"YulLiteral","src":"31637:34:23","type":"","value":"ERC20: transfer amount exceeds b"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"31614:6:23"},"nodeType":"YulFunctionCall","src":"31614:58:23"},"nodeType":"YulExpressionStatement","src":"31614:58:23"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"31693:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"31701:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31689:3:23"},"nodeType":"YulFunctionCall","src":"31689:15:23"},{"hexValue":"616c616e6365","kind":"string","nodeType":"YulLiteral","src":"31706:8:23","type":"","value":"alance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"31682:6:23"},"nodeType":"YulFunctionCall","src":"31682:33:23"},"nodeType":"YulExpressionStatement","src":"31682:33:23"}]},"name":"store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"31595:6:23","type":""}],"src":"31497:225:23"},{"body":{"nodeType":"YulBlock","src":"31874:220:23","statements":[{"nodeType":"YulAssignment","src":"31884:74:23","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"31950:3:23"},{"kind":"number","nodeType":"YulLiteral","src":"31955:2:23","type":"","value":"38"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"31891:58:23"},"nodeType":"YulFunctionCall","src":"31891:67:23"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"31884:3:23"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"32056:3:23"}],"functionName":{"name":"store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","nodeType":"YulIdentifier","src":"31967:88:23"},"nodeType":"YulFunctionCall","src":"31967:93:23"},"nodeType":"YulExpressionStatement","src":"31967:93:23"},{"nodeType":"YulAssignment","src":"32069:19:23","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"32080:3:23"},{"kind":"number","nodeType":"YulLiteral","src":"32085:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32076:3:23"},"nodeType":"YulFunctionCall","src":"32076:12:23"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"32069:3:23"}]}]},"name":"abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"31862:3:23","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"31870:3:23","type":""}],"src":"31728:366:23"},{"body":{"nodeType":"YulBlock","src":"32271:248:23","statements":[{"nodeType":"YulAssignment","src":"32281:26:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32293:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"32304:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32289:3:23"},"nodeType":"YulFunctionCall","src":"32289:18:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"32281:4:23"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32328:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"32339:1:23","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32324:3:23"},"nodeType":"YulFunctionCall","src":"32324:17:23"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"32347:4:23"},{"name":"headStart","nodeType":"YulIdentifier","src":"32353:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"32343:3:23"},"nodeType":"YulFunctionCall","src":"32343:20:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"32317:6:23"},"nodeType":"YulFunctionCall","src":"32317:47:23"},"nodeType":"YulExpressionStatement","src":"32317:47:23"},{"nodeType":"YulAssignment","src":"32373:139:23","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"32507:4:23"}],"functionName":{"name":"abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"32381:124:23"},"nodeType":"YulFunctionCall","src":"32381:131:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"32373:4:23"}]}]},"name":"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"32251:9:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"32266:4:23","type":""}],"src":"32100:419:23"},{"body":{"nodeType":"YulBlock","src":"32631:119:23","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"32653:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"32661:1:23","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32649:3:23"},"nodeType":"YulFunctionCall","src":"32649:14:23"},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2033","kind":"string","nodeType":"YulLiteral","src":"32665:34:23","type":"","value":"SafeCast: value doesn't fit in 3"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"32642:6:23"},"nodeType":"YulFunctionCall","src":"32642:58:23"},"nodeType":"YulExpressionStatement","src":"32642:58:23"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"32721:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"32729:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32717:3:23"},"nodeType":"YulFunctionCall","src":"32717:15:23"},{"hexValue":"322062697473","kind":"string","nodeType":"YulLiteral","src":"32734:8:23","type":"","value":"2 bits"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"32710:6:23"},"nodeType":"YulFunctionCall","src":"32710:33:23"},"nodeType":"YulExpressionStatement","src":"32710:33:23"}]},"name":"store_literal_in_memory_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"32623:6:23","type":""}],"src":"32525:225:23"},{"body":{"nodeType":"YulBlock","src":"32902:220:23","statements":[{"nodeType":"YulAssignment","src":"32912:74:23","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"32978:3:23"},{"kind":"number","nodeType":"YulLiteral","src":"32983:2:23","type":"","value":"38"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"32919:58:23"},"nodeType":"YulFunctionCall","src":"32919:67:23"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"32912:3:23"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"33084:3:23"}],"functionName":{"name":"store_literal_in_memory_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19","nodeType":"YulIdentifier","src":"32995:88:23"},"nodeType":"YulFunctionCall","src":"32995:93:23"},"nodeType":"YulExpressionStatement","src":"32995:93:23"},{"nodeType":"YulAssignment","src":"33097:19:23","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"33108:3:23"},{"kind":"number","nodeType":"YulLiteral","src":"33113:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33104:3:23"},"nodeType":"YulFunctionCall","src":"33104:12:23"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"33097:3:23"}]}]},"name":"abi_encode_t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"32890:3:23","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"32898:3:23","type":""}],"src":"32756:366:23"},{"body":{"nodeType":"YulBlock","src":"33299:248:23","statements":[{"nodeType":"YulAssignment","src":"33309:26:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33321:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"33332:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33317:3:23"},"nodeType":"YulFunctionCall","src":"33317:18:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"33309:4:23"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33356:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"33367:1:23","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33352:3:23"},"nodeType":"YulFunctionCall","src":"33352:17:23"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"33375:4:23"},{"name":"headStart","nodeType":"YulIdentifier","src":"33381:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"33371:3:23"},"nodeType":"YulFunctionCall","src":"33371:20:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"33345:6:23"},"nodeType":"YulFunctionCall","src":"33345:47:23"},"nodeType":"YulExpressionStatement","src":"33345:47:23"},{"nodeType":"YulAssignment","src":"33401:139:23","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"33535:4:23"}],"functionName":{"name":"abi_encode_t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"33409:124:23"},"nodeType":"YulFunctionCall","src":"33409:131:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"33401:4:23"}]}]},"name":"abi_encode_tuple_t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"33279:9:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"33294:4:23","type":""}],"src":"33128:419:23"},{"body":{"nodeType":"YulBlock","src":"33659:76:23","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"33681:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"33689:1:23","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33677:3:23"},"nodeType":"YulFunctionCall","src":"33677:14:23"},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","kind":"string","nodeType":"YulLiteral","src":"33693:34:23","type":"","value":"Ownable: caller is not the owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"33670:6:23"},"nodeType":"YulFunctionCall","src":"33670:58:23"},"nodeType":"YulExpressionStatement","src":"33670:58:23"}]},"name":"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"33651:6:23","type":""}],"src":"33553:182:23"},{"body":{"nodeType":"YulBlock","src":"33887:220:23","statements":[{"nodeType":"YulAssignment","src":"33897:74:23","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"33963:3:23"},{"kind":"number","nodeType":"YulLiteral","src":"33968:2:23","type":"","value":"32"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"33904:58:23"},"nodeType":"YulFunctionCall","src":"33904:67:23"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"33897:3:23"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"34069:3:23"}],"functionName":{"name":"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","nodeType":"YulIdentifier","src":"33980:88:23"},"nodeType":"YulFunctionCall","src":"33980:93:23"},"nodeType":"YulExpressionStatement","src":"33980:93:23"},{"nodeType":"YulAssignment","src":"34082:19:23","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"34093:3:23"},{"kind":"number","nodeType":"YulLiteral","src":"34098:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34089:3:23"},"nodeType":"YulFunctionCall","src":"34089:12:23"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"34082:3:23"}]}]},"name":"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"33875:3:23","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"33883:3:23","type":""}],"src":"33741:366:23"},{"body":{"nodeType":"YulBlock","src":"34284:248:23","statements":[{"nodeType":"YulAssignment","src":"34294:26:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34306:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"34317:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34302:3:23"},"nodeType":"YulFunctionCall","src":"34302:18:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"34294:4:23"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34341:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"34352:1:23","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34337:3:23"},"nodeType":"YulFunctionCall","src":"34337:17:23"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"34360:4:23"},{"name":"headStart","nodeType":"YulIdentifier","src":"34366:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"34356:3:23"},"nodeType":"YulFunctionCall","src":"34356:20:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"34330:6:23"},"nodeType":"YulFunctionCall","src":"34330:47:23"},"nodeType":"YulExpressionStatement","src":"34330:47:23"},{"nodeType":"YulAssignment","src":"34386:139:23","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"34520:4:23"}],"functionName":{"name":"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"34394:124:23"},"nodeType":"YulFunctionCall","src":"34394:131:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"34386:4:23"}]}]},"name":"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"34264:9:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"34279:4:23","type":""}],"src":"34113:419:23"},{"body":{"nodeType":"YulBlock","src":"34644:119:23","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"34666:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"34674:1:23","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34662:3:23"},"nodeType":"YulFunctionCall","src":"34662:14:23"},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2034","kind":"string","nodeType":"YulLiteral","src":"34678:34:23","type":"","value":"SafeCast: value doesn't fit in 4"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"34655:6:23"},"nodeType":"YulFunctionCall","src":"34655:58:23"},"nodeType":"YulExpressionStatement","src":"34655:58:23"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"34734:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"34742:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34730:3:23"},"nodeType":"YulFunctionCall","src":"34730:15:23"},{"hexValue":"382062697473","kind":"string","nodeType":"YulLiteral","src":"34747:8:23","type":"","value":"8 bits"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"34723:6:23"},"nodeType":"YulFunctionCall","src":"34723:33:23"},"nodeType":"YulExpressionStatement","src":"34723:33:23"}]},"name":"store_literal_in_memory_599034f9324dd4e988c6cea5a00a30f53147fec1b01559682f18cd840028f495","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"34636:6:23","type":""}],"src":"34538:225:23"},{"body":{"nodeType":"YulBlock","src":"34915:220:23","statements":[{"nodeType":"YulAssignment","src":"34925:74:23","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"34991:3:23"},{"kind":"number","nodeType":"YulLiteral","src":"34996:2:23","type":"","value":"38"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"34932:58:23"},"nodeType":"YulFunctionCall","src":"34932:67:23"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"34925:3:23"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"35097:3:23"}],"functionName":{"name":"store_literal_in_memory_599034f9324dd4e988c6cea5a00a30f53147fec1b01559682f18cd840028f495","nodeType":"YulIdentifier","src":"35008:88:23"},"nodeType":"YulFunctionCall","src":"35008:93:23"},"nodeType":"YulExpressionStatement","src":"35008:93:23"},{"nodeType":"YulAssignment","src":"35110:19:23","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"35121:3:23"},{"kind":"number","nodeType":"YulLiteral","src":"35126:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35117:3:23"},"nodeType":"YulFunctionCall","src":"35117:12:23"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"35110:3:23"}]}]},"name":"abi_encode_t_stringliteral_599034f9324dd4e988c6cea5a00a30f53147fec1b01559682f18cd840028f495_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"34903:3:23","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"34911:3:23","type":""}],"src":"34769:366:23"},{"body":{"nodeType":"YulBlock","src":"35312:248:23","statements":[{"nodeType":"YulAssignment","src":"35322:26:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"35334:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"35345:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35330:3:23"},"nodeType":"YulFunctionCall","src":"35330:18:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"35322:4:23"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"35369:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"35380:1:23","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35365:3:23"},"nodeType":"YulFunctionCall","src":"35365:17:23"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"35388:4:23"},{"name":"headStart","nodeType":"YulIdentifier","src":"35394:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"35384:3:23"},"nodeType":"YulFunctionCall","src":"35384:20:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"35358:6:23"},"nodeType":"YulFunctionCall","src":"35358:47:23"},"nodeType":"YulExpressionStatement","src":"35358:47:23"},{"nodeType":"YulAssignment","src":"35414:139:23","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"35548:4:23"}],"functionName":{"name":"abi_encode_t_stringliteral_599034f9324dd4e988c6cea5a00a30f53147fec1b01559682f18cd840028f495_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"35422:124:23"},"nodeType":"YulFunctionCall","src":"35422:131:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"35414:4:23"}]}]},"name":"abi_encode_tuple_t_stringliteral_599034f9324dd4e988c6cea5a00a30f53147fec1b01559682f18cd840028f495__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"35292:9:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"35307:4:23","type":""}],"src":"35141:419:23"},{"body":{"nodeType":"YulBlock","src":"35776:454:23","statements":[{"nodeType":"YulAssignment","src":"35786:27:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"35798:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"35809:3:23","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35794:3:23"},"nodeType":"YulFunctionCall","src":"35794:19:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"35786:4:23"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"35867:6:23"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"35880:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"35891:1:23","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35876:3:23"},"nodeType":"YulFunctionCall","src":"35876:17:23"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"35823:43:23"},"nodeType":"YulFunctionCall","src":"35823:71:23"},"nodeType":"YulExpressionStatement","src":"35823:71:23"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"35948:6:23"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"35961:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"35972:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35957:3:23"},"nodeType":"YulFunctionCall","src":"35957:18:23"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"35904:43:23"},"nodeType":"YulFunctionCall","src":"35904:72:23"},"nodeType":"YulExpressionStatement","src":"35904:72:23"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"36030:6:23"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"36043:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"36054:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36039:3:23"},"nodeType":"YulFunctionCall","src":"36039:18:23"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"35986:43:23"},"nodeType":"YulFunctionCall","src":"35986:72:23"},"nodeType":"YulExpressionStatement","src":"35986:72:23"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"36112:6:23"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"36125:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"36136:2:23","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36121:3:23"},"nodeType":"YulFunctionCall","src":"36121:18:23"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"36068:43:23"},"nodeType":"YulFunctionCall","src":"36068:72:23"},"nodeType":"YulExpressionStatement","src":"36068:72:23"},{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"36194:6:23"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"36207:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"36218:3:23","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36203:3:23"},"nodeType":"YulFunctionCall","src":"36203:19:23"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"36150:43:23"},"nodeType":"YulFunctionCall","src":"36150:73:23"},"nodeType":"YulExpressionStatement","src":"36150:73:23"}]},"name":"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"35716:9:23","type":""},{"name":"value4","nodeType":"YulTypedName","src":"35728:6:23","type":""},{"name":"value3","nodeType":"YulTypedName","src":"35736:6:23","type":""},{"name":"value2","nodeType":"YulTypedName","src":"35744:6:23","type":""},{"name":"value1","nodeType":"YulTypedName","src":"35752:6:23","type":""},{"name":"value0","nodeType":"YulTypedName","src":"35760:6:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"35771:4:23","type":""}],"src":"35566:664:23"},{"body":{"nodeType":"YulBlock","src":"36264:152:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"36281:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"36284:77:23","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"36274:6:23"},"nodeType":"YulFunctionCall","src":"36274:88:23"},"nodeType":"YulExpressionStatement","src":"36274:88:23"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"36378:1:23","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"36381:4:23","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"36371:6:23"},"nodeType":"YulFunctionCall","src":"36371:15:23"},"nodeType":"YulExpressionStatement","src":"36371:15:23"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"36402:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"36405:4:23","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"36395:6:23"},"nodeType":"YulFunctionCall","src":"36395:15:23"},"nodeType":"YulExpressionStatement","src":"36395:15:23"}]},"name":"panic_error_0x12","nodeType":"YulFunctionDefinition","src":"36236:180:23"},{"body":{"nodeType":"YulBlock","src":"36464:143:23","statements":[{"nodeType":"YulAssignment","src":"36474:25:23","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"36497:1:23"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"36479:17:23"},"nodeType":"YulFunctionCall","src":"36479:20:23"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"36474:1:23"}]},{"nodeType":"YulAssignment","src":"36508:25:23","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"36531:1:23"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"36513:17:23"},"nodeType":"YulFunctionCall","src":"36513:20:23"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"36508:1:23"}]},{"body":{"nodeType":"YulBlock","src":"36555:22:23","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x12","nodeType":"YulIdentifier","src":"36557:16:23"},"nodeType":"YulFunctionCall","src":"36557:18:23"},"nodeType":"YulExpressionStatement","src":"36557:18:23"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"36552:1:23"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"36545:6:23"},"nodeType":"YulFunctionCall","src":"36545:9:23"},"nodeType":"YulIf","src":"36542:35:23"},{"nodeType":"YulAssignment","src":"36587:14:23","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"36596:1:23"},{"name":"y","nodeType":"YulIdentifier","src":"36599:1:23"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"36592:3:23"},"nodeType":"YulFunctionCall","src":"36592:9:23"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"36587:1:23"}]}]},"name":"checked_div_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"36453:1:23","type":""},{"name":"y","nodeType":"YulTypedName","src":"36456:1:23","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"36462:1:23","type":""}],"src":"36422:185:23"},{"body":{"nodeType":"YulBlock","src":"36739:206:23","statements":[{"nodeType":"YulAssignment","src":"36749:26:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"36761:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"36772:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36757:3:23"},"nodeType":"YulFunctionCall","src":"36757:18:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"36749:4:23"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"36829:6:23"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"36842:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"36853:1:23","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36838:3:23"},"nodeType":"YulFunctionCall","src":"36838:17:23"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"36785:43:23"},"nodeType":"YulFunctionCall","src":"36785:71:23"},"nodeType":"YulExpressionStatement","src":"36785:71:23"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"36910:6:23"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"36923:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"36934:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36919:3:23"},"nodeType":"YulFunctionCall","src":"36919:18:23"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"36866:43:23"},"nodeType":"YulFunctionCall","src":"36866:72:23"},"nodeType":"YulExpressionStatement","src":"36866:72:23"}]},"name":"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"36703:9:23","type":""},{"name":"value1","nodeType":"YulTypedName","src":"36715:6:23","type":""},{"name":"value0","nodeType":"YulTypedName","src":"36723:6:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"36734:4:23","type":""}],"src":"36613:332:23"},{"body":{"nodeType":"YulBlock","src":"37129:367:23","statements":[{"nodeType":"YulAssignment","src":"37139:27:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"37151:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"37162:3:23","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37147:3:23"},"nodeType":"YulFunctionCall","src":"37147:19:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"37139:4:23"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"37220:6:23"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"37233:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"37244:1:23","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37229:3:23"},"nodeType":"YulFunctionCall","src":"37229:17:23"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"37176:43:23"},"nodeType":"YulFunctionCall","src":"37176:71:23"},"nodeType":"YulExpressionStatement","src":"37176:71:23"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"37297:6:23"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"37310:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"37321:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37306:3:23"},"nodeType":"YulFunctionCall","src":"37306:18:23"}],"functionName":{"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulIdentifier","src":"37257:39:23"},"nodeType":"YulFunctionCall","src":"37257:68:23"},"nodeType":"YulExpressionStatement","src":"37257:68:23"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"37379:6:23"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"37392:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"37403:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37388:3:23"},"nodeType":"YulFunctionCall","src":"37388:18:23"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"37335:43:23"},"nodeType":"YulFunctionCall","src":"37335:72:23"},"nodeType":"YulExpressionStatement","src":"37335:72:23"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"37461:6:23"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"37474:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"37485:2:23","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37470:3:23"},"nodeType":"YulFunctionCall","src":"37470:18:23"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"37417:43:23"},"nodeType":"YulFunctionCall","src":"37417:72:23"},"nodeType":"YulExpressionStatement","src":"37417:72:23"}]},"name":"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"37077:9:23","type":""},{"name":"value3","nodeType":"YulTypedName","src":"37089:6:23","type":""},{"name":"value2","nodeType":"YulTypedName","src":"37097:6:23","type":""},{"name":"value1","nodeType":"YulTypedName","src":"37105:6:23","type":""},{"name":"value0","nodeType":"YulTypedName","src":"37113:6:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"37124:4:23","type":""}],"src":"36951:545:23"},{"body":{"nodeType":"YulBlock","src":"37530:152:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"37547:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"37550:77:23","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"37540:6:23"},"nodeType":"YulFunctionCall","src":"37540:88:23"},"nodeType":"YulExpressionStatement","src":"37540:88:23"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"37644:1:23","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"37647:4:23","type":"","value":"0x21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"37637:6:23"},"nodeType":"YulFunctionCall","src":"37637:15:23"},"nodeType":"YulExpressionStatement","src":"37637:15:23"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"37668:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"37671:4:23","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"37661:6:23"},"nodeType":"YulFunctionCall","src":"37661:15:23"},"nodeType":"YulExpressionStatement","src":"37661:15:23"}]},"name":"panic_error_0x21","nodeType":"YulFunctionDefinition","src":"37502:180:23"},{"body":{"nodeType":"YulBlock","src":"37794:68:23","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"37816:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"37824:1:23","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37812:3:23"},"nodeType":"YulFunctionCall","src":"37812:14:23"},{"hexValue":"45434453413a20696e76616c6964207369676e6174757265","kind":"string","nodeType":"YulLiteral","src":"37828:26:23","type":"","value":"ECDSA: invalid signature"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"37805:6:23"},"nodeType":"YulFunctionCall","src":"37805:50:23"},"nodeType":"YulExpressionStatement","src":"37805:50:23"}]},"name":"store_literal_in_memory_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"37786:6:23","type":""}],"src":"37688:174:23"},{"body":{"nodeType":"YulBlock","src":"38014:220:23","statements":[{"nodeType":"YulAssignment","src":"38024:74:23","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"38090:3:23"},{"kind":"number","nodeType":"YulLiteral","src":"38095:2:23","type":"","value":"24"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"38031:58:23"},"nodeType":"YulFunctionCall","src":"38031:67:23"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"38024:3:23"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"38196:3:23"}],"functionName":{"name":"store_literal_in_memory_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be","nodeType":"YulIdentifier","src":"38107:88:23"},"nodeType":"YulFunctionCall","src":"38107:93:23"},"nodeType":"YulExpressionStatement","src":"38107:93:23"},{"nodeType":"YulAssignment","src":"38209:19:23","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"38220:3:23"},{"kind":"number","nodeType":"YulLiteral","src":"38225:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38216:3:23"},"nodeType":"YulFunctionCall","src":"38216:12:23"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"38209:3:23"}]}]},"name":"abi_encode_t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"38002:3:23","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"38010:3:23","type":""}],"src":"37868:366:23"},{"body":{"nodeType":"YulBlock","src":"38411:248:23","statements":[{"nodeType":"YulAssignment","src":"38421:26:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"38433:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"38444:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38429:3:23"},"nodeType":"YulFunctionCall","src":"38429:18:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"38421:4:23"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"38468:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"38479:1:23","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38464:3:23"},"nodeType":"YulFunctionCall","src":"38464:17:23"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"38487:4:23"},{"name":"headStart","nodeType":"YulIdentifier","src":"38493:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"38483:3:23"},"nodeType":"YulFunctionCall","src":"38483:20:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"38457:6:23"},"nodeType":"YulFunctionCall","src":"38457:47:23"},"nodeType":"YulExpressionStatement","src":"38457:47:23"},{"nodeType":"YulAssignment","src":"38513:139:23","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"38647:4:23"}],"functionName":{"name":"abi_encode_t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"38521:124:23"},"nodeType":"YulFunctionCall","src":"38521:131:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"38513:4:23"}]}]},"name":"abi_encode_tuple_t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"38391:9:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"38406:4:23","type":""}],"src":"38240:419:23"},{"body":{"nodeType":"YulBlock","src":"38771:75:23","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"38793:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"38801:1:23","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38789:3:23"},"nodeType":"YulFunctionCall","src":"38789:14:23"},{"hexValue":"45434453413a20696e76616c6964207369676e6174757265206c656e677468","kind":"string","nodeType":"YulLiteral","src":"38805:33:23","type":"","value":"ECDSA: invalid signature length"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"38782:6:23"},"nodeType":"YulFunctionCall","src":"38782:57:23"},"nodeType":"YulExpressionStatement","src":"38782:57:23"}]},"name":"store_literal_in_memory_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"38763:6:23","type":""}],"src":"38665:181:23"},{"body":{"nodeType":"YulBlock","src":"38998:220:23","statements":[{"nodeType":"YulAssignment","src":"39008:74:23","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"39074:3:23"},{"kind":"number","nodeType":"YulLiteral","src":"39079:2:23","type":"","value":"31"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"39015:58:23"},"nodeType":"YulFunctionCall","src":"39015:67:23"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"39008:3:23"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"39180:3:23"}],"functionName":{"name":"store_literal_in_memory_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77","nodeType":"YulIdentifier","src":"39091:88:23"},"nodeType":"YulFunctionCall","src":"39091:93:23"},"nodeType":"YulExpressionStatement","src":"39091:93:23"},{"nodeType":"YulAssignment","src":"39193:19:23","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"39204:3:23"},{"kind":"number","nodeType":"YulLiteral","src":"39209:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39200:3:23"},"nodeType":"YulFunctionCall","src":"39200:12:23"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"39193:3:23"}]}]},"name":"abi_encode_t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"38986:3:23","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"38994:3:23","type":""}],"src":"38852:366:23"},{"body":{"nodeType":"YulBlock","src":"39395:248:23","statements":[{"nodeType":"YulAssignment","src":"39405:26:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"39417:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"39428:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39413:3:23"},"nodeType":"YulFunctionCall","src":"39413:18:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"39405:4:23"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"39452:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"39463:1:23","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39448:3:23"},"nodeType":"YulFunctionCall","src":"39448:17:23"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"39471:4:23"},{"name":"headStart","nodeType":"YulIdentifier","src":"39477:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"39467:3:23"},"nodeType":"YulFunctionCall","src":"39467:20:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"39441:6:23"},"nodeType":"YulFunctionCall","src":"39441:47:23"},"nodeType":"YulExpressionStatement","src":"39441:47:23"},{"nodeType":"YulAssignment","src":"39497:139:23","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"39631:4:23"}],"functionName":{"name":"abi_encode_t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"39505:124:23"},"nodeType":"YulFunctionCall","src":"39505:131:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"39497:4:23"}]}]},"name":"abi_encode_tuple_t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"39375:9:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"39390:4:23","type":""}],"src":"39224:419:23"},{"body":{"nodeType":"YulBlock","src":"39755:115:23","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"39777:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"39785:1:23","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39773:3:23"},"nodeType":"YulFunctionCall","src":"39773:14:23"},{"hexValue":"45434453413a20696e76616c6964207369676e6174757265202773272076616c","kind":"string","nodeType":"YulLiteral","src":"39789:34:23","type":"","value":"ECDSA: invalid signature 's' val"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"39766:6:23"},"nodeType":"YulFunctionCall","src":"39766:58:23"},"nodeType":"YulExpressionStatement","src":"39766:58:23"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"39845:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"39853:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39841:3:23"},"nodeType":"YulFunctionCall","src":"39841:15:23"},{"hexValue":"7565","kind":"string","nodeType":"YulLiteral","src":"39858:4:23","type":"","value":"ue"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"39834:6:23"},"nodeType":"YulFunctionCall","src":"39834:29:23"},"nodeType":"YulExpressionStatement","src":"39834:29:23"}]},"name":"store_literal_in_memory_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"39747:6:23","type":""}],"src":"39649:221:23"},{"body":{"nodeType":"YulBlock","src":"40022:220:23","statements":[{"nodeType":"YulAssignment","src":"40032:74:23","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"40098:3:23"},{"kind":"number","nodeType":"YulLiteral","src":"40103:2:23","type":"","value":"34"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"40039:58:23"},"nodeType":"YulFunctionCall","src":"40039:67:23"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"40032:3:23"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"40204:3:23"}],"functionName":{"name":"store_literal_in_memory_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd","nodeType":"YulIdentifier","src":"40115:88:23"},"nodeType":"YulFunctionCall","src":"40115:93:23"},"nodeType":"YulExpressionStatement","src":"40115:93:23"},{"nodeType":"YulAssignment","src":"40217:19:23","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"40228:3:23"},{"kind":"number","nodeType":"YulLiteral","src":"40233:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40224:3:23"},"nodeType":"YulFunctionCall","src":"40224:12:23"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"40217:3:23"}]}]},"name":"abi_encode_t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"40010:3:23","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"40018:3:23","type":""}],"src":"39876:366:23"},{"body":{"nodeType":"YulBlock","src":"40419:248:23","statements":[{"nodeType":"YulAssignment","src":"40429:26:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"40441:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"40452:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40437:3:23"},"nodeType":"YulFunctionCall","src":"40437:18:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"40429:4:23"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"40476:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"40487:1:23","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40472:3:23"},"nodeType":"YulFunctionCall","src":"40472:17:23"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"40495:4:23"},{"name":"headStart","nodeType":"YulIdentifier","src":"40501:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"40491:3:23"},"nodeType":"YulFunctionCall","src":"40491:20:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"40465:6:23"},"nodeType":"YulFunctionCall","src":"40465:47:23"},"nodeType":"YulExpressionStatement","src":"40465:47:23"},{"nodeType":"YulAssignment","src":"40521:139:23","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"40655:4:23"}],"functionName":{"name":"abi_encode_t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"40529:124:23"},"nodeType":"YulFunctionCall","src":"40529:131:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"40521:4:23"}]}]},"name":"abi_encode_tuple_t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"40399:9:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"40414:4:23","type":""}],"src":"40248:419:23"},{"body":{"nodeType":"YulBlock","src":"40779:120:23","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"40801:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"40809:1:23","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40797:3:23"},"nodeType":"YulFunctionCall","src":"40797:14:23"},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2032","kind":"string","nodeType":"YulLiteral","src":"40813:34:23","type":"","value":"SafeCast: value doesn't fit in 2"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"40790:6:23"},"nodeType":"YulFunctionCall","src":"40790:58:23"},"nodeType":"YulExpressionStatement","src":"40790:58:23"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"40869:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"40877:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40865:3:23"},"nodeType":"YulFunctionCall","src":"40865:15:23"},{"hexValue":"32342062697473","kind":"string","nodeType":"YulLiteral","src":"40882:9:23","type":"","value":"24 bits"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"40858:6:23"},"nodeType":"YulFunctionCall","src":"40858:34:23"},"nodeType":"YulExpressionStatement","src":"40858:34:23"}]},"name":"store_literal_in_memory_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"40771:6:23","type":""}],"src":"40673:226:23"},{"body":{"nodeType":"YulBlock","src":"41051:220:23","statements":[{"nodeType":"YulAssignment","src":"41061:74:23","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"41127:3:23"},{"kind":"number","nodeType":"YulLiteral","src":"41132:2:23","type":"","value":"39"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"41068:58:23"},"nodeType":"YulFunctionCall","src":"41068:67:23"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"41061:3:23"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"41233:3:23"}],"functionName":{"name":"store_literal_in_memory_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79","nodeType":"YulIdentifier","src":"41144:88:23"},"nodeType":"YulFunctionCall","src":"41144:93:23"},"nodeType":"YulExpressionStatement","src":"41144:93:23"},{"nodeType":"YulAssignment","src":"41246:19:23","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"41257:3:23"},{"kind":"number","nodeType":"YulLiteral","src":"41262:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"41253:3:23"},"nodeType":"YulFunctionCall","src":"41253:12:23"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"41246:3:23"}]}]},"name":"abi_encode_t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"41039:3:23","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"41047:3:23","type":""}],"src":"40905:366:23"},{"body":{"nodeType":"YulBlock","src":"41448:248:23","statements":[{"nodeType":"YulAssignment","src":"41458:26:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"41470:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"41481:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"41466:3:23"},"nodeType":"YulFunctionCall","src":"41466:18:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"41458:4:23"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"41505:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"41516:1:23","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"41501:3:23"},"nodeType":"YulFunctionCall","src":"41501:17:23"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"41524:4:23"},{"name":"headStart","nodeType":"YulIdentifier","src":"41530:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"41520:3:23"},"nodeType":"YulFunctionCall","src":"41520:20:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"41494:6:23"},"nodeType":"YulFunctionCall","src":"41494:47:23"},"nodeType":"YulExpressionStatement","src":"41494:47:23"},{"nodeType":"YulAssignment","src":"41550:139:23","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"41684:4:23"}],"functionName":{"name":"abi_encode_t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"41558:124:23"},"nodeType":"YulFunctionCall","src":"41558:131:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"41550:4:23"}]}]},"name":"abi_encode_tuple_t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"41428:9:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"41443:4:23","type":""}],"src":"41277:419:23"}]},"contents":"{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint32(value) -> cleaned {\n        cleaned := and(value, 0xffffffff)\n    }\n\n    function abi_encode_t_uint32_to_t_uint32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint32(value))\n    }\n\n    function abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint32_to_t_uint32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bytes1(value) -> cleaned {\n        cleaned := and(value, 0xff00000000000000000000000000000000000000000000000000000000000000)\n    }\n\n    function abi_encode_t_bytes1_to_t_bytes1_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes1(value))\n    }\n\n    function array_length_t_array$_t_uint256_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encodeUpdatedPos_t_uint256_to_t_uint256(value0, pos) -> updatedPos {\n        abi_encode_t_uint256_to_t_uint256(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // uint256[] -> uint256[]\n    function abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_uint256_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_uint256_to_t_uint256(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__to_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart , value6, value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 224)\n\n        abi_encode_t_bytes1_to_t_bytes1_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value1,  tail)\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value2,  tail)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_address_to_t_address_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value5,  add(headStart, 160))\n\n        mstore(add(headStart, 192), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value6,  tail)\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint48(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffff)\n    }\n\n    function abi_encode_t_uint48_to_t_uint48_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint48(value))\n    }\n\n    function abi_encode_tuple_t_uint48__to_t_uint48__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint48_to_t_uint48_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_uint8(value) {\n        if iszero(eq(value, cleanup_t_uint8(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint8(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint8(value)\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5 {\n        if slt(sub(dataEnd, headStart), 192) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint8(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 160\n\n            value5 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6 {\n        if slt(sub(dataEnd, headStart), 224) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint8(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 160\n\n            value5 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 192\n\n            value6 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_uint32(value) {\n        if iszero(eq(value, cleanup_t_uint32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint32(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint32(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint32_to_t_uint32(value, pos) {\n        mstore(pos, cleanup_t_uint32(value))\n    }\n\n    function cleanup_t_uint224(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function abi_encode_t_uint224_to_t_uint224(value, pos) {\n        mstore(pos, cleanup_t_uint224(value))\n    }\n\n    // struct ERC20Votes.Checkpoint -> struct ERC20Votes.Checkpoint\n    function abi_encode_t_struct$_Checkpoint_$1093_memory_ptr_to_t_struct$_Checkpoint_$1093_memory_ptr_fromStack(value, pos)  {\n        let tail := add(pos, 0x40)\n\n        {\n            // fromBlock\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_uint32_to_t_uint32(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // votes\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_uint224_to_t_uint224(memberValue0, add(pos, 0x20))\n        }\n\n    }\n\n    function abi_encode_tuple_t_struct$_Checkpoint_$1093_memory_ptr__to_t_struct$_Checkpoint_$1093_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_struct$_Checkpoint_$1093_memory_ptr_to_t_struct$_Checkpoint_$1093_memory_ptr_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_9fb4d8462c9084391e0cf06f1b2a0a5b1a23dc8fede26e3b7b37154948e87a72(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20Votes: future lookup\")\n\n    }\n\n    function abi_encode_t_stringliteral_9fb4d8462c9084391e0cf06f1b2a0a5b1a23dc8fede26e3b7b37154948e87a72_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_9fb4d8462c9084391e0cf06f1b2a0a5b1a23dc8fede26e3b7b37154948e87a72(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9fb4d8462c9084391e0cf06f1b2a0a5b1a23dc8fede26e3b7b37154948e87a72__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9fb4d8462c9084391e0cf06f1b2a0a5b1a23dc8fede26e3b7b37154948e87a72_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_d8b645ec611d4ec3e2023618b4603d577ce189d5bc833b5325ebd41cfe74f8df(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20Votes: broken clock mode\")\n\n    }\n\n    function abi_encode_t_stringliteral_d8b645ec611d4ec3e2023618b4603d577ce189d5bc833b5325ebd41cfe74f8df_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_d8b645ec611d4ec3e2023618b4603d577ce189d5bc833b5325ebd41cfe74f8df(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d8b645ec611d4ec3e2023618b4603d577ce189d5bc833b5325ebd41cfe74f8df__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d8b645ec611d4ec3e2023618b4603d577ce189d5bc833b5325ebd41cfe74f8df_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: decreased allowance below\")\n\n        mstore(add(memPtr, 32), \" zero\")\n\n    }\n\n    function abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_136d0f69bc85a5c125b5cc368e2880ebdb3c89d4d9828f6476431c386ea60257(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20Votes: signature expired\")\n\n    }\n\n    function abi_encode_t_stringliteral_136d0f69bc85a5c125b5cc368e2880ebdb3c89d4d9828f6476431c386ea60257_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_136d0f69bc85a5c125b5cc368e2880ebdb3c89d4d9828f6476431c386ea60257(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_136d0f69bc85a5c125b5cc368e2880ebdb3c89d4d9828f6476431c386ea60257__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_136d0f69bc85a5c125b5cc368e2880ebdb3c89d4d9828f6476431c386ea60257_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_bytes32_t_address_t_uint256_t_uint256__to_t_bytes32_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function store_literal_in_memory_1a23b43d95073d55a7380117ca03cace60cd22fee15d5cb140d51e46236e6872(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20Votes: invalid nonce\")\n\n    }\n\n    function abi_encode_t_stringliteral_1a23b43d95073d55a7380117ca03cace60cd22fee15d5cb140d51e46236e6872_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_1a23b43d95073d55a7380117ca03cace60cd22fee15d5cb140d51e46236e6872(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1a23b43d95073d55a7380117ca03cace60cd22fee15d5cb140d51e46236e6872__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1a23b43d95073d55a7380117ca03cace60cd22fee15d5cb140d51e46236e6872_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_3e89525a63fb9c966b61cf8f5305156de8420bc773a2b60828a2f32c3c5797bd(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20Permit: expired deadline\")\n\n    }\n\n    function abi_encode_t_stringliteral_3e89525a63fb9c966b61cf8f5305156de8420bc773a2b60828a2f32c3c5797bd_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_3e89525a63fb9c966b61cf8f5305156de8420bc773a2b60828a2f32c3c5797bd(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3e89525a63fb9c966b61cf8f5305156de8420bc773a2b60828a2f32c3c5797bd__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3e89525a63fb9c966b61cf8f5305156de8420bc773a2b60828a2f32c3c5797bd_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 192)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value5,  add(headStart, 160))\n\n    }\n\n    function store_literal_in_memory_94ca1ab58dfda790a1782ffbb0c0a140ec51d4148dbeecc6c39e37b25ff4b124(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20Permit: invalid signature\")\n\n    }\n\n    function abi_encode_t_stringliteral_94ca1ab58dfda790a1782ffbb0c0a140ec51d4148dbeecc6c39e37b25ff4b124_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 30)\n        store_literal_in_memory_94ca1ab58dfda790a1782ffbb0c0a140ec51d4148dbeecc6c39e37b25ff4b124(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_94ca1ab58dfda790a1782ffbb0c0a140ec51d4148dbeecc6c39e37b25ff4b124__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_94ca1ab58dfda790a1782ffbb0c0a140ec51d4148dbeecc6c39e37b25ff4b124_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: approve from the zero add\")\n\n        mstore(add(memPtr, 32), \"ress\")\n\n    }\n\n    function abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: approve to the zero addre\")\n\n        mstore(add(memPtr, 32), \"ss\")\n\n    }\n\n    function abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: insufficient allowance\")\n\n    }\n\n    function abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer from the zero ad\")\n\n        mstore(add(memPtr, 32), \"dress\")\n\n    }\n\n    function abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer to the zero addr\")\n\n        mstore(add(memPtr, 32), \"ess\")\n\n    }\n\n    function abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 35)\n        store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer amount exceeds b\")\n\n        mstore(add(memPtr, 32), \"alance\")\n\n    }\n\n    function abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19(memPtr) {\n\n        mstore(add(memPtr, 0), \"SafeCast: value doesn't fit in 3\")\n\n        mstore(add(memPtr, 32), \"2 bits\")\n\n    }\n\n    function abi_encode_t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_599034f9324dd4e988c6cea5a00a30f53147fec1b01559682f18cd840028f495(memPtr) {\n\n        mstore(add(memPtr, 0), \"SafeCast: value doesn't fit in 4\")\n\n        mstore(add(memPtr, 32), \"8 bits\")\n\n    }\n\n    function abi_encode_t_stringliteral_599034f9324dd4e988c6cea5a00a30f53147fec1b01559682f18cd840028f495_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_599034f9324dd4e988c6cea5a00a30f53147fec1b01559682f18cd840028f495(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_599034f9324dd4e988c6cea5a00a30f53147fec1b01559682f18cd840028f495__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_599034f9324dd4e988c6cea5a00a30f53147fec1b01559682f18cd840028f495_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_address_to_t_address_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n    function store_literal_in_memory_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be(memPtr) {\n\n        mstore(add(memPtr, 0), \"ECDSA: invalid signature\")\n\n    }\n\n    function abi_encode_t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77(memPtr) {\n\n        mstore(add(memPtr, 0), \"ECDSA: invalid signature length\")\n\n    }\n\n    function abi_encode_t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd(memPtr) {\n\n        mstore(add(memPtr, 0), \"ECDSA: invalid signature 's' val\")\n\n        mstore(add(memPtr, 32), \"ue\")\n\n    }\n\n    function abi_encode_t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79(memPtr) {\n\n        mstore(add(memPtr, 0), \"SafeCast: value doesn't fit in 2\")\n\n        mstore(add(memPtr, 32), \"24 bits\")\n\n    }\n\n    function abi_encode_t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 39)\n        store_literal_in_memory_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n","id":23,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"2908":[{"length":32,"start":6041}],"2910":[{"length":32,"start":6000}],"2912":[{"length":32,"start":5914}],"2914":[{"length":32,"start":7606}],"2916":[{"length":32,"start":7639}],"2919":[{"length":32,"start":2549}],"2922":[{"length":32,"start":2601}]},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106101c45760003560e01c80637ecebe00116100f9578063a457c2d711610097578063d505accf11610071578063d505accf1461055f578063dd62ed3e1461057b578063f1127ed8146105ab578063f2fde38b146105db576101c4565b8063a457c2d7146104e3578063a9059cbb14610513578063c3cda52014610543576101c4565b80638e539e8c116100d35780638e539e8c1461044757806391ddadf41461047757806395d89b41146104955780639ab24eb0146104b3576101c4565b80637ecebe00146103d557806384b0196e146104055780638da5cb5b14610429576101c4565b80633a46b1a8116101665780635c19a95c116101405780635c19a95c1461034f5780636fcfff451461036b57806370a082311461039b578063715018a6146103cb576101c4565b80633a46b1a8146102d15780634bf5d7e914610301578063587cde1e1461031f576101c4565b806323b872dd116101a257806323b872dd14610235578063313ce567146102655780633644e5151461028357806339509351146102a1576101c4565b806306fdde03146101c9578063095ea7b3146101e757806318160ddd14610217575b600080fd5b6101d16105f7565b6040516101de91906129f5565b60405180910390f35b61020160048036038101906101fc9190612ab0565b610689565b60405161020e9190612b0b565b60405180910390f35b61021f6106ac565b60405161022c9190612b35565b60405180910390f35b61024f600480360381019061024a9190612b50565b6106b6565b60405161025c9190612b0b565b60405180910390f35b61026d6106e5565b60405161027a9190612bbf565b60405180910390f35b61028b6106ee565b6040516102989190612bf3565b60405180910390f35b6102bb60048036038101906102b69190612ab0565b6106fd565b6040516102c89190612b0b565b60405180910390f35b6102eb60048036038101906102e69190612ab0565b610734565b6040516102f89190612b35565b60405180910390f35b6103096107d7565b60405161031691906129f5565b60405180910390f35b61033960048036038101906103349190612c0e565b610865565b6040516103469190612c4a565b60405180910390f35b61036960048036038101906103649190612c0e565b6108ce565b005b61038560048036038101906103809190612c0e565b6108e2565b6040516103929190612c84565b60405180910390f35b6103b560048036038101906103b09190612c0e565b610936565b6040516103c29190612b35565b60405180910390f35b6103d361097e565b005b6103ef60048036038101906103ea9190612c0e565b610992565b6040516103fc9190612b35565b60405180910390f35b61040d6109e2565b6040516104209796959493929190612d98565b60405180910390f35b610431610ae4565b60405161043e9190612c4a565b60405180910390f35b610461600480360381019061045c9190612e1c565b610b0e565b60405161046e9190612b35565b60405180910390f35b61047f610b73565b60405161048c9190612e6a565b60405180910390f35b61049d610b83565b6040516104aa91906129f5565b60405180910390f35b6104cd60048036038101906104c89190612c0e565b610c15565b6040516104da9190612b35565b60405180910390f35b6104fd60048036038101906104f89190612ab0565b610d1d565b60405161050a9190612b0b565b60405180910390f35b61052d60048036038101906105289190612ab0565b610d94565b60405161053a9190612b0b565b60405180910390f35b61055d60048036038101906105589190612edd565b610db7565b005b61057960048036038101906105749190612f6a565b610ebb565b005b6105956004803603810190610590919061300c565b610ffd565b6040516105a29190612b35565b60405180910390f35b6105c560048036038101906105c09190613078565b611084565b6040516105d2919061312d565b60405180910390f35b6105f560048036038101906105f09190612c0e565b611194565b005b60606003805461060690613177565b80601f016020809104026020016040519081016040528092919081815260200182805461063290613177565b801561067f5780601f106106545761010080835404028352916020019161067f565b820191906000526020600020905b81548152906001019060200180831161066257829003601f168201915b5050505050905090565b600080610694611243565b90506106a181858561124b565b600191505092915050565b6000600254905090565b6000806106c1611243565b90506106ce858285611414565b6106d98585856114a0565b60019150509392505050565b60006012905090565b60006106f8611716565b905090565b600080610708611243565b905061072981858561071a8589610ffd565b61072491906131d7565b61124b565b600191505092915050565b600061073e610b73565b65ffffffffffff168210610787576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161077e90613257565b60405180910390fd5b6107cf600a60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020836117cd565b905092915050565b6060436107e2610b73565b65ffffffffffff161461082a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610821906132c3565b60405180910390fd5b6040518060400160405280601d81526020017f6d6f64653d626c6f636b6e756d6265722666726f6d3d64656661756c74000000815250905090565b6000600960008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6108df6108d9611243565b82611915565b50565b600061092f600a60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080549050611a2f565b9050919050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b610986611a82565b6109906000611b00565b565b60006109db600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020611bc6565b9050919050565b600060608060008060006060610a2260057f0000000000000000000000000000000000000000000000000000000000000000611bd490919063ffffffff16565b610a5660067f0000000000000000000000000000000000000000000000000000000000000000611bd490919063ffffffff16565b46306000801b600067ffffffffffffffff811115610a7757610a766132e3565b5b604051908082528060200260200182016040528015610aa55781602001602082028036833780820191505090505b507f0f00000000000000000000000000000000000000000000000000000000000000959493929190965096509650965096509650965090919293949596565b6000600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000610b18610b73565b65ffffffffffff168210610b61576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b5890613257565b60405180910390fd5b610b6c600b836117cd565b9050919050565b6000610b7e43611c84565b905090565b606060048054610b9290613177565b80601f0160208091040260200160405190810160405280929190818152602001828054610bbe90613177565b8015610c0b5780601f10610be057610100808354040283529160200191610c0b565b820191906000526020600020905b815481529060010190602001808311610bee57829003601f168201915b5050505050905090565b600080600a60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080549050905060008114610cf457600a60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001820381548110610cb957610cb8613312565b5b9060005260206000200160000160049054906101000a90047bffffffffffffffffffffffffffffffffffffffffffffffffffffffff16610cf7565b60005b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff16915050919050565b600080610d28611243565b90506000610d368286610ffd565b905083811015610d7b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d72906133b3565b60405180910390fd5b610d88828686840361124b565b60019250505092915050565b600080610d9f611243565b9050610dac8185856114a0565b600191505092915050565b83421115610dfa576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610df19061341f565b60405180910390fd5b6000610e5c610e547fe48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf898989604051602001610e39949392919061343f565b60405160208183030381529060405280519060200120611cd9565b858585611cf3565b9050610e6781611d1e565b8614610ea8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e9f906134d0565b60405180910390fd5b610eb28188611915565b50505050505050565b83421115610efe576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ef59061353c565b60405180910390fd5b60007f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9888888610f2d8c611d1e565b89604051602001610f439695949392919061355c565b6040516020818303038152906040528051906020012090506000610f6682611cd9565b90506000610f7682878787611cf3565b90508973ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610fe6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fdd90613609565b60405180910390fd5b610ff18a8a8a61124b565b50505050505050505050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b61108c612927565b600a60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208263ffffffff16815481106110e3576110e2613312565b5b906000526020600020016040518060400160405290816000820160009054906101000a900463ffffffff1663ffffffff1663ffffffff1681526020016000820160049054906101000a90047bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1681525050905092915050565b61119c611a82565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361120b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112029061369b565b60405180910390fd5b61121481611b00565b50565b6000818361122591906131d7565b905092915050565b6000818361123b91906136bb565b905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036112ba576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112b190613761565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611329576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611320906137f3565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516114079190612b35565b60405180910390a3505050565b60006114208484610ffd565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811461149a578181101561148c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114839061385f565b60405180910390fd5b611499848484840361124b565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361150f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611506906138f1565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361157e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161157590613983565b60405180910390fd5b611589838383611d7c565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508181101561160f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161160690613a15565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516116fd9190612b35565b60405180910390a3611710848484611d81565b50505050565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff1614801561179257507f000000000000000000000000000000000000000000000000000000000000000046145b156117bf577f000000000000000000000000000000000000000000000000000000000000000090506117ca565b6117c7611d91565b90505b90565b6000808380549050905060008082905060058311156118435760006117f184611e27565b846117fc91906136bb565b9050856118098883611f20565b60000160009054906101000a900463ffffffff1663ffffffff16111561183157809150611841565b60018161183e91906131d7565b92505b505b5b808210156118a35760006118588383611f35565b9050856118658883611f20565b60000160009054906101000a900463ffffffff1663ffffffff16111561188d5780915061189d565b60018161189a91906131d7565b92505b50611844565b600081146118e9576118b88660018303611f20565b60000160049054906101000a90047bffffffffffffffffffffffffffffffffffffffffffffffffffffffff166118ec565b60005b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff16935050505092915050565b600061192083610865565b9050600061192d84610936565b905082600960008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508273ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167f3134e8a2e6d97e929a7e54011ea5485d7d196dd5f0ba4d4ef95803e8e3fc257f60405160405180910390a4611a29828483611f5b565b50505050565b600063ffffffff8016821115611a7a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a7190613aa7565b60405180910390fd5b819050919050565b611a8a611243565b73ffffffffffffffffffffffffffffffffffffffff16611aa8610ae4565b73ffffffffffffffffffffffffffffffffffffffff1614611afe576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611af590613b13565b60405180910390fd5b565b6000600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600c60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600081600001549050919050565b606060ff60001b8314611bf157611bea83612154565b9050611c7e565b818054611bfd90613177565b80601f0160208091040260200160405190810160405280929190818152602001828054611c2990613177565b8015611c765780601f10611c4b57610100808354040283529160200191611c76565b820191906000526020600020905b815481529060010190602001808311611c5957829003601f168201915b505050505090505b92915050565b600065ffffffffffff8016821115611cd1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611cc890613ba5565b60405180910390fd5b819050919050565b6000611cec611ce6611716565b836121c8565b9050919050565b6000806000611d0487878787612209565b91509150611d11816122eb565b8192505050949350505050565b600080600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050611d6b81611bc6565b9150611d7681612451565b50919050565b505050565b611d8c838383612467565b505050565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f7f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000004630604051602001611e0c959493929190613bc5565b60405160208183030381529060405280519060200120905090565b6000808203611e395760009050611f1b565b60006001611e4684612492565b901c6001901b90506001818481611e6057611e5f613c18565b5b048201901c90506001818481611e7957611e78613c18565b5b048201901c90506001818481611e9257611e91613c18565b5b048201901c90506001818481611eab57611eaa613c18565b5b048201901c90506001818481611ec457611ec3613c18565b5b048201901c90506001818481611edd57611edc613c18565b5b048201901c90506001818481611ef657611ef5613c18565b5b048201901c9050611f1781828581611f1157611f10613c18565b5b04612573565b9150505b919050565b60008260005281602060002001905092915050565b60006002828418611f469190613c47565b828416611f5391906131d7565b905092915050565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614158015611f975750600081115b1561214f57600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16146120755760008061201e600a60008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002061122d8561258c565b915091508473ffffffffffffffffffffffffffffffffffffffff167fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a724838360405161206a929190613c78565b60405180910390a250505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161461214e576000806120f7600a60008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206112178561258c565b915091508373ffffffffffffffffffffffffffffffffffffffff167fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a7248383604051612143929190613c78565b60405180910390a250505b5b505050565b6060600061216183612867565b90506000602067ffffffffffffffff8111156121805761217f6132e3565b5b6040519080825280601f01601f1916602001820160405280156121b25781602001600182028036833780820191505090505b5090508181528360208201528092505050919050565b60006040517f190100000000000000000000000000000000000000000000000000000000000081528360028201528260228201526042812091505092915050565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08360001c11156122445760006003915091506122e2565b6000600187878787604051600081526020016040526040516122699493929190613ca1565b6020604051602081039080840390855afa15801561228b573d6000803e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036122d9576000600192509250506122e2565b80600092509250505b94509492505050565b600060048111156122ff576122fe613ce6565b5b81600481111561231257612311613ce6565b5b031561244e576001600481111561232c5761232b613ce6565b5b81600481111561233f5761233e613ce6565b5b0361237f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161237690613d61565b60405180910390fd5b6002600481111561239357612392613ce6565b5b8160048111156123a6576123a5613ce6565b5b036123e6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016123dd90613dcd565b60405180910390fd5b600360048111156123fa576123f9613ce6565b5b81600481111561240d5761240c613ce6565b5b0361244d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161244490613e5f565b60405180910390fd5b5b50565b6001816000016000828254019250508190555050565b6124728383836128b7565b61248d61247e84610865565b61248784610865565b83611f5b565b505050565b600080600090506000608084901c11156124b457608083901c92506080810190505b6000604084901c11156124cf57604083901c92506040810190505b6000602084901c11156124ea57602083901c92506020810190505b6000601084901c111561250557601083901c92506010810190505b6000600884901c111561252057600883901c92506008810190505b6000600484901c111561253b57600483901c92506004810190505b6000600284901c111561255657600283901c92506002810190505b6000600184901c111561256a576001810190505b80915050919050565b60008183106125825781612584565b825b905092915050565b6000806000858054905090506000808214612652576125ae8760018403611f20565b6040518060400160405290816000820160009054906101000a900463ffffffff1663ffffffff1663ffffffff1681526020016000820160049054906101000a90047bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff168152505061268e565b6040518060400160405280600063ffffffff16815260200160007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff168152505b905080602001517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1693506126c384868863ffffffff16565b92506000821180156126ed57506126d8610b73565b65ffffffffffff16816000015163ffffffff16145b1561275e576126fb836128bc565b6127088860018503611f20565b60000160046101000a8154817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff02191690837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff16021790555061285d565b866040518060400160405280612782612775610b73565b65ffffffffffff16611a2f565b63ffffffff168152602001612796866128bc565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff168152509080600181540180825580915050600190039060005260206000200160009091909190915060008201518160000160006101000a81548163ffffffff021916908363ffffffff16021790555060208201518160000160046101000a8154817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff02191690837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff16021790555050505b5050935093915050565b60008060ff8360001c169050601f8111156128ae576040517fb3512b0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80915050919050565b505050565b60007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff801682111561291f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161291690613ef1565b60405180910390fd5b819050919050565b6040518060400160405280600063ffffffff16815260200160007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1681525090565b600081519050919050565b600082825260208201905092915050565b60005b8381101561299f578082015181840152602081019050612984565b60008484015250505050565b6000601f19601f8301169050919050565b60006129c782612965565b6129d18185612970565b93506129e1818560208601612981565b6129ea816129ab565b840191505092915050565b60006020820190508181036000830152612a0f81846129bc565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000612a4782612a1c565b9050919050565b612a5781612a3c565b8114612a6257600080fd5b50565b600081359050612a7481612a4e565b92915050565b6000819050919050565b612a8d81612a7a565b8114612a9857600080fd5b50565b600081359050612aaa81612a84565b92915050565b60008060408385031215612ac757612ac6612a17565b5b6000612ad585828601612a65565b9250506020612ae685828601612a9b565b9150509250929050565b60008115159050919050565b612b0581612af0565b82525050565b6000602082019050612b206000830184612afc565b92915050565b612b2f81612a7a565b82525050565b6000602082019050612b4a6000830184612b26565b92915050565b600080600060608486031215612b6957612b68612a17565b5b6000612b7786828701612a65565b9350506020612b8886828701612a65565b9250506040612b9986828701612a9b565b9150509250925092565b600060ff82169050919050565b612bb981612ba3565b82525050565b6000602082019050612bd46000830184612bb0565b92915050565b6000819050919050565b612bed81612bda565b82525050565b6000602082019050612c086000830184612be4565b92915050565b600060208284031215612c2457612c23612a17565b5b6000612c3284828501612a65565b91505092915050565b612c4481612a3c565b82525050565b6000602082019050612c5f6000830184612c3b565b92915050565b600063ffffffff82169050919050565b612c7e81612c65565b82525050565b6000602082019050612c996000830184612c75565b92915050565b60007fff0000000000000000000000000000000000000000000000000000000000000082169050919050565b612cd481612c9f565b82525050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b612d0f81612a7a565b82525050565b6000612d218383612d06565b60208301905092915050565b6000602082019050919050565b6000612d4582612cda565b612d4f8185612ce5565b9350612d5a83612cf6565b8060005b83811015612d8b578151612d728882612d15565b9750612d7d83612d2d565b925050600181019050612d5e565b5085935050505092915050565b600060e082019050612dad600083018a612ccb565b8181036020830152612dbf81896129bc565b90508181036040830152612dd381886129bc565b9050612de26060830187612b26565b612def6080830186612c3b565b612dfc60a0830185612be4565b81810360c0830152612e0e8184612d3a565b905098975050505050505050565b600060208284031215612e3257612e31612a17565b5b6000612e4084828501612a9b565b91505092915050565b600065ffffffffffff82169050919050565b612e6481612e49565b82525050565b6000602082019050612e7f6000830184612e5b565b92915050565b612e8e81612ba3565b8114612e9957600080fd5b50565b600081359050612eab81612e85565b92915050565b612eba81612bda565b8114612ec557600080fd5b50565b600081359050612ed781612eb1565b92915050565b60008060008060008060c08789031215612efa57612ef9612a17565b5b6000612f0889828a01612a65565b9650506020612f1989828a01612a9b565b9550506040612f2a89828a01612a9b565b9450506060612f3b89828a01612e9c565b9350506080612f4c89828a01612ec8565b92505060a0612f5d89828a01612ec8565b9150509295509295509295565b600080600080600080600060e0888a031215612f8957612f88612a17565b5b6000612f978a828b01612a65565b9750506020612fa88a828b01612a65565b9650506040612fb98a828b01612a9b565b9550506060612fca8a828b01612a9b565b9450506080612fdb8a828b01612e9c565b93505060a0612fec8a828b01612ec8565b92505060c0612ffd8a828b01612ec8565b91505092959891949750929550565b6000806040838503121561302357613022612a17565b5b600061303185828601612a65565b925050602061304285828601612a65565b9150509250929050565b61305581612c65565b811461306057600080fd5b50565b6000813590506130728161304c565b92915050565b6000806040838503121561308f5761308e612a17565b5b600061309d85828601612a65565b92505060206130ae85828601613063565b9150509250929050565b6130c181612c65565b82525050565b60007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff82169050919050565b6130f8816130c7565b82525050565b60408201600082015161311460008501826130b8565b50602082015161312760208501826130ef565b50505050565b600060408201905061314260008301846130fe565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061318f57607f821691505b6020821081036131a2576131a1613148565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006131e282612a7a565b91506131ed83612a7a565b9250828201905080821115613205576132046131a8565b5b92915050565b7f4552433230566f7465733a20667574757265206c6f6f6b757000000000000000600082015250565b6000613241601983612970565b915061324c8261320b565b602082019050919050565b6000602082019050818103600083015261327081613234565b9050919050565b7f4552433230566f7465733a2062726f6b656e20636c6f636b206d6f6465000000600082015250565b60006132ad601d83612970565b91506132b882613277565b602082019050919050565b600060208201905081810360008301526132dc816132a0565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b600061339d602583612970565b91506133a882613341565b604082019050919050565b600060208201905081810360008301526133cc81613390565b9050919050565b7f4552433230566f7465733a207369676e61747572652065787069726564000000600082015250565b6000613409601d83612970565b9150613414826133d3565b602082019050919050565b60006020820190508181036000830152613438816133fc565b9050919050565b60006080820190506134546000830187612be4565b6134616020830186612c3b565b61346e6040830185612b26565b61347b6060830184612b26565b95945050505050565b7f4552433230566f7465733a20696e76616c6964206e6f6e636500000000000000600082015250565b60006134ba601983612970565b91506134c582613484565b602082019050919050565b600060208201905081810360008301526134e9816134ad565b9050919050565b7f45524332305065726d69743a206578706972656420646561646c696e65000000600082015250565b6000613526601d83612970565b9150613531826134f0565b602082019050919050565b6000602082019050818103600083015261355581613519565b9050919050565b600060c0820190506135716000830189612be4565b61357e6020830188612c3b565b61358b6040830187612c3b565b6135986060830186612b26565b6135a56080830185612b26565b6135b260a0830184612b26565b979650505050505050565b7f45524332305065726d69743a20696e76616c6964207369676e61747572650000600082015250565b60006135f3601e83612970565b91506135fe826135bd565b602082019050919050565b60006020820190508181036000830152613622816135e6565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000613685602683612970565b915061369082613629565b604082019050919050565b600060208201905081810360008301526136b481613678565b9050919050565b60006136c682612a7a565b91506136d183612a7a565b92508282039050818111156136e9576136e86131a8565b5b92915050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b600061374b602483612970565b9150613756826136ef565b604082019050919050565b6000602082019050818103600083015261377a8161373e565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b60006137dd602283612970565b91506137e882613781565b604082019050919050565b6000602082019050818103600083015261380c816137d0565b9050919050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b6000613849601d83612970565b915061385482613813565b602082019050919050565b600060208201905081810360008301526138788161383c565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b60006138db602583612970565b91506138e68261387f565b604082019050919050565b6000602082019050818103600083015261390a816138ce565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b600061396d602383612970565b915061397882613911565b604082019050919050565b6000602082019050818103600083015261399c81613960565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b60006139ff602683612970565b9150613a0a826139a3565b604082019050919050565b60006020820190508181036000830152613a2e816139f2565b9050919050565b7f53616665436173743a2076616c756520646f65736e27742066697420696e203360008201527f3220626974730000000000000000000000000000000000000000000000000000602082015250565b6000613a91602683612970565b9150613a9c82613a35565b604082019050919050565b60006020820190508181036000830152613ac081613a84565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000613afd602083612970565b9150613b0882613ac7565b602082019050919050565b60006020820190508181036000830152613b2c81613af0565b9050919050565b7f53616665436173743a2076616c756520646f65736e27742066697420696e203460008201527f3820626974730000000000000000000000000000000000000000000000000000602082015250565b6000613b8f602683612970565b9150613b9a82613b33565b604082019050919050565b60006020820190508181036000830152613bbe81613b82565b9050919050565b600060a082019050613bda6000830188612be4565b613be76020830187612be4565b613bf46040830186612be4565b613c016060830185612b26565b613c0e6080830184612c3b565b9695505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000613c5282612a7a565b9150613c5d83612a7a565b925082613c6d57613c6c613c18565b5b828204905092915050565b6000604082019050613c8d6000830185612b26565b613c9a6020830184612b26565b9392505050565b6000608082019050613cb66000830187612be4565b613cc36020830186612bb0565b613cd06040830185612be4565b613cdd6060830184612be4565b95945050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f45434453413a20696e76616c6964207369676e61747572650000000000000000600082015250565b6000613d4b601883612970565b9150613d5682613d15565b602082019050919050565b60006020820190508181036000830152613d7a81613d3e565b9050919050565b7f45434453413a20696e76616c6964207369676e6174757265206c656e67746800600082015250565b6000613db7601f83612970565b9150613dc282613d81565b602082019050919050565b60006020820190508181036000830152613de681613daa565b9050919050565b7f45434453413a20696e76616c6964207369676e6174757265202773272076616c60008201527f7565000000000000000000000000000000000000000000000000000000000000602082015250565b6000613e49602283612970565b9150613e5482613ded565b604082019050919050565b60006020820190508181036000830152613e7881613e3c565b9050919050565b7f53616665436173743a2076616c756520646f65736e27742066697420696e203260008201527f3234206269747300000000000000000000000000000000000000000000000000602082015250565b6000613edb602783612970565b9150613ee682613e7f565b604082019050919050565b60006020820190508181036000830152613f0a81613ece565b905091905056fea264697066735822122065f1df12a52299916b2771ce9906af6fdf69b27275d1d71b4600e159970ccbab64736f6c63430008130033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1C4 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7ECEBE00 GT PUSH2 0xF9 JUMPI DUP1 PUSH4 0xA457C2D7 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xD505ACCF GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x55F JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x57B JUMPI DUP1 PUSH4 0xF1127ED8 EQ PUSH2 0x5AB JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x5DB JUMPI PUSH2 0x1C4 JUMP JUMPDEST DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x4E3 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x513 JUMPI DUP1 PUSH4 0xC3CDA520 EQ PUSH2 0x543 JUMPI PUSH2 0x1C4 JUMP JUMPDEST DUP1 PUSH4 0x8E539E8C GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x8E539E8C EQ PUSH2 0x447 JUMPI DUP1 PUSH4 0x91DDADF4 EQ PUSH2 0x477 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x495 JUMPI DUP1 PUSH4 0x9AB24EB0 EQ PUSH2 0x4B3 JUMPI PUSH2 0x1C4 JUMP JUMPDEST DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x3D5 JUMPI DUP1 PUSH4 0x84B0196E EQ PUSH2 0x405 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x429 JUMPI PUSH2 0x1C4 JUMP JUMPDEST DUP1 PUSH4 0x3A46B1A8 GT PUSH2 0x166 JUMPI DUP1 PUSH4 0x5C19A95C GT PUSH2 0x140 JUMPI DUP1 PUSH4 0x5C19A95C EQ PUSH2 0x34F JUMPI DUP1 PUSH4 0x6FCFFF45 EQ PUSH2 0x36B JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x39B JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x3CB JUMPI PUSH2 0x1C4 JUMP JUMPDEST DUP1 PUSH4 0x3A46B1A8 EQ PUSH2 0x2D1 JUMPI DUP1 PUSH4 0x4BF5D7E9 EQ PUSH2 0x301 JUMPI DUP1 PUSH4 0x587CDE1E EQ PUSH2 0x31F JUMPI PUSH2 0x1C4 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0x1A2 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x235 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x265 JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x283 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x2A1 JUMPI PUSH2 0x1C4 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1C9 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1E7 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x217 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1D1 PUSH2 0x5F7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DE SWAP2 SWAP1 PUSH2 0x29F5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x201 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FC SWAP2 SWAP1 PUSH2 0x2AB0 JUMP JUMPDEST PUSH2 0x689 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20E SWAP2 SWAP1 PUSH2 0x2B0B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x21F PUSH2 0x6AC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x22C SWAP2 SWAP1 PUSH2 0x2B35 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x24F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x24A SWAP2 SWAP1 PUSH2 0x2B50 JUMP JUMPDEST PUSH2 0x6B6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25C SWAP2 SWAP1 PUSH2 0x2B0B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x26D PUSH2 0x6E5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27A SWAP2 SWAP1 PUSH2 0x2BBF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x28B PUSH2 0x6EE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x298 SWAP2 SWAP1 PUSH2 0x2BF3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2BB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B6 SWAP2 SWAP1 PUSH2 0x2AB0 JUMP JUMPDEST PUSH2 0x6FD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C8 SWAP2 SWAP1 PUSH2 0x2B0B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2EB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E6 SWAP2 SWAP1 PUSH2 0x2AB0 JUMP JUMPDEST PUSH2 0x734 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F8 SWAP2 SWAP1 PUSH2 0x2B35 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x309 PUSH2 0x7D7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x316 SWAP2 SWAP1 PUSH2 0x29F5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x339 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x334 SWAP2 SWAP1 PUSH2 0x2C0E JUMP JUMPDEST PUSH2 0x865 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x346 SWAP2 SWAP1 PUSH2 0x2C4A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x369 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x364 SWAP2 SWAP1 PUSH2 0x2C0E JUMP JUMPDEST PUSH2 0x8CE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x385 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x380 SWAP2 SWAP1 PUSH2 0x2C0E JUMP JUMPDEST PUSH2 0x8E2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x392 SWAP2 SWAP1 PUSH2 0x2C84 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3B5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3B0 SWAP2 SWAP1 PUSH2 0x2C0E JUMP JUMPDEST PUSH2 0x936 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3C2 SWAP2 SWAP1 PUSH2 0x2B35 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3D3 PUSH2 0x97E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3EF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3EA SWAP2 SWAP1 PUSH2 0x2C0E JUMP JUMPDEST PUSH2 0x992 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3FC SWAP2 SWAP1 PUSH2 0x2B35 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x40D PUSH2 0x9E2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x420 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2D98 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x431 PUSH2 0xAE4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x43E SWAP2 SWAP1 PUSH2 0x2C4A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x461 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x45C SWAP2 SWAP1 PUSH2 0x2E1C JUMP JUMPDEST PUSH2 0xB0E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x46E SWAP2 SWAP1 PUSH2 0x2B35 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x47F PUSH2 0xB73 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x48C SWAP2 SWAP1 PUSH2 0x2E6A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x49D PUSH2 0xB83 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4AA SWAP2 SWAP1 PUSH2 0x29F5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4CD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4C8 SWAP2 SWAP1 PUSH2 0x2C0E JUMP JUMPDEST PUSH2 0xC15 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4DA SWAP2 SWAP1 PUSH2 0x2B35 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4FD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4F8 SWAP2 SWAP1 PUSH2 0x2AB0 JUMP JUMPDEST PUSH2 0xD1D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x50A SWAP2 SWAP1 PUSH2 0x2B0B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x52D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x528 SWAP2 SWAP1 PUSH2 0x2AB0 JUMP JUMPDEST PUSH2 0xD94 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x53A SWAP2 SWAP1 PUSH2 0x2B0B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x55D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x558 SWAP2 SWAP1 PUSH2 0x2EDD JUMP JUMPDEST PUSH2 0xDB7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x579 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x574 SWAP2 SWAP1 PUSH2 0x2F6A JUMP JUMPDEST PUSH2 0xEBB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x595 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x590 SWAP2 SWAP1 PUSH2 0x300C JUMP JUMPDEST PUSH2 0xFFD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5A2 SWAP2 SWAP1 PUSH2 0x2B35 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5C5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5C0 SWAP2 SWAP1 PUSH2 0x3078 JUMP JUMPDEST PUSH2 0x1084 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5D2 SWAP2 SWAP1 PUSH2 0x312D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5F5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5F0 SWAP2 SWAP1 PUSH2 0x2C0E JUMP JUMPDEST PUSH2 0x1194 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x606 SWAP1 PUSH2 0x3177 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x632 SWAP1 PUSH2 0x3177 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x67F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x654 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x67F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x662 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x694 PUSH2 0x1243 JUMP JUMPDEST SWAP1 POP PUSH2 0x6A1 DUP2 DUP6 DUP6 PUSH2 0x124B JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x6C1 PUSH2 0x1243 JUMP JUMPDEST SWAP1 POP PUSH2 0x6CE DUP6 DUP3 DUP6 PUSH2 0x1414 JUMP JUMPDEST PUSH2 0x6D9 DUP6 DUP6 DUP6 PUSH2 0x14A0 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6F8 PUSH2 0x1716 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x708 PUSH2 0x1243 JUMP JUMPDEST SWAP1 POP PUSH2 0x729 DUP2 DUP6 DUP6 PUSH2 0x71A DUP6 DUP10 PUSH2 0xFFD JUMP JUMPDEST PUSH2 0x724 SWAP2 SWAP1 PUSH2 0x31D7 JUMP JUMPDEST PUSH2 0x124B JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x73E PUSH2 0xB73 JUMP JUMPDEST PUSH6 0xFFFFFFFFFFFF AND DUP3 LT PUSH2 0x787 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x77E SWAP1 PUSH2 0x3257 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7CF PUSH1 0xA PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP4 PUSH2 0x17CD JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 NUMBER PUSH2 0x7E2 PUSH2 0xB73 JUMP JUMPDEST PUSH6 0xFFFFFFFFFFFF AND EQ PUSH2 0x82A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x821 SWAP1 PUSH2 0x32C3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1D DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x6D6F64653D626C6F636B6E756D6265722666726F6D3D64656661756C74000000 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x9 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x8DF PUSH2 0x8D9 PUSH2 0x1243 JUMP JUMPDEST DUP3 PUSH2 0x1915 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x92F PUSH1 0xA PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD SWAP1 POP PUSH2 0x1A2F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x986 PUSH2 0x1A82 JUMP JUMPDEST PUSH2 0x990 PUSH1 0x0 PUSH2 0x1B00 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9DB PUSH1 0x7 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x1BC6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 PUSH2 0xA22 PUSH1 0x5 PUSH32 0x0 PUSH2 0x1BD4 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xA56 PUSH1 0x6 PUSH32 0x0 PUSH2 0x1BD4 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST CHAINID ADDRESS PUSH1 0x0 DUP1 SHL PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xA77 JUMPI PUSH2 0xA76 PUSH2 0x32E3 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xAA5 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP PUSH32 0xF00000000000000000000000000000000000000000000000000000000000000 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 SWAP7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB18 PUSH2 0xB73 JUMP JUMPDEST PUSH6 0xFFFFFFFFFFFF AND DUP3 LT PUSH2 0xB61 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB58 SWAP1 PUSH2 0x3257 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB6C PUSH1 0xB DUP4 PUSH2 0x17CD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB7E NUMBER PUSH2 0x1C84 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0xB92 SWAP1 PUSH2 0x3177 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xBBE SWAP1 PUSH2 0x3177 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xC0B JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xBE0 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xC0B JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xBEE JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xA PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH1 0x0 DUP2 EQ PUSH2 0xCF4 JUMPI PUSH1 0xA PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 DUP3 SUB DUP2 SLOAD DUP2 LT PUSH2 0xCB9 JUMPI PUSH2 0xCB8 PUSH2 0x3312 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 ADD PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xCF7 JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xD28 PUSH2 0x1243 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xD36 DUP3 DUP7 PUSH2 0xFFD JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0xD7B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD72 SWAP1 PUSH2 0x33B3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD88 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x124B JUMP JUMPDEST PUSH1 0x1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xD9F PUSH2 0x1243 JUMP JUMPDEST SWAP1 POP PUSH2 0xDAC DUP2 DUP6 DUP6 PUSH2 0x14A0 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP4 TIMESTAMP GT ISZERO PUSH2 0xDFA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDF1 SWAP1 PUSH2 0x341F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xE5C PUSH2 0xE54 PUSH32 0xE48329057BFD03D55E49B547132E39CFFD9C1820AD7B9D4C5307691425D15ADF DUP10 DUP10 DUP10 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xE39 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x343F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH2 0x1CD9 JUMP JUMPDEST DUP6 DUP6 DUP6 PUSH2 0x1CF3 JUMP JUMPDEST SWAP1 POP PUSH2 0xE67 DUP2 PUSH2 0x1D1E JUMP JUMPDEST DUP7 EQ PUSH2 0xEA8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE9F SWAP1 PUSH2 0x34D0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xEB2 DUP2 DUP9 PUSH2 0x1915 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST DUP4 TIMESTAMP GT ISZERO PUSH2 0xEFE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEF5 SWAP1 PUSH2 0x353C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP9 DUP9 DUP9 PUSH2 0xF2D DUP13 PUSH2 0x1D1E JUMP JUMPDEST DUP10 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xF43 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x355C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH2 0xF66 DUP3 PUSH2 0x1CD9 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xF76 DUP3 DUP8 DUP8 DUP8 PUSH2 0x1CF3 JUMP JUMPDEST SWAP1 POP DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xFE6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFDD SWAP1 PUSH2 0x3609 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xFF1 DUP11 DUP11 DUP11 PUSH2 0x124B JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x108C PUSH2 0x2927 JUMP JUMPDEST PUSH1 0xA PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP3 PUSH4 0xFFFFFFFF AND DUP2 SLOAD DUP2 LT PUSH2 0x10E3 JUMPI PUSH2 0x10E2 PUSH2 0x3312 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x119C PUSH2 0x1A82 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x120B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1202 SWAP1 PUSH2 0x369B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1214 DUP2 PUSH2 0x1B00 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x1225 SWAP2 SWAP1 PUSH2 0x31D7 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x123B SWAP2 SWAP1 PUSH2 0x36BB JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x12BA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12B1 SWAP1 PUSH2 0x3761 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1329 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1320 SWAP1 PUSH2 0x37F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1407 SWAP2 SWAP1 PUSH2 0x2B35 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1420 DUP5 DUP5 PUSH2 0xFFD JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x149A JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x148C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1483 SWAP1 PUSH2 0x385F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1499 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x124B JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x150F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1506 SWAP1 PUSH2 0x38F1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x157E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1575 SWAP1 PUSH2 0x3983 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1589 DUP4 DUP4 DUP4 PUSH2 0x1D7C JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x160F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1606 SWAP1 PUSH2 0x3A15 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x16FD SWAP2 SWAP1 PUSH2 0x2B35 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x1710 DUP5 DUP5 DUP5 PUSH2 0x1D81 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x1792 JUMPI POP PUSH32 0x0 CHAINID EQ JUMPDEST ISZERO PUSH2 0x17BF JUMPI PUSH32 0x0 SWAP1 POP PUSH2 0x17CA JUMP JUMPDEST PUSH2 0x17C7 PUSH2 0x1D91 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH1 0x0 DUP1 DUP3 SWAP1 POP PUSH1 0x5 DUP4 GT ISZERO PUSH2 0x1843 JUMPI PUSH1 0x0 PUSH2 0x17F1 DUP5 PUSH2 0x1E27 JUMP JUMPDEST DUP5 PUSH2 0x17FC SWAP2 SWAP1 PUSH2 0x36BB JUMP JUMPDEST SWAP1 POP DUP6 PUSH2 0x1809 DUP9 DUP4 PUSH2 0x1F20 JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND GT ISZERO PUSH2 0x1831 JUMPI DUP1 SWAP2 POP PUSH2 0x1841 JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH2 0x183E SWAP2 SWAP1 PUSH2 0x31D7 JUMP JUMPDEST SWAP3 POP JUMPDEST POP JUMPDEST JUMPDEST DUP1 DUP3 LT ISZERO PUSH2 0x18A3 JUMPI PUSH1 0x0 PUSH2 0x1858 DUP4 DUP4 PUSH2 0x1F35 JUMP JUMPDEST SWAP1 POP DUP6 PUSH2 0x1865 DUP9 DUP4 PUSH2 0x1F20 JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND GT ISZERO PUSH2 0x188D JUMPI DUP1 SWAP2 POP PUSH2 0x189D JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH2 0x189A SWAP2 SWAP1 PUSH2 0x31D7 JUMP JUMPDEST SWAP3 POP JUMPDEST POP PUSH2 0x1844 JUMP JUMPDEST PUSH1 0x0 DUP2 EQ PUSH2 0x18E9 JUMPI PUSH2 0x18B8 DUP7 PUSH1 0x1 DUP4 SUB PUSH2 0x1F20 JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x18EC JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1920 DUP4 PUSH2 0x865 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x192D DUP5 PUSH2 0x936 JUMP JUMPDEST SWAP1 POP DUP3 PUSH1 0x9 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x3134E8A2E6D97E929A7E54011EA5485D7D196DD5F0BA4D4EF95803E8E3FC257F PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x1A29 DUP3 DUP5 DUP4 PUSH2 0x1F5B JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP1 AND DUP3 GT ISZERO PUSH2 0x1A7A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A71 SWAP1 PUSH2 0x3AA7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A8A PUSH2 0x1243 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1AA8 PUSH2 0xAE4 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1AFE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1AF5 SWAP1 PUSH2 0x3B13 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0xC PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0xFF PUSH1 0x0 SHL DUP4 EQ PUSH2 0x1BF1 JUMPI PUSH2 0x1BEA DUP4 PUSH2 0x2154 JUMP JUMPDEST SWAP1 POP PUSH2 0x1C7E JUMP JUMPDEST DUP2 DUP1 SLOAD PUSH2 0x1BFD SWAP1 PUSH2 0x3177 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1C29 SWAP1 PUSH2 0x3177 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1C76 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1C4B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1C76 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1C59 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH6 0xFFFFFFFFFFFF DUP1 AND DUP3 GT ISZERO PUSH2 0x1CD1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1CC8 SWAP1 PUSH2 0x3BA5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CEC PUSH2 0x1CE6 PUSH2 0x1716 JUMP JUMPDEST DUP4 PUSH2 0x21C8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x1D04 DUP8 DUP8 DUP8 DUP8 PUSH2 0x2209 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x1D11 DUP2 PUSH2 0x22EB JUMP JUMPDEST DUP2 SWAP3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x7 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH2 0x1D6B DUP2 PUSH2 0x1BC6 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D76 DUP2 PUSH2 0x2451 JUMP JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x1D8C DUP4 DUP4 DUP4 PUSH2 0x2467 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH32 0x0 PUSH32 0x0 CHAINID ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1E0C SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3BC5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SUB PUSH2 0x1E39 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x1F1B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH2 0x1E46 DUP5 PUSH2 0x2492 JUMP JUMPDEST SWAP1 SHR PUSH1 0x1 SWAP1 SHL SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x1E60 JUMPI PUSH2 0x1E5F PUSH2 0x3C18 JUMP JUMPDEST JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x1E79 JUMPI PUSH2 0x1E78 PUSH2 0x3C18 JUMP JUMPDEST JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x1E92 JUMPI PUSH2 0x1E91 PUSH2 0x3C18 JUMP JUMPDEST JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x1EAB JUMPI PUSH2 0x1EAA PUSH2 0x3C18 JUMP JUMPDEST JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x1EC4 JUMPI PUSH2 0x1EC3 PUSH2 0x3C18 JUMP JUMPDEST JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x1EDD JUMPI PUSH2 0x1EDC PUSH2 0x3C18 JUMP JUMPDEST JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x1EF6 JUMPI PUSH2 0x1EF5 PUSH2 0x3C18 JUMP JUMPDEST JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH2 0x1F17 DUP2 DUP3 DUP6 DUP2 PUSH2 0x1F11 JUMPI PUSH2 0x1F10 PUSH2 0x3C18 JUMP JUMPDEST JUMPDEST DIV PUSH2 0x2573 JUMP JUMPDEST SWAP2 POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 MSTORE DUP2 PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DUP5 XOR PUSH2 0x1F46 SWAP2 SWAP1 PUSH2 0x3C47 JUMP JUMPDEST DUP3 DUP5 AND PUSH2 0x1F53 SWAP2 SWAP1 PUSH2 0x31D7 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x1F97 JUMPI POP PUSH1 0x0 DUP2 GT JUMPDEST ISZERO PUSH2 0x214F JUMPI PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2075 JUMPI PUSH1 0x0 DUP1 PUSH2 0x201E PUSH1 0xA PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x122D DUP6 PUSH2 0x258C JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDEC2BACDD2F05B59DE34DA9B523DFF8BE42E5E38E818C82FDB0BAE774387A724 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x206A SWAP3 SWAP2 SWAP1 PUSH2 0x3C78 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x214E JUMPI PUSH1 0x0 DUP1 PUSH2 0x20F7 PUSH1 0xA PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x1217 DUP6 PUSH2 0x258C JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDEC2BACDD2F05B59DE34DA9B523DFF8BE42E5E38E818C82FDB0BAE774387A724 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x2143 SWAP3 SWAP2 SWAP1 PUSH2 0x3C78 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x2161 DUP4 PUSH2 0x2867 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x20 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2180 JUMPI PUSH2 0x217F PUSH2 0x32E3 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x21B2 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 MSTORE DUP4 PUSH1 0x20 DUP3 ADD MSTORE DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1901000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE DUP4 PUSH1 0x2 DUP3 ADD MSTORE DUP3 PUSH1 0x22 DUP3 ADD MSTORE PUSH1 0x42 DUP2 KECCAK256 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP4 PUSH1 0x0 SHR GT ISZERO PUSH2 0x2244 JUMPI PUSH1 0x0 PUSH1 0x3 SWAP2 POP SWAP2 POP PUSH2 0x22E2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP8 DUP8 DUP8 DUP8 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x2269 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3CA1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x228B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x22D9 JUMPI PUSH1 0x0 PUSH1 0x1 SWAP3 POP SWAP3 POP POP PUSH2 0x22E2 JUMP JUMPDEST DUP1 PUSH1 0x0 SWAP3 POP SWAP3 POP POP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x22FF JUMPI PUSH2 0x22FE PUSH2 0x3CE6 JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x2312 JUMPI PUSH2 0x2311 PUSH2 0x3CE6 JUMP JUMPDEST JUMPDEST SUB ISZERO PUSH2 0x244E JUMPI PUSH1 0x1 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x232C JUMPI PUSH2 0x232B PUSH2 0x3CE6 JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x233F JUMPI PUSH2 0x233E PUSH2 0x3CE6 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x237F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2376 SWAP1 PUSH2 0x3D61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x2393 JUMPI PUSH2 0x2392 PUSH2 0x3CE6 JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x23A6 JUMPI PUSH2 0x23A5 PUSH2 0x3CE6 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x23E6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x23DD SWAP1 PUSH2 0x3DCD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x23FA JUMPI PUSH2 0x23F9 PUSH2 0x3CE6 JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x240D JUMPI PUSH2 0x240C PUSH2 0x3CE6 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x244D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2444 SWAP1 PUSH2 0x3E5F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x2472 DUP4 DUP4 DUP4 PUSH2 0x28B7 JUMP JUMPDEST PUSH2 0x248D PUSH2 0x247E DUP5 PUSH2 0x865 JUMP JUMPDEST PUSH2 0x2487 DUP5 PUSH2 0x865 JUMP JUMPDEST DUP4 PUSH2 0x1F5B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH1 0x0 PUSH1 0x80 DUP5 SWAP1 SHR GT ISZERO PUSH2 0x24B4 JUMPI PUSH1 0x80 DUP4 SWAP1 SHR SWAP3 POP PUSH1 0x80 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP5 SWAP1 SHR GT ISZERO PUSH2 0x24CF JUMPI PUSH1 0x40 DUP4 SWAP1 SHR SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP5 SWAP1 SHR GT ISZERO PUSH2 0x24EA JUMPI PUSH1 0x20 DUP4 SWAP1 SHR SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x0 PUSH1 0x10 DUP5 SWAP1 SHR GT ISZERO PUSH2 0x2505 JUMPI PUSH1 0x10 DUP4 SWAP1 SHR SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP5 SWAP1 SHR GT ISZERO PUSH2 0x2520 JUMPI PUSH1 0x8 DUP4 SWAP1 SHR SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x0 PUSH1 0x4 DUP5 SWAP1 SHR GT ISZERO PUSH2 0x253B JUMPI PUSH1 0x4 DUP4 SWAP1 SHR SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP5 SWAP1 SHR GT ISZERO PUSH2 0x2556 JUMPI PUSH1 0x2 DUP4 SWAP1 SHR SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP5 SWAP1 SHR GT ISZERO PUSH2 0x256A JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 LT PUSH2 0x2582 JUMPI DUP2 PUSH2 0x2584 JUMP JUMPDEST DUP3 JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH1 0x0 DUP1 DUP3 EQ PUSH2 0x2652 JUMPI PUSH2 0x25AE DUP8 PUSH1 0x1 DUP5 SUB PUSH2 0x1F20 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP PUSH2 0x268E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP JUMPDEST SWAP1 POP DUP1 PUSH1 0x20 ADD MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP4 POP PUSH2 0x26C3 DUP5 DUP7 DUP9 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP3 POP PUSH1 0x0 DUP3 GT DUP1 ISZERO PUSH2 0x26ED JUMPI POP PUSH2 0x26D8 PUSH2 0xB73 JUMP JUMPDEST PUSH6 0xFFFFFFFFFFFF AND DUP2 PUSH1 0x0 ADD MLOAD PUSH4 0xFFFFFFFF AND EQ JUMPDEST ISZERO PUSH2 0x275E JUMPI PUSH2 0x26FB DUP4 PUSH2 0x28BC JUMP JUMPDEST PUSH2 0x2708 DUP9 PUSH1 0x1 DUP6 SUB PUSH2 0x1F20 JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x4 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x285D JUMP JUMPDEST DUP7 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x2782 PUSH2 0x2775 PUSH2 0xB73 JUMP JUMPDEST PUSH6 0xFFFFFFFFFFFF AND PUSH2 0x1A2F JUMP JUMPDEST PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2796 DUP7 PUSH2 0x28BC JUMP JUMPDEST PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x4 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP JUMPDEST POP POP SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xFF DUP4 PUSH1 0x0 SHR AND SWAP1 POP PUSH1 0x1F DUP2 GT ISZERO PUSH2 0x28AE JUMPI PUSH1 0x40 MLOAD PUSH32 0xB3512B0C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 AND DUP3 GT ISZERO PUSH2 0x291F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2916 SWAP1 PUSH2 0x3EF1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x299F JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2984 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x29C7 DUP3 PUSH2 0x2965 JUMP JUMPDEST PUSH2 0x29D1 DUP2 DUP6 PUSH2 0x2970 JUMP JUMPDEST SWAP4 POP PUSH2 0x29E1 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2981 JUMP JUMPDEST PUSH2 0x29EA DUP2 PUSH2 0x29AB JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2A0F DUP2 DUP5 PUSH2 0x29BC JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A47 DUP3 PUSH2 0x2A1C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2A57 DUP2 PUSH2 0x2A3C JUMP JUMPDEST DUP2 EQ PUSH2 0x2A62 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2A74 DUP2 PUSH2 0x2A4E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2A8D DUP2 PUSH2 0x2A7A JUMP JUMPDEST DUP2 EQ PUSH2 0x2A98 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2AAA DUP2 PUSH2 0x2A84 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2AC7 JUMPI PUSH2 0x2AC6 PUSH2 0x2A17 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2AD5 DUP6 DUP3 DUP7 ADD PUSH2 0x2A65 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2AE6 DUP6 DUP3 DUP7 ADD PUSH2 0x2A9B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2B05 DUP2 PUSH2 0x2AF0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2B20 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2AFC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2B2F DUP2 PUSH2 0x2A7A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2B4A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2B26 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2B69 JUMPI PUSH2 0x2B68 PUSH2 0x2A17 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2B77 DUP7 DUP3 DUP8 ADD PUSH2 0x2A65 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x2B88 DUP7 DUP3 DUP8 ADD PUSH2 0x2A65 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x2B99 DUP7 DUP3 DUP8 ADD PUSH2 0x2A9B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2BB9 DUP2 PUSH2 0x2BA3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2BD4 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2BB0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2BED DUP2 PUSH2 0x2BDA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2C08 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2BE4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2C24 JUMPI PUSH2 0x2C23 PUSH2 0x2A17 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2C32 DUP5 DUP3 DUP6 ADD PUSH2 0x2A65 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2C44 DUP2 PUSH2 0x2A3C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2C5F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2C3B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2C7E DUP2 PUSH2 0x2C65 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2C99 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2C75 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFF00000000000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2CD4 DUP2 PUSH2 0x2C9F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2D0F DUP2 PUSH2 0x2A7A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2D21 DUP4 DUP4 PUSH2 0x2D06 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2D45 DUP3 PUSH2 0x2CDA JUMP JUMPDEST PUSH2 0x2D4F DUP2 DUP6 PUSH2 0x2CE5 JUMP JUMPDEST SWAP4 POP PUSH2 0x2D5A DUP4 PUSH2 0x2CF6 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2D8B JUMPI DUP2 MLOAD PUSH2 0x2D72 DUP9 DUP3 PUSH2 0x2D15 JUMP JUMPDEST SWAP8 POP PUSH2 0x2D7D DUP4 PUSH2 0x2D2D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x2D5E JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE0 DUP3 ADD SWAP1 POP PUSH2 0x2DAD PUSH1 0x0 DUP4 ADD DUP11 PUSH2 0x2CCB JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x2DBF DUP2 DUP10 PUSH2 0x29BC JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x2DD3 DUP2 DUP9 PUSH2 0x29BC JUMP JUMPDEST SWAP1 POP PUSH2 0x2DE2 PUSH1 0x60 DUP4 ADD DUP8 PUSH2 0x2B26 JUMP JUMPDEST PUSH2 0x2DEF PUSH1 0x80 DUP4 ADD DUP7 PUSH2 0x2C3B JUMP JUMPDEST PUSH2 0x2DFC PUSH1 0xA0 DUP4 ADD DUP6 PUSH2 0x2BE4 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0xC0 DUP4 ADD MSTORE PUSH2 0x2E0E DUP2 DUP5 PUSH2 0x2D3A JUMP JUMPDEST SWAP1 POP SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2E32 JUMPI PUSH2 0x2E31 PUSH2 0x2A17 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2E40 DUP5 DUP3 DUP6 ADD PUSH2 0x2A9B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH6 0xFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2E64 DUP2 PUSH2 0x2E49 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2E7F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2E5B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2E8E DUP2 PUSH2 0x2BA3 JUMP JUMPDEST DUP2 EQ PUSH2 0x2E99 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2EAB DUP2 PUSH2 0x2E85 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2EBA DUP2 PUSH2 0x2BDA JUMP JUMPDEST DUP2 EQ PUSH2 0x2EC5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2ED7 DUP2 PUSH2 0x2EB1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x2EFA JUMPI PUSH2 0x2EF9 PUSH2 0x2A17 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2F08 DUP10 DUP3 DUP11 ADD PUSH2 0x2A65 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x20 PUSH2 0x2F19 DUP10 DUP3 DUP11 ADD PUSH2 0x2A9B JUMP JUMPDEST SWAP6 POP POP PUSH1 0x40 PUSH2 0x2F2A DUP10 DUP3 DUP11 ADD PUSH2 0x2A9B JUMP JUMPDEST SWAP5 POP POP PUSH1 0x60 PUSH2 0x2F3B DUP10 DUP3 DUP11 ADD PUSH2 0x2E9C JUMP JUMPDEST SWAP4 POP POP PUSH1 0x80 PUSH2 0x2F4C DUP10 DUP3 DUP11 ADD PUSH2 0x2EC8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xA0 PUSH2 0x2F5D DUP10 DUP3 DUP11 ADD PUSH2 0x2EC8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x2F89 JUMPI PUSH2 0x2F88 PUSH2 0x2A17 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2F97 DUP11 DUP3 DUP12 ADD PUSH2 0x2A65 JUMP JUMPDEST SWAP8 POP POP PUSH1 0x20 PUSH2 0x2FA8 DUP11 DUP3 DUP12 ADD PUSH2 0x2A65 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x40 PUSH2 0x2FB9 DUP11 DUP3 DUP12 ADD PUSH2 0x2A9B JUMP JUMPDEST SWAP6 POP POP PUSH1 0x60 PUSH2 0x2FCA DUP11 DUP3 DUP12 ADD PUSH2 0x2A9B JUMP JUMPDEST SWAP5 POP POP PUSH1 0x80 PUSH2 0x2FDB DUP11 DUP3 DUP12 ADD PUSH2 0x2E9C JUMP JUMPDEST SWAP4 POP POP PUSH1 0xA0 PUSH2 0x2FEC DUP11 DUP3 DUP12 ADD PUSH2 0x2EC8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xC0 PUSH2 0x2FFD DUP11 DUP3 DUP12 ADD PUSH2 0x2EC8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3023 JUMPI PUSH2 0x3022 PUSH2 0x2A17 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3031 DUP6 DUP3 DUP7 ADD PUSH2 0x2A65 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x3042 DUP6 DUP3 DUP7 ADD PUSH2 0x2A65 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x3055 DUP2 PUSH2 0x2C65 JUMP JUMPDEST DUP2 EQ PUSH2 0x3060 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3072 DUP2 PUSH2 0x304C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x308F JUMPI PUSH2 0x308E PUSH2 0x2A17 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x309D DUP6 DUP3 DUP7 ADD PUSH2 0x2A65 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x30AE DUP6 DUP3 DUP7 ADD PUSH2 0x3063 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x30C1 DUP2 PUSH2 0x2C65 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x30F8 DUP2 PUSH2 0x30C7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x40 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x3114 PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x30B8 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x3127 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x30EF JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3142 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x30FE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x318F JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x31A2 JUMPI PUSH2 0x31A1 PUSH2 0x3148 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x31E2 DUP3 PUSH2 0x2A7A JUMP JUMPDEST SWAP2 POP PUSH2 0x31ED DUP4 PUSH2 0x2A7A JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x3205 JUMPI PUSH2 0x3204 PUSH2 0x31A8 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4552433230566F7465733A20667574757265206C6F6F6B757000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3241 PUSH1 0x19 DUP4 PUSH2 0x2970 JUMP JUMPDEST SWAP2 POP PUSH2 0x324C DUP3 PUSH2 0x320B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3270 DUP2 PUSH2 0x3234 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433230566F7465733A2062726F6B656E20636C6F636B206D6F6465000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x32AD PUSH1 0x1D DUP4 PUSH2 0x2970 JUMP JUMPDEST SWAP2 POP PUSH2 0x32B8 DUP3 PUSH2 0x3277 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x32DC DUP2 PUSH2 0x32A0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x207A65726F000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x339D PUSH1 0x25 DUP4 PUSH2 0x2970 JUMP JUMPDEST SWAP2 POP PUSH2 0x33A8 DUP3 PUSH2 0x3341 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x33CC DUP2 PUSH2 0x3390 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433230566F7465733A207369676E61747572652065787069726564000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3409 PUSH1 0x1D DUP4 PUSH2 0x2970 JUMP JUMPDEST SWAP2 POP PUSH2 0x3414 DUP3 PUSH2 0x33D3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3438 DUP2 PUSH2 0x33FC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x3454 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x2BE4 JUMP JUMPDEST PUSH2 0x3461 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x2C3B JUMP JUMPDEST PUSH2 0x346E PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x2B26 JUMP JUMPDEST PUSH2 0x347B PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x2B26 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4552433230566F7465733A20696E76616C6964206E6F6E636500000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x34BA PUSH1 0x19 DUP4 PUSH2 0x2970 JUMP JUMPDEST SWAP2 POP PUSH2 0x34C5 DUP3 PUSH2 0x3484 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x34E9 DUP2 PUSH2 0x34AD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332305065726D69743A206578706972656420646561646C696E65000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3526 PUSH1 0x1D DUP4 PUSH2 0x2970 JUMP JUMPDEST SWAP2 POP PUSH2 0x3531 DUP3 PUSH2 0x34F0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3555 DUP2 PUSH2 0x3519 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0x3571 PUSH1 0x0 DUP4 ADD DUP10 PUSH2 0x2BE4 JUMP JUMPDEST PUSH2 0x357E PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0x2C3B JUMP JUMPDEST PUSH2 0x358B PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0x2C3B JUMP JUMPDEST PUSH2 0x3598 PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x2B26 JUMP JUMPDEST PUSH2 0x35A5 PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x2B26 JUMP JUMPDEST PUSH2 0x35B2 PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0x2B26 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x45524332305065726D69743A20696E76616C6964207369676E61747572650000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x35F3 PUSH1 0x1E DUP4 PUSH2 0x2970 JUMP JUMPDEST SWAP2 POP PUSH2 0x35FE DUP3 PUSH2 0x35BD JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3622 DUP2 PUSH2 0x35E6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3685 PUSH1 0x26 DUP4 PUSH2 0x2970 JUMP JUMPDEST SWAP2 POP PUSH2 0x3690 DUP3 PUSH2 0x3629 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x36B4 DUP2 PUSH2 0x3678 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x36C6 DUP3 PUSH2 0x2A7A JUMP JUMPDEST SWAP2 POP PUSH2 0x36D1 DUP4 PUSH2 0x2A7A JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x36E9 JUMPI PUSH2 0x36E8 PUSH2 0x31A8 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x374B PUSH1 0x24 DUP4 PUSH2 0x2970 JUMP JUMPDEST SWAP2 POP PUSH2 0x3756 DUP3 PUSH2 0x36EF JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x377A DUP2 PUSH2 0x373E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x37DD PUSH1 0x22 DUP4 PUSH2 0x2970 JUMP JUMPDEST SWAP2 POP PUSH2 0x37E8 DUP3 PUSH2 0x3781 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x380C DUP2 PUSH2 0x37D0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3849 PUSH1 0x1D DUP4 PUSH2 0x2970 JUMP JUMPDEST SWAP2 POP PUSH2 0x3854 DUP3 PUSH2 0x3813 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3878 DUP2 PUSH2 0x383C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x38DB PUSH1 0x25 DUP4 PUSH2 0x2970 JUMP JUMPDEST SWAP2 POP PUSH2 0x38E6 DUP3 PUSH2 0x387F JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x390A DUP2 PUSH2 0x38CE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x396D PUSH1 0x23 DUP4 PUSH2 0x2970 JUMP JUMPDEST SWAP2 POP PUSH2 0x3978 DUP3 PUSH2 0x3911 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x399C DUP2 PUSH2 0x3960 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x616C616E63650000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x39FF PUSH1 0x26 DUP4 PUSH2 0x2970 JUMP JUMPDEST SWAP2 POP PUSH2 0x3A0A DUP3 PUSH2 0x39A3 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3A2E DUP2 PUSH2 0x39F2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x53616665436173743A2076616C756520646F65736E27742066697420696E2033 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x3220626974730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3A91 PUSH1 0x26 DUP4 PUSH2 0x2970 JUMP JUMPDEST SWAP2 POP PUSH2 0x3A9C DUP3 PUSH2 0x3A35 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3AC0 DUP2 PUSH2 0x3A84 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3AFD PUSH1 0x20 DUP4 PUSH2 0x2970 JUMP JUMPDEST SWAP2 POP PUSH2 0x3B08 DUP3 PUSH2 0x3AC7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3B2C DUP2 PUSH2 0x3AF0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x53616665436173743A2076616C756520646F65736E27742066697420696E2034 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x3820626974730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3B8F PUSH1 0x26 DUP4 PUSH2 0x2970 JUMP JUMPDEST SWAP2 POP PUSH2 0x3B9A DUP3 PUSH2 0x3B33 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3BBE DUP2 PUSH2 0x3B82 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x3BDA PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x2BE4 JUMP JUMPDEST PUSH2 0x3BE7 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x2BE4 JUMP JUMPDEST PUSH2 0x3BF4 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x2BE4 JUMP JUMPDEST PUSH2 0x3C01 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x2B26 JUMP JUMPDEST PUSH2 0x3C0E PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x2C3B JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3C52 DUP3 PUSH2 0x2A7A JUMP JUMPDEST SWAP2 POP PUSH2 0x3C5D DUP4 PUSH2 0x2A7A JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x3C6D JUMPI PUSH2 0x3C6C PUSH2 0x3C18 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3C8D PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x2B26 JUMP JUMPDEST PUSH2 0x3C9A PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2B26 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x3CB6 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x2BE4 JUMP JUMPDEST PUSH2 0x3CC3 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x2BB0 JUMP JUMPDEST PUSH2 0x3CD0 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x2BE4 JUMP JUMPDEST PUSH2 0x3CDD PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x2BE4 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x45434453413A20696E76616C6964207369676E61747572650000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3D4B PUSH1 0x18 DUP4 PUSH2 0x2970 JUMP JUMPDEST SWAP2 POP PUSH2 0x3D56 DUP3 PUSH2 0x3D15 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3D7A DUP2 PUSH2 0x3D3E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45434453413A20696E76616C6964207369676E6174757265206C656E67746800 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3DB7 PUSH1 0x1F DUP4 PUSH2 0x2970 JUMP JUMPDEST SWAP2 POP PUSH2 0x3DC2 DUP3 PUSH2 0x3D81 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3DE6 DUP2 PUSH2 0x3DAA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45434453413A20696E76616C6964207369676E6174757265202773272076616C PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7565000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3E49 PUSH1 0x22 DUP4 PUSH2 0x2970 JUMP JUMPDEST SWAP2 POP PUSH2 0x3E54 DUP3 PUSH2 0x3DED JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3E78 DUP2 PUSH2 0x3E3C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x53616665436173743A2076616C756520646F65736E27742066697420696E2032 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x3234206269747300000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3EDB PUSH1 0x27 DUP4 PUSH2 0x2970 JUMP JUMPDEST SWAP2 POP PUSH2 0x3EE6 DUP3 PUSH2 0x3E7F JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3F0A DUP2 PUSH2 0x3ECE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH6 0xF1DF12A52299 SWAP2 PUSH12 0x2771CE9906AF6FDF69B27275 0xD1 0xD7 SHL CHAINID STOP 0xE1 MSIZE SWAP8 0xC 0xCB 0xAB PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ","sourceMap":"396:853:22:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2158:98:5;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4444:197;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3255:106;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5203:256;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3104:91;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2867:113:7;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5854:234:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3466:248:8;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2047:254;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2838:126;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6275:112;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2601:149;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3419:125:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1824:101:0;;;:::i;:::-;;2617:126:7;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5021:633:18;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;1201:85:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3976:239:8;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1817:118;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2369:102:5;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3043:243:8;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6575:427:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3740:189;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6464:574:8;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1930:626:7;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3987:149:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2378:148:8;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2074:198:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2158:98:5;2212:13;2244:5;2237:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2158:98;:::o;4444:197::-;4527:4;4543:13;4559:12;:10;:12::i;:::-;4543:28;;4581:32;4590:5;4597:7;4606:6;4581:8;:32::i;:::-;4630:4;4623:11;;;4444:197;;;;:::o;3255:106::-;3316:7;3342:12;;3335:19;;3255:106;:::o;5203:256::-;5300:4;5316:15;5334:12;:10;:12::i;:::-;5316:30;;5356:38;5372:4;5378:7;5387:6;5356:15;:38::i;:::-;5404:27;5414:4;5420:2;5424:6;5404:9;:27::i;:::-;5448:4;5441:11;;;5203:256;;;;;:::o;3104:91::-;3162:5;3186:2;3179:9;;3104:91;:::o;2867:113:7:-;2927:7;2953:20;:18;:20::i;:::-;2946:27;;2867:113;:::o;5854:234:5:-;5942:4;5958:13;5974:12;:10;:12::i;:::-;5958:28;;5996:64;6005:5;6012:7;6049:10;6021:25;6031:5;6038:7;6021:9;:25::i;:::-;:38;;;;:::i;:::-;5996:8;:64::i;:::-;6077:4;6070:11;;;5854:234;;;;:::o;3466:248:8:-;3562:7;3601;:5;:7::i;:::-;3589:19;;:9;:19;3581:57;;;;;;;;;;;;:::i;:::-;;;;;;;;;3655:52;3674:12;:21;3687:7;3674:21;;;;;;;;;;;;;;;3697:9;3655:18;:52::i;:::-;3648:59;;3466:248;;;;:::o;2047:254::-;2107:13;2200:12;2189:7;:5;:7::i;:::-;:23;;;2181:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;2256:38;;;;;;;;;;;;;;;;;;;2047:254;:::o;2838:126::-;2912:7;2938:10;:19;2949:7;2938:19;;;;;;;;;;;;;;;;;;;;;;;;;2931:26;;2838:126;;;:::o;6275:112::-;6346:34;6356:12;:10;:12::i;:::-;6370:9;6346;:34::i;:::-;6275:112;:::o;2601:149::-;2671:6;2696:47;2714:12;:21;2727:7;2714:21;;;;;;;;;;;;;;;:28;;;;2696:17;:47::i;:::-;2689:54;;2601:149;;;:::o;3419:125:5:-;3493:7;3519:9;:18;3529:7;3519:18;;;;;;;;;;;;;;;;3512:25;;3419:125;;;:::o;1824:101:0:-;1094:13;:11;:13::i;:::-;1888:30:::1;1915:1;1888:18;:30::i;:::-;1824:101::o:0;2617:126:7:-;2686:7;2712:24;:7;:14;2720:5;2712:14;;;;;;;;;;;;;;;:22;:24::i;:::-;2705:31;;2617:126;;;:::o;5021:633:18:-;5136:13;5163:18;5195:21;5230:15;5259:25;5298:12;5324:27;5427:41;5454:13;5427:5;:26;;:41;;;;:::i;:::-;5482:47;5512:16;5482:8;:29;;:47;;;;:::i;:::-;5543:13;5578:4;5605:1;5597:10;;5635:1;5621:16;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5376:271;;;;;;;;;;;;;;;;;;;;;5021:633;;;;;;;:::o;1201:85:0:-;1247:7;1273:6;;;;;;;;;;;1266:13;;1201:85;:::o;3976:239:8:-;4061:7;4100;:5;:7::i;:::-;4088:19;;:9;:19;4080:57;;;;;;;;;;;;:::i;:::-;;;;;;;;;4154:54;4173:23;4198:9;4154:18;:54::i;:::-;4147:61;;3976:239;;;:::o;1817:118::-;1872:6;1897:31;1915:12;1897:17;:31::i;:::-;1890:38;;1817:118;:::o;2369:102:5:-;2425:13;2457:7;2450:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2369:102;:::o;3043:243:8:-;3116:7;3135:11;3149:12;:21;3162:7;3149:21;;;;;;;;;;;;;;;:28;;;;3135:42;;3225:1;3218:3;:8;:51;;3233:12;:21;3246:7;3233:21;;;;;;;;;;;;;;;3261:1;3255:3;:7;3233:30;;;;;;;;:::i;:::-;;;;;;;;;:36;;;;;;;;;;;;3218:51;;;3229:1;3218:51;3211:58;;;;;3043:243;;;:::o;6575:427:5:-;6668:4;6684:13;6700:12;:10;:12::i;:::-;6684:28;;6722:24;6749:25;6759:5;6766:7;6749:9;:25::i;:::-;6722:52;;6812:15;6792:16;:35;;6784:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;6903:60;6912:5;6919:7;6947:15;6928:16;:34;6903:8;:60::i;:::-;6991:4;6984:11;;;;6575:427;;;;:::o;3740:189::-;3819:4;3835:13;3851:12;:10;:12::i;:::-;3835:28;;3873;3883:5;3890:2;3894:6;3873:9;:28::i;:::-;3918:4;3911:11;;;3740:189;;;;:::o;6464:574:8:-;6683:6;6664:15;:25;;6656:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;6733:14;6750:169;6777:87;1439:71;6837:9;6848:5;6855:6;6804:58;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;6794:69;;;;;;6777:16;:87::i;:::-;6878:1;6893;6908;6750:13;:169::i;:::-;6733:186;;6946:17;6956:6;6946:9;:17::i;:::-;6937:5;:26;6929:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;7003:28;7013:6;7021:9;7003;:28::i;:::-;6646:392;6464:574;;;;;;:::o;1930:626:7:-;2165:8;2146:15;:27;;2138:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;2218:18;1125:95;2278:5;2285:7;2294:5;2301:16;2311:5;2301:9;:16::i;:::-;2319:8;2249:79;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2239:90;;;;;;2218:111;;2340:12;2355:28;2372:10;2355:16;:28::i;:::-;2340:43;;2394:14;2411:28;2425:4;2431:1;2434;2437;2411:13;:28::i;:::-;2394:45;;2467:5;2457:15;;:6;:15;;;2449:58;;;;;;;;;;;;:::i;:::-;;;;;;;;;2518:31;2527:5;2534:7;2543:5;2518:8;:31::i;:::-;2128:428;;;1930:626;;;;;;;:::o;3987:149:5:-;4076:7;4102:11;:18;4114:5;4102:18;;;;;;;;;;;;;;;:27;4121:7;4102:27;;;;;;;;;;;;;;;;4095:34;;3987:149;;;;:::o;2378:148:8:-;2457:17;;:::i;:::-;2493:12;:21;2506:7;2493:21;;;;;;;;;;;;;;;2515:3;2493:26;;;;;;;;;;:::i;:::-;;;;;;;;;2486:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2378:148;;;;:::o;2074:198:0:-;1094:13;:11;:13::i;:::-;2182:1:::1;2162:22;;:8;:22;;::::0;2154:73:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;2237:28;2256:8;2237:18;:28::i;:::-;2074:198:::0;:::o;10194:96:8:-;10252:7;10282:1;10278;:5;;;;:::i;:::-;10271:12;;10194:96;;;;:::o;10296:101::-;10359:7;10389:1;10385;:5;;;;:::i;:::-;10378:12;;10296:101;;;;:::o;640:96:12:-;693:7;719:10;712:17;;640:96;:::o;10457:340:5:-;10575:1;10558:19;;:5;:19;;;10550:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;10655:1;10636:21;;:7;:21;;;10628:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;10737:6;10707:11;:18;10719:5;10707:18;;;;;;;;;;;;;;;:27;10726:7;10707:27;;;;;;;;;;;;;;;:36;;;;10774:7;10758:32;;10767:5;10758:32;;;10783:6;10758:32;;;;;;:::i;:::-;;;;;;;;10457:340;;;:::o;11078:411::-;11178:24;11205:25;11215:5;11222:7;11205:9;:25::i;:::-;11178:52;;11264:17;11244:16;:37;11240:243;;11325:6;11305:16;:26;;11297:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;11407:51;11416:5;11423:7;11451:6;11432:16;:25;11407:8;:51::i;:::-;11240:243;11168:321;11078:411;;;:::o;7456:788::-;7568:1;7552:18;;:4;:18;;;7544:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;7644:1;7630:16;;:2;:16;;;7622:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;7697:38;7718:4;7724:2;7728:6;7697:20;:38::i;:::-;7746:19;7768:9;:15;7778:4;7768:15;;;;;;;;;;;;;;;;7746:37;;7816:6;7801:11;:21;;7793:72;;;;;;;;;;;;:::i;:::-;;;;;;;;;7931:6;7917:11;:20;7899:9;:15;7909:4;7899:15;;;;;;;;;;;;;;;:38;;;;8131:6;8114:9;:13;8124:2;8114:13;;;;;;;;;;;;;;;;:23;;;;;;;;;;;8178:2;8163:26;;8172:4;8163:26;;;8182:6;8163:26;;;;;;:::i;:::-;;;;;;;;8200:37;8220:4;8226:2;8230:6;8200:19;:37::i;:::-;7534:710;7456:788;;;:::o;3695:262:18:-;3748:7;3788:11;3771:28;;3779:4;3771:28;;;:63;;;;;3820:14;3803:13;:31;3771:63;3767:184;;;3857:22;3850:29;;;;3767:184;3917:23;:21;:23::i;:::-;3910:30;;3695:262;;:::o;4299:1895:8:-;4396:7;5493:14;5510:5;:12;;;;5493:29;;5533:11;5558:12;5573:6;5558:21;;5603:1;5594:6;:10;5590:242;;;5620:11;5643:17;5653:6;5643:9;:17::i;:::-;5634:6;:26;;;;:::i;:::-;5620:40;;5716:9;5678:25;5692:5;5699:3;5678:13;:25::i;:::-;:35;;;;;;;;;;;;:47;;;5674:148;;;5752:3;5745:10;;5674:148;;;5806:1;5800:3;:7;;;;:::i;:::-;5794:13;;5674:148;5606:226;5590:242;5842;5855:4;5849:3;:10;5842:242;;;5875:11;5889:23;5902:3;5907:4;5889:12;:23::i;:::-;5875:37;;5968:9;5930:25;5944:5;5951:3;5930:13;:25::i;:::-;:35;;;;;;;;;;;;:47;;;5926:148;;;6004:3;5997:10;;5926:148;;;6058:1;6052:3;:7;;;;:::i;:::-;6046:13;;5926:148;5861:223;5842:242;;;6133:1;6125:4;:9;:52;;6141:30;6155:5;6169:1;6162:4;:8;6141:13;:30::i;:::-;:36;;;;;;;;;;;;6125:52;;;6137:1;6125:52;6118:59;;;;;;;4299:1895;;;;:::o;8431:380::-;8515:23;8541:20;8551:9;8541;:20::i;:::-;8515:46;;8571:24;8598:20;8608:9;8598;:20::i;:::-;8571:47;;8652:9;8628:10;:21;8639:9;8628:21;;;;;;;;;;;;;;;;:33;;;;;;;;;;;;;;;;;;8721:9;8677:54;;8704:15;8677:54;;8693:9;8677:54;;;;;;;;;;;;8742:62;8759:15;8776:9;8787:16;8742;:62::i;:::-;8505:306;;8431:380;;:::o;15264:187:20:-;15320:6;15355:16;15346:25;;:5;:25;;15338:76;;;;;;;;;;;;:::i;:::-;;;;;;;;;15438:5;15424:20;;15264:187;;;:::o;1359:130:0:-;1433:12;:10;:12::i;:::-;1422:23;;:7;:5;:7::i;:::-;:23;;;1414:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1359:130::o;2426:187::-;2499:16;2518:6;;;;;;;;;;;2499:25;;2543:8;2534:6;;:17;;;;;;;;;;;;;;;;;;2597:8;2566:40;;2587:8;2566:40;;;;;;;;;;;;2489:124;2426:187;:::o;827:112:13:-;892:7;918;:14;;;911:21;;827:112;;;:::o;3367:268:14:-;3461:13;1371:66;3519:18;;3509:5;3490:47;3486:143;;3560:15;3569:5;3560:8;:15::i;:::-;3553:22;;;;3486:143;3613:5;3606:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3367:268;;;;;:::o;14240:187:20:-;14296:6;14331:16;14322:25;;:5;:25;;14314:76;;;;;;;;;;;;:::i;:::-;;;;;;;;;14414:5;14400:20;;14240:187;;;:::o;4768:165:18:-;4845:7;4871:55;4893:20;:18;:20::i;:::-;4915:10;4871:21;:55::i;:::-;4864:62;;4768:165;;;:::o;6598:232:17:-;6683:7;6703:17;6722:18;6744:25;6755:4;6761:1;6764;6767;6744:10;:25::i;:::-;6702:67;;;;6779:18;6791:5;6779:11;:18::i;:::-;6814:9;6807:16;;;;6598:232;;;;;;:::o;3111:203:7:-;3171:15;3198:30;3231:7;:14;3239:5;3231:14;;;;;;;;;;;;;;;3198:47;;3265:15;:5;:13;:15::i;:::-;3255:25;;3290:17;:5;:15;:17::i;:::-;3188:126;3111:203;;;:::o;12073:91:5:-;;;;:::o;707:193:22:-;849:43;875:4;881:2;885:6;849:25;:43::i;:::-;707:193;;;:::o;3963:180:18:-;4018:7;1929:95;4077:11;4090:14;4106:13;4129:4;4054:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;4044:92;;;;;;4037:99;;3963:180;:::o;6530:1642:19:-;6578:7;6606:1;6601;:6;6597:45;;6630:1;6623:8;;;;6597:45;7321:14;7355:1;7344:7;7349:1;7344:4;:7::i;:::-;:12;;7338:1;:19;;7321:36;;7816:1;7805:6;7801:1;:10;;;;;:::i;:::-;;;7792:6;:19;7791:26;;7782:35;;7865:1;7854:6;7850:1;:10;;;;;:::i;:::-;;;7841:6;:19;7840:26;;7831:35;;7914:1;7903:6;7899:1;:10;;;;;:::i;:::-;;;7890:6;:19;7889:26;;7880:35;;7963:1;7952:6;7948:1;:10;;;;;:::i;:::-;;;7939:6;:19;7938:26;;7929:35;;8012:1;8001:6;7997:1;:10;;;;;:::i;:::-;;;7988:6;:19;7987:26;;7978:35;;8061:1;8050:6;8046:1;:10;;;;;:::i;:::-;;;8037:6;:19;8036:26;;8027:35;;8110:1;8099:6;8095:1;:10;;;;;:::i;:::-;;;8086:6;:19;8085:26;;8076:35;;8132:23;8136:6;8148;8144:1;:10;;;;;:::i;:::-;;;8132:3;:23::i;:::-;8125:30;;;6530:1642;;;;:::o;10540:239:8:-;10626:25;10696:10;10693:1;10686:21;10759:3;10752:4;10749:1;10739:18;10735:28;10720:43;;10540:239;;;;:::o;805:153:19:-;867:7;950:1;945;941;:5;940:11;;;;:::i;:::-;935:1;931;:5;930:21;;;;:::i;:::-;923:28;;805:153;;;;:::o;8817:597:8:-;8914:3;8907:10;;:3;:10;;;;:24;;;;;8930:1;8921:6;:10;8907:24;8903:505;;;8966:1;8951:17;;:3;:17;;;8947:221;;8989:17;9008;9029:54;9046:12;:17;9059:3;9046:17;;;;;;;;;;;;;;;9065:9;9076:6;9029:16;:54::i;:::-;8988:95;;;;9127:3;9106:47;;;9132:9;9143;9106:47;;;;;;;:::i;:::-;;;;;;;;8970:198;;8947:221;9201:1;9186:17;;:3;:17;;;9182:216;;9224:17;9243;9264:49;9281:12;:17;9294:3;9281:17;;;;;;;;;;;;;;;9300:4;9306:6;9264:16;:49::i;:::-;9223:90;;;;9357:3;9336:47;;;9362:9;9373;9336:47;;;;;;;:::i;:::-;;;;;;;;9205:193;;9182:216;8903:505;8817:597;;;:::o;2059:405:14:-;2118:13;2143:11;2157:16;2168:4;2157:10;:16::i;:::-;2143:30;;2261:17;2292:2;2281:14;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2261:34;;2383:3;2378;2371:16;2423:4;2416;2411:3;2407:14;2400:28;2454:3;2447:10;;;;2059:405;;;:::o;8336:397:17:-;8429:12;8536:4;8530:11;8566:10;8561:3;8554:23;8613:15;8606:4;8601:3;8597:14;8590:39;8665:10;8658:4;8653:3;8649:14;8642:34;8712:4;8707:3;8697:20;8689:28;;8505:222;8336:397;;;;:::o;5009:1456::-;5097:7;5106:12;6021:66;6016:1;6008:10;;:79;6004:161;;;6119:1;6123:30;6103:51;;;;;;6004:161;6259:14;6276:24;6286:4;6292:1;6295;6298;6276:24;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6259:41;;6332:1;6314:20;;:6;:20;;;6310:101;;6366:1;6370:29;6350:50;;;;;;;6310:101;6429:6;6437:20;6421:37;;;;;5009:1456;;;;;;;;:::o;570:511::-;647:20;638:29;;;;;;;;:::i;:::-;;:5;:29;;;;;;;;:::i;:::-;;;634:441;683:7;634:441;743:29;734:38;;;;;;;;:::i;:::-;;:5;:38;;;;;;;;:::i;:::-;;;730:345;;788:34;;;;;;;;;;:::i;:::-;;;;;;;;730:345;852:35;843:44;;;;;;;;:::i;:::-;;:5;:44;;;;;;;;:::i;:::-;;;839:236;;903:41;;;;;;;;;;:::i;:::-;;;;;;;;839:236;974:30;965:39;;;;;;;;:::i;:::-;;:5;:39;;;;;;;;:::i;:::-;;;961:114;;1020:44;;;;;;;;;;:::i;:::-;;;;;;;;961:114;570:511;;:::o;945:123:13:-;1050:1;1032:7;:14;;;:19;;;;;;;;;;;945:123;:::o;8036:224:8:-;8143:43;8169:4;8175:2;8179:6;8143:25;:43::i;:::-;8197:56;8214:15;8224:4;8214:9;:15::i;:::-;8231:13;8241:2;8231:9;:13::i;:::-;8246:6;8197:16;:56::i;:::-;8036:224;;;:::o;8633:983:19:-;8685:7;8704:14;8721:1;8704:18;;8775:1;8769:3;8760:5;:12;;:16;8756:99;;;8806:3;8796:13;;;;;8837:3;8827:13;;;;8756:99;8886:1;8881:2;8872:5;:11;;:15;8868:96;;;8917:2;8907:12;;;;;8947:2;8937:12;;;;8868:96;8995:1;8990:2;8981:5;:11;;:15;8977:96;;;9026:2;9016:12;;;;;9056:2;9046:12;;;;8977:96;9104:1;9099:2;9090:5;:11;;:15;9086:96;;;9135:2;9125:12;;;;;9165:2;9155:12;;;;9086:96;9212:1;9208;9199:5;:10;;:14;9195:93;;;9243:1;9233:11;;;;;9272:1;9262:11;;;;9195:93;9318:1;9314;9305:5;:10;;:14;9301:93;;;9349:1;9339:11;;;;;9378:1;9368:11;;;;9301:93;9424:1;9420;9411:5;:10;;:14;9407:93;;;9455:1;9445:11;;;;;9484:1;9474:11;;;;9407:93;9530:1;9526;9517:5;:10;;:14;9513:64;;;9561:1;9551:11;;;;9513:64;9603:6;9596:13;;;8633:983;;;:::o;588:104::-;646:7;676:1;672;:5;:13;;684:1;672:13;;;680:1;672:13;665:20;;588:104;;;;:::o;9420:768:8:-;9590:17;9609;9638:11;9652:5;:12;;;;9638:26;;9699:25;9734:1;9727:3;:8;:59;;9757:29;9771:5;9784:1;9778:3;:7;9757:13;:29::i;:::-;9727:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9738:16;;;;;;;;9749:1;9738:16;;;;;;9752:1;9738:16;;;;;9727:59;9699:87;;9813:7;:13;;;9801:25;;;;9852:20;9855:9;9866:5;9852:2;:20;;:::i;:::-;9840:32;;9897:1;9891:3;:7;:39;;;;;9923:7;:5;:7::i;:::-;9902:28;;:7;:17;;;:28;;;9891:39;9887:285;;;9988:29;10007:9;9988:18;:29::i;:::-;9950;9964:5;9977:1;9971:3;:7;9950:13;:29::i;:::-;:35;;;:67;;;;;;;;;;;;;;;;;;9887:285;;;10056:5;10067:89;;;;;;;;10090:26;10108:7;:5;:7::i;:::-;10090:26;;:17;:26::i;:::-;10067:89;;;;;;10125:29;10144:9;10125:18;:29::i;:::-;10067:89;;;;;10056:101;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9887:285;9675:507;9628:560;9420:768;;;;;;:::o;2536:245:14:-;2597:7;2616:14;2669:4;2660;2633:33;;:40;2616:57;;2696:2;2687:6;:11;2683:69;;;2721:20;;;;;;;;;;;;;;2683:69;2768:6;2761:13;;;2536:245;;;:::o;12752:90:5:-;;;;:::o;2836:192:20:-;2893:7;2929:17;2920:26;;:5;:26;;2912:78;;;;;;;;;;;;:::i;:::-;;;;;;;;;3015:5;3000:21;;2836:192;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;:::o;7:99:23:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:246::-;368:1;378:113;392:6;389:1;386:13;378:113;;;477:1;472:3;468:11;462:18;458:1;453:3;449:11;442:39;414:2;411:1;407:10;402:15;;378:113;;;525:1;516:6;511:3;507:16;500:27;349:184;287:246;;;:::o;539:102::-;580:6;631:2;627:7;622:2;615:5;611:14;607:28;597:38;;539:102;;;:::o;647:377::-;735:3;763:39;796:5;763:39;:::i;:::-;818:71;882:6;877:3;818:71;:::i;:::-;811:78;;898:65;956:6;951:3;944:4;937:5;933:16;898:65;:::i;:::-;988:29;1010:6;988:29;:::i;:::-;983:3;979:39;972:46;;739:285;647:377;;;;:::o;1030:313::-;1143:4;1181:2;1170:9;1166:18;1158:26;;1230:9;1224:4;1220:20;1216:1;1205:9;1201:17;1194:47;1258:78;1331:4;1322:6;1258:78;:::i;:::-;1250:86;;1030:313;;;;:::o;1430:117::-;1539:1;1536;1529:12;1676:126;1713:7;1753:42;1746:5;1742:54;1731:65;;1676:126;;;:::o;1808:96::-;1845:7;1874:24;1892:5;1874:24;:::i;:::-;1863:35;;1808:96;;;:::o;1910:122::-;1983:24;2001:5;1983:24;:::i;:::-;1976:5;1973:35;1963:63;;2022:1;2019;2012:12;1963:63;1910:122;:::o;2038:139::-;2084:5;2122:6;2109:20;2100:29;;2138:33;2165:5;2138:33;:::i;:::-;2038:139;;;;:::o;2183:77::-;2220:7;2249:5;2238:16;;2183:77;;;:::o;2266:122::-;2339:24;2357:5;2339:24;:::i;:::-;2332:5;2329:35;2319:63;;2378:1;2375;2368:12;2319:63;2266:122;:::o;2394:139::-;2440:5;2478:6;2465:20;2456:29;;2494:33;2521:5;2494:33;:::i;:::-;2394:139;;;;:::o;2539:474::-;2607:6;2615;2664:2;2652:9;2643:7;2639:23;2635:32;2632:119;;;2670:79;;:::i;:::-;2632:119;2790:1;2815:53;2860:7;2851:6;2840:9;2836:22;2815:53;:::i;:::-;2805:63;;2761:117;2917:2;2943:53;2988:7;2979:6;2968:9;2964:22;2943:53;:::i;:::-;2933:63;;2888:118;2539:474;;;;;:::o;3019:90::-;3053:7;3096:5;3089:13;3082:21;3071:32;;3019:90;;;:::o;3115:109::-;3196:21;3211:5;3196:21;:::i;:::-;3191:3;3184:34;3115:109;;:::o;3230:210::-;3317:4;3355:2;3344:9;3340:18;3332:26;;3368:65;3430:1;3419:9;3415:17;3406:6;3368:65;:::i;:::-;3230:210;;;;:::o;3446:118::-;3533:24;3551:5;3533:24;:::i;:::-;3528:3;3521:37;3446:118;;:::o;3570:222::-;3663:4;3701:2;3690:9;3686:18;3678:26;;3714:71;3782:1;3771:9;3767:17;3758:6;3714:71;:::i;:::-;3570:222;;;;:::o;3798:619::-;3875:6;3883;3891;3940:2;3928:9;3919:7;3915:23;3911:32;3908:119;;;3946:79;;:::i;:::-;3908:119;4066:1;4091:53;4136:7;4127:6;4116:9;4112:22;4091:53;:::i;:::-;4081:63;;4037:117;4193:2;4219:53;4264:7;4255:6;4244:9;4240:22;4219:53;:::i;:::-;4209:63;;4164:118;4321:2;4347:53;4392:7;4383:6;4372:9;4368:22;4347:53;:::i;:::-;4337:63;;4292:118;3798:619;;;;;:::o;4423:86::-;4458:7;4498:4;4491:5;4487:16;4476:27;;4423:86;;;:::o;4515:112::-;4598:22;4614:5;4598:22;:::i;:::-;4593:3;4586:35;4515:112;;:::o;4633:214::-;4722:4;4760:2;4749:9;4745:18;4737:26;;4773:67;4837:1;4826:9;4822:17;4813:6;4773:67;:::i;:::-;4633:214;;;;:::o;4853:77::-;4890:7;4919:5;4908:16;;4853:77;;;:::o;4936:118::-;5023:24;5041:5;5023:24;:::i;:::-;5018:3;5011:37;4936:118;;:::o;5060:222::-;5153:4;5191:2;5180:9;5176:18;5168:26;;5204:71;5272:1;5261:9;5257:17;5248:6;5204:71;:::i;:::-;5060:222;;;;:::o;5288:329::-;5347:6;5396:2;5384:9;5375:7;5371:23;5367:32;5364:119;;;5402:79;;:::i;:::-;5364:119;5522:1;5547:53;5592:7;5583:6;5572:9;5568:22;5547:53;:::i;:::-;5537:63;;5493:117;5288:329;;;;:::o;5623:118::-;5710:24;5728:5;5710:24;:::i;:::-;5705:3;5698:37;5623:118;;:::o;5747:222::-;5840:4;5878:2;5867:9;5863:18;5855:26;;5891:71;5959:1;5948:9;5944:17;5935:6;5891:71;:::i;:::-;5747:222;;;;:::o;5975:93::-;6011:7;6051:10;6044:5;6040:22;6029:33;;5975:93;;;:::o;6074:115::-;6159:23;6176:5;6159:23;:::i;:::-;6154:3;6147:36;6074:115;;:::o;6195:218::-;6286:4;6324:2;6313:9;6309:18;6301:26;;6337:69;6403:1;6392:9;6388:17;6379:6;6337:69;:::i;:::-;6195:218;;;;:::o;6419:149::-;6455:7;6495:66;6488:5;6484:78;6473:89;;6419:149;;;:::o;6574:115::-;6659:23;6676:5;6659:23;:::i;:::-;6654:3;6647:36;6574:115;;:::o;6695:114::-;6762:6;6796:5;6790:12;6780:22;;6695:114;;;:::o;6815:184::-;6914:11;6948:6;6943:3;6936:19;6988:4;6983:3;6979:14;6964:29;;6815:184;;;;:::o;7005:132::-;7072:4;7095:3;7087:11;;7125:4;7120:3;7116:14;7108:22;;7005:132;;;:::o;7143:108::-;7220:24;7238:5;7220:24;:::i;:::-;7215:3;7208:37;7143:108;;:::o;7257:179::-;7326:10;7347:46;7389:3;7381:6;7347:46;:::i;:::-;7425:4;7420:3;7416:14;7402:28;;7257:179;;;;:::o;7442:113::-;7512:4;7544;7539:3;7535:14;7527:22;;7442:113;;;:::o;7591:732::-;7710:3;7739:54;7787:5;7739:54;:::i;:::-;7809:86;7888:6;7883:3;7809:86;:::i;:::-;7802:93;;7919:56;7969:5;7919:56;:::i;:::-;7998:7;8029:1;8014:284;8039:6;8036:1;8033:13;8014:284;;;8115:6;8109:13;8142:63;8201:3;8186:13;8142:63;:::i;:::-;8135:70;;8228:60;8281:6;8228:60;:::i;:::-;8218:70;;8074:224;8061:1;8058;8054:9;8049:14;;8014:284;;;8018:14;8314:3;8307:10;;7715:608;;;7591:732;;;;:::o;8329:1215::-;8678:4;8716:3;8705:9;8701:19;8693:27;;8730:69;8796:1;8785:9;8781:17;8772:6;8730:69;:::i;:::-;8846:9;8840:4;8836:20;8831:2;8820:9;8816:18;8809:48;8874:78;8947:4;8938:6;8874:78;:::i;:::-;8866:86;;8999:9;8993:4;8989:20;8984:2;8973:9;8969:18;8962:48;9027:78;9100:4;9091:6;9027:78;:::i;:::-;9019:86;;9115:72;9183:2;9172:9;9168:18;9159:6;9115:72;:::i;:::-;9197:73;9265:3;9254:9;9250:19;9241:6;9197:73;:::i;:::-;9280;9348:3;9337:9;9333:19;9324:6;9280:73;:::i;:::-;9401:9;9395:4;9391:20;9385:3;9374:9;9370:19;9363:49;9429:108;9532:4;9523:6;9429:108;:::i;:::-;9421:116;;8329:1215;;;;;;;;;;:::o;9550:329::-;9609:6;9658:2;9646:9;9637:7;9633:23;9629:32;9626:119;;;9664:79;;:::i;:::-;9626:119;9784:1;9809:53;9854:7;9845:6;9834:9;9830:22;9809:53;:::i;:::-;9799:63;;9755:117;9550:329;;;;:::o;9885:97::-;9921:7;9961:14;9954:5;9950:26;9939:37;;9885:97;;;:::o;9988:115::-;10073:23;10090:5;10073:23;:::i;:::-;10068:3;10061:36;9988:115;;:::o;10109:218::-;10200:4;10238:2;10227:9;10223:18;10215:26;;10251:69;10317:1;10306:9;10302:17;10293:6;10251:69;:::i;:::-;10109:218;;;;:::o;10333:118::-;10404:22;10420:5;10404:22;:::i;:::-;10397:5;10394:33;10384:61;;10441:1;10438;10431:12;10384:61;10333:118;:::o;10457:135::-;10501:5;10539:6;10526:20;10517:29;;10555:31;10580:5;10555:31;:::i;:::-;10457:135;;;;:::o;10598:122::-;10671:24;10689:5;10671:24;:::i;:::-;10664:5;10661:35;10651:63;;10710:1;10707;10700:12;10651:63;10598:122;:::o;10726:139::-;10772:5;10810:6;10797:20;10788:29;;10826:33;10853:5;10826:33;:::i;:::-;10726:139;;;;:::o;10871:1053::-;10973:6;10981;10989;10997;11005;11013;11062:3;11050:9;11041:7;11037:23;11033:33;11030:120;;;11069:79;;:::i;:::-;11030:120;11189:1;11214:53;11259:7;11250:6;11239:9;11235:22;11214:53;:::i;:::-;11204:63;;11160:117;11316:2;11342:53;11387:7;11378:6;11367:9;11363:22;11342:53;:::i;:::-;11332:63;;11287:118;11444:2;11470:53;11515:7;11506:6;11495:9;11491:22;11470:53;:::i;:::-;11460:63;;11415:118;11572:2;11598:51;11641:7;11632:6;11621:9;11617:22;11598:51;:::i;:::-;11588:61;;11543:116;11698:3;11725:53;11770:7;11761:6;11750:9;11746:22;11725:53;:::i;:::-;11715:63;;11669:119;11827:3;11854:53;11899:7;11890:6;11879:9;11875:22;11854:53;:::i;:::-;11844:63;;11798:119;10871:1053;;;;;;;;:::o;11930:1199::-;12041:6;12049;12057;12065;12073;12081;12089;12138:3;12126:9;12117:7;12113:23;12109:33;12106:120;;;12145:79;;:::i;:::-;12106:120;12265:1;12290:53;12335:7;12326:6;12315:9;12311:22;12290:53;:::i;:::-;12280:63;;12236:117;12392:2;12418:53;12463:7;12454:6;12443:9;12439:22;12418:53;:::i;:::-;12408:63;;12363:118;12520:2;12546:53;12591:7;12582:6;12571:9;12567:22;12546:53;:::i;:::-;12536:63;;12491:118;12648:2;12674:53;12719:7;12710:6;12699:9;12695:22;12674:53;:::i;:::-;12664:63;;12619:118;12776:3;12803:51;12846:7;12837:6;12826:9;12822:22;12803:51;:::i;:::-;12793:61;;12747:117;12903:3;12930:53;12975:7;12966:6;12955:9;12951:22;12930:53;:::i;:::-;12920:63;;12874:119;13032:3;13059:53;13104:7;13095:6;13084:9;13080:22;13059:53;:::i;:::-;13049:63;;13003:119;11930:1199;;;;;;;;;;:::o;13135:474::-;13203:6;13211;13260:2;13248:9;13239:7;13235:23;13231:32;13228:119;;;13266:79;;:::i;:::-;13228:119;13386:1;13411:53;13456:7;13447:6;13436:9;13432:22;13411:53;:::i;:::-;13401:63;;13357:117;13513:2;13539:53;13584:7;13575:6;13564:9;13560:22;13539:53;:::i;:::-;13529:63;;13484:118;13135:474;;;;;:::o;13615:120::-;13687:23;13704:5;13687:23;:::i;:::-;13680:5;13677:34;13667:62;;13725:1;13722;13715:12;13667:62;13615:120;:::o;13741:137::-;13786:5;13824:6;13811:20;13802:29;;13840:32;13866:5;13840:32;:::i;:::-;13741:137;;;;:::o;13884:472::-;13951:6;13959;14008:2;13996:9;13987:7;13983:23;13979:32;13976:119;;;14014:79;;:::i;:::-;13976:119;14134:1;14159:53;14204:7;14195:6;14184:9;14180:22;14159:53;:::i;:::-;14149:63;;14105:117;14261:2;14287:52;14331:7;14322:6;14311:9;14307:22;14287:52;:::i;:::-;14277:62;;14232:117;13884:472;;;;;:::o;14362:105::-;14437:23;14454:5;14437:23;:::i;:::-;14432:3;14425:36;14362:105;;:::o;14473:142::-;14510:7;14550:58;14543:5;14539:70;14528:81;;14473:142;;;:::o;14621:108::-;14698:24;14716:5;14698:24;:::i;:::-;14693:3;14686:37;14621:108;;:::o;14803:517::-;14956:4;14951:3;14947:14;15048:4;15041:5;15037:16;15031:23;15067:61;15122:4;15117:3;15113:14;15099:12;15067:61;:::i;:::-;14971:167;15221:4;15214:5;15210:16;15204:23;15240:63;15297:4;15292:3;15288:14;15274:12;15240:63;:::i;:::-;15148:165;14925:395;14803:517;;:::o;15326:334::-;15475:4;15513:2;15502:9;15498:18;15490:26;;15526:127;15650:1;15639:9;15635:17;15626:6;15526:127;:::i;:::-;15326:334;;;;:::o;15666:180::-;15714:77;15711:1;15704:88;15811:4;15808:1;15801:15;15835:4;15832:1;15825:15;15852:320;15896:6;15933:1;15927:4;15923:12;15913:22;;15980:1;15974:4;15970:12;16001:18;15991:81;;16057:4;16049:6;16045:17;16035:27;;15991:81;16119:2;16111:6;16108:14;16088:18;16085:38;16082:84;;16138:18;;:::i;:::-;16082:84;15903:269;15852:320;;;:::o;16178:180::-;16226:77;16223:1;16216:88;16323:4;16320:1;16313:15;16347:4;16344:1;16337:15;16364:191;16404:3;16423:20;16441:1;16423:20;:::i;:::-;16418:25;;16457:20;16475:1;16457:20;:::i;:::-;16452:25;;16500:1;16497;16493:9;16486:16;;16521:3;16518:1;16515:10;16512:36;;;16528:18;;:::i;:::-;16512:36;16364:191;;;;:::o;16561:175::-;16701:27;16697:1;16689:6;16685:14;16678:51;16561:175;:::o;16742:366::-;16884:3;16905:67;16969:2;16964:3;16905:67;:::i;:::-;16898:74;;16981:93;17070:3;16981:93;:::i;:::-;17099:2;17094:3;17090:12;17083:19;;16742:366;;;:::o;17114:419::-;17280:4;17318:2;17307:9;17303:18;17295:26;;17367:9;17361:4;17357:20;17353:1;17342:9;17338:17;17331:47;17395:131;17521:4;17395:131;:::i;:::-;17387:139;;17114:419;;;:::o;17539:179::-;17679:31;17675:1;17667:6;17663:14;17656:55;17539:179;:::o;17724:366::-;17866:3;17887:67;17951:2;17946:3;17887:67;:::i;:::-;17880:74;;17963:93;18052:3;17963:93;:::i;:::-;18081:2;18076:3;18072:12;18065:19;;17724:366;;;:::o;18096:419::-;18262:4;18300:2;18289:9;18285:18;18277:26;;18349:9;18343:4;18339:20;18335:1;18324:9;18320:17;18313:47;18377:131;18503:4;18377:131;:::i;:::-;18369:139;;18096:419;;;:::o;18521:180::-;18569:77;18566:1;18559:88;18666:4;18663:1;18656:15;18690:4;18687:1;18680:15;18707:180;18755:77;18752:1;18745:88;18852:4;18849:1;18842:15;18876:4;18873:1;18866:15;18893:224;19033:34;19029:1;19021:6;19017:14;19010:58;19102:7;19097:2;19089:6;19085:15;19078:32;18893:224;:::o;19123:366::-;19265:3;19286:67;19350:2;19345:3;19286:67;:::i;:::-;19279:74;;19362:93;19451:3;19362:93;:::i;:::-;19480:2;19475:3;19471:12;19464:19;;19123:366;;;:::o;19495:419::-;19661:4;19699:2;19688:9;19684:18;19676:26;;19748:9;19742:4;19738:20;19734:1;19723:9;19719:17;19712:47;19776:131;19902:4;19776:131;:::i;:::-;19768:139;;19495:419;;;:::o;19920:179::-;20060:31;20056:1;20048:6;20044:14;20037:55;19920:179;:::o;20105:366::-;20247:3;20268:67;20332:2;20327:3;20268:67;:::i;:::-;20261:74;;20344:93;20433:3;20344:93;:::i;:::-;20462:2;20457:3;20453:12;20446:19;;20105:366;;;:::o;20477:419::-;20643:4;20681:2;20670:9;20666:18;20658:26;;20730:9;20724:4;20720:20;20716:1;20705:9;20701:17;20694:47;20758:131;20884:4;20758:131;:::i;:::-;20750:139;;20477:419;;;:::o;20902:553::-;21079:4;21117:3;21106:9;21102:19;21094:27;;21131:71;21199:1;21188:9;21184:17;21175:6;21131:71;:::i;:::-;21212:72;21280:2;21269:9;21265:18;21256:6;21212:72;:::i;:::-;21294;21362:2;21351:9;21347:18;21338:6;21294:72;:::i;:::-;21376;21444:2;21433:9;21429:18;21420:6;21376:72;:::i;:::-;20902:553;;;;;;;:::o;21461:175::-;21601:27;21597:1;21589:6;21585:14;21578:51;21461:175;:::o;21642:366::-;21784:3;21805:67;21869:2;21864:3;21805:67;:::i;:::-;21798:74;;21881:93;21970:3;21881:93;:::i;:::-;21999:2;21994:3;21990:12;21983:19;;21642:366;;;:::o;22014:419::-;22180:4;22218:2;22207:9;22203:18;22195:26;;22267:9;22261:4;22257:20;22253:1;22242:9;22238:17;22231:47;22295:131;22421:4;22295:131;:::i;:::-;22287:139;;22014:419;;;:::o;22439:179::-;22579:31;22575:1;22567:6;22563:14;22556:55;22439:179;:::o;22624:366::-;22766:3;22787:67;22851:2;22846:3;22787:67;:::i;:::-;22780:74;;22863:93;22952:3;22863:93;:::i;:::-;22981:2;22976:3;22972:12;22965:19;;22624:366;;;:::o;22996:419::-;23162:4;23200:2;23189:9;23185:18;23177:26;;23249:9;23243:4;23239:20;23235:1;23224:9;23220:17;23213:47;23277:131;23403:4;23277:131;:::i;:::-;23269:139;;22996:419;;;:::o;23421:775::-;23654:4;23692:3;23681:9;23677:19;23669:27;;23706:71;23774:1;23763:9;23759:17;23750:6;23706:71;:::i;:::-;23787:72;23855:2;23844:9;23840:18;23831:6;23787:72;:::i;:::-;23869;23937:2;23926:9;23922:18;23913:6;23869:72;:::i;:::-;23951;24019:2;24008:9;24004:18;23995:6;23951:72;:::i;:::-;24033:73;24101:3;24090:9;24086:19;24077:6;24033:73;:::i;:::-;24116;24184:3;24173:9;24169:19;24160:6;24116:73;:::i;:::-;23421:775;;;;;;;;;:::o;24202:180::-;24342:32;24338:1;24330:6;24326:14;24319:56;24202:180;:::o;24388:366::-;24530:3;24551:67;24615:2;24610:3;24551:67;:::i;:::-;24544:74;;24627:93;24716:3;24627:93;:::i;:::-;24745:2;24740:3;24736:12;24729:19;;24388:366;;;:::o;24760:419::-;24926:4;24964:2;24953:9;24949:18;24941:26;;25013:9;25007:4;25003:20;24999:1;24988:9;24984:17;24977:47;25041:131;25167:4;25041:131;:::i;:::-;25033:139;;24760:419;;;:::o;25185:225::-;25325:34;25321:1;25313:6;25309:14;25302:58;25394:8;25389:2;25381:6;25377:15;25370:33;25185:225;:::o;25416:366::-;25558:3;25579:67;25643:2;25638:3;25579:67;:::i;:::-;25572:74;;25655:93;25744:3;25655:93;:::i;:::-;25773:2;25768:3;25764:12;25757:19;;25416:366;;;:::o;25788:419::-;25954:4;25992:2;25981:9;25977:18;25969:26;;26041:9;26035:4;26031:20;26027:1;26016:9;26012:17;26005:47;26069:131;26195:4;26069:131;:::i;:::-;26061:139;;25788:419;;;:::o;26213:194::-;26253:4;26273:20;26291:1;26273:20;:::i;:::-;26268:25;;26307:20;26325:1;26307:20;:::i;:::-;26302:25;;26351:1;26348;26344:9;26336:17;;26375:1;26369:4;26366:11;26363:37;;;26380:18;;:::i;:::-;26363:37;26213:194;;;;:::o;26413:223::-;26553:34;26549:1;26541:6;26537:14;26530:58;26622:6;26617:2;26609:6;26605:15;26598:31;26413:223;:::o;26642:366::-;26784:3;26805:67;26869:2;26864:3;26805:67;:::i;:::-;26798:74;;26881:93;26970:3;26881:93;:::i;:::-;26999:2;26994:3;26990:12;26983:19;;26642:366;;;:::o;27014:419::-;27180:4;27218:2;27207:9;27203:18;27195:26;;27267:9;27261:4;27257:20;27253:1;27242:9;27238:17;27231:47;27295:131;27421:4;27295:131;:::i;:::-;27287:139;;27014:419;;;:::o;27439:221::-;27579:34;27575:1;27567:6;27563:14;27556:58;27648:4;27643:2;27635:6;27631:15;27624:29;27439:221;:::o;27666:366::-;27808:3;27829:67;27893:2;27888:3;27829:67;:::i;:::-;27822:74;;27905:93;27994:3;27905:93;:::i;:::-;28023:2;28018:3;28014:12;28007:19;;27666:366;;;:::o;28038:419::-;28204:4;28242:2;28231:9;28227:18;28219:26;;28291:9;28285:4;28281:20;28277:1;28266:9;28262:17;28255:47;28319:131;28445:4;28319:131;:::i;:::-;28311:139;;28038:419;;;:::o;28463:179::-;28603:31;28599:1;28591:6;28587:14;28580:55;28463:179;:::o;28648:366::-;28790:3;28811:67;28875:2;28870:3;28811:67;:::i;:::-;28804:74;;28887:93;28976:3;28887:93;:::i;:::-;29005:2;29000:3;28996:12;28989:19;;28648:366;;;:::o;29020:419::-;29186:4;29224:2;29213:9;29209:18;29201:26;;29273:9;29267:4;29263:20;29259:1;29248:9;29244:17;29237:47;29301:131;29427:4;29301:131;:::i;:::-;29293:139;;29020:419;;;:::o;29445:224::-;29585:34;29581:1;29573:6;29569:14;29562:58;29654:7;29649:2;29641:6;29637:15;29630:32;29445:224;:::o;29675:366::-;29817:3;29838:67;29902:2;29897:3;29838:67;:::i;:::-;29831:74;;29914:93;30003:3;29914:93;:::i;:::-;30032:2;30027:3;30023:12;30016:19;;29675:366;;;:::o;30047:419::-;30213:4;30251:2;30240:9;30236:18;30228:26;;30300:9;30294:4;30290:20;30286:1;30275:9;30271:17;30264:47;30328:131;30454:4;30328:131;:::i;:::-;30320:139;;30047:419;;;:::o;30472:222::-;30612:34;30608:1;30600:6;30596:14;30589:58;30681:5;30676:2;30668:6;30664:15;30657:30;30472:222;:::o;30700:366::-;30842:3;30863:67;30927:2;30922:3;30863:67;:::i;:::-;30856:74;;30939:93;31028:3;30939:93;:::i;:::-;31057:2;31052:3;31048:12;31041:19;;30700:366;;;:::o;31072:419::-;31238:4;31276:2;31265:9;31261:18;31253:26;;31325:9;31319:4;31315:20;31311:1;31300:9;31296:17;31289:47;31353:131;31479:4;31353:131;:::i;:::-;31345:139;;31072:419;;;:::o;31497:225::-;31637:34;31633:1;31625:6;31621:14;31614:58;31706:8;31701:2;31693:6;31689:15;31682:33;31497:225;:::o;31728:366::-;31870:3;31891:67;31955:2;31950:3;31891:67;:::i;:::-;31884:74;;31967:93;32056:3;31967:93;:::i;:::-;32085:2;32080:3;32076:12;32069:19;;31728:366;;;:::o;32100:419::-;32266:4;32304:2;32293:9;32289:18;32281:26;;32353:9;32347:4;32343:20;32339:1;32328:9;32324:17;32317:47;32381:131;32507:4;32381:131;:::i;:::-;32373:139;;32100:419;;;:::o;32525:225::-;32665:34;32661:1;32653:6;32649:14;32642:58;32734:8;32729:2;32721:6;32717:15;32710:33;32525:225;:::o;32756:366::-;32898:3;32919:67;32983:2;32978:3;32919:67;:::i;:::-;32912:74;;32995:93;33084:3;32995:93;:::i;:::-;33113:2;33108:3;33104:12;33097:19;;32756:366;;;:::o;33128:419::-;33294:4;33332:2;33321:9;33317:18;33309:26;;33381:9;33375:4;33371:20;33367:1;33356:9;33352:17;33345:47;33409:131;33535:4;33409:131;:::i;:::-;33401:139;;33128:419;;;:::o;33553:182::-;33693:34;33689:1;33681:6;33677:14;33670:58;33553:182;:::o;33741:366::-;33883:3;33904:67;33968:2;33963:3;33904:67;:::i;:::-;33897:74;;33980:93;34069:3;33980:93;:::i;:::-;34098:2;34093:3;34089:12;34082:19;;33741:366;;;:::o;34113:419::-;34279:4;34317:2;34306:9;34302:18;34294:26;;34366:9;34360:4;34356:20;34352:1;34341:9;34337:17;34330:47;34394:131;34520:4;34394:131;:::i;:::-;34386:139;;34113:419;;;:::o;34538:225::-;34678:34;34674:1;34666:6;34662:14;34655:58;34747:8;34742:2;34734:6;34730:15;34723:33;34538:225;:::o;34769:366::-;34911:3;34932:67;34996:2;34991:3;34932:67;:::i;:::-;34925:74;;35008:93;35097:3;35008:93;:::i;:::-;35126:2;35121:3;35117:12;35110:19;;34769:366;;;:::o;35141:419::-;35307:4;35345:2;35334:9;35330:18;35322:26;;35394:9;35388:4;35384:20;35380:1;35369:9;35365:17;35358:47;35422:131;35548:4;35422:131;:::i;:::-;35414:139;;35141:419;;;:::o;35566:664::-;35771:4;35809:3;35798:9;35794:19;35786:27;;35823:71;35891:1;35880:9;35876:17;35867:6;35823:71;:::i;:::-;35904:72;35972:2;35961:9;35957:18;35948:6;35904:72;:::i;:::-;35986;36054:2;36043:9;36039:18;36030:6;35986:72;:::i;:::-;36068;36136:2;36125:9;36121:18;36112:6;36068:72;:::i;:::-;36150:73;36218:3;36207:9;36203:19;36194:6;36150:73;:::i;:::-;35566:664;;;;;;;;:::o;36236:180::-;36284:77;36281:1;36274:88;36381:4;36378:1;36371:15;36405:4;36402:1;36395:15;36422:185;36462:1;36479:20;36497:1;36479:20;:::i;:::-;36474:25;;36513:20;36531:1;36513:20;:::i;:::-;36508:25;;36552:1;36542:35;;36557:18;;:::i;:::-;36542:35;36599:1;36596;36592:9;36587:14;;36422:185;;;;:::o;36613:332::-;36734:4;36772:2;36761:9;36757:18;36749:26;;36785:71;36853:1;36842:9;36838:17;36829:6;36785:71;:::i;:::-;36866:72;36934:2;36923:9;36919:18;36910:6;36866:72;:::i;:::-;36613:332;;;;;:::o;36951:545::-;37124:4;37162:3;37151:9;37147:19;37139:27;;37176:71;37244:1;37233:9;37229:17;37220:6;37176:71;:::i;:::-;37257:68;37321:2;37310:9;37306:18;37297:6;37257:68;:::i;:::-;37335:72;37403:2;37392:9;37388:18;37379:6;37335:72;:::i;:::-;37417;37485:2;37474:9;37470:18;37461:6;37417:72;:::i;:::-;36951:545;;;;;;;:::o;37502:180::-;37550:77;37547:1;37540:88;37647:4;37644:1;37637:15;37671:4;37668:1;37661:15;37688:174;37828:26;37824:1;37816:6;37812:14;37805:50;37688:174;:::o;37868:366::-;38010:3;38031:67;38095:2;38090:3;38031:67;:::i;:::-;38024:74;;38107:93;38196:3;38107:93;:::i;:::-;38225:2;38220:3;38216:12;38209:19;;37868:366;;;:::o;38240:419::-;38406:4;38444:2;38433:9;38429:18;38421:26;;38493:9;38487:4;38483:20;38479:1;38468:9;38464:17;38457:47;38521:131;38647:4;38521:131;:::i;:::-;38513:139;;38240:419;;;:::o;38665:181::-;38805:33;38801:1;38793:6;38789:14;38782:57;38665:181;:::o;38852:366::-;38994:3;39015:67;39079:2;39074:3;39015:67;:::i;:::-;39008:74;;39091:93;39180:3;39091:93;:::i;:::-;39209:2;39204:3;39200:12;39193:19;;38852:366;;;:::o;39224:419::-;39390:4;39428:2;39417:9;39413:18;39405:26;;39477:9;39471:4;39467:20;39463:1;39452:9;39448:17;39441:47;39505:131;39631:4;39505:131;:::i;:::-;39497:139;;39224:419;;;:::o;39649:221::-;39789:34;39785:1;39777:6;39773:14;39766:58;39858:4;39853:2;39845:6;39841:15;39834:29;39649:221;:::o;39876:366::-;40018:3;40039:67;40103:2;40098:3;40039:67;:::i;:::-;40032:74;;40115:93;40204:3;40115:93;:::i;:::-;40233:2;40228:3;40224:12;40217:19;;39876:366;;;:::o;40248:419::-;40414:4;40452:2;40441:9;40437:18;40429:26;;40501:9;40495:4;40491:20;40487:1;40476:9;40472:17;40465:47;40529:131;40655:4;40529:131;:::i;:::-;40521:139;;40248:419;;;:::o;40673:226::-;40813:34;40809:1;40801:6;40797:14;40790:58;40882:9;40877:2;40869:6;40865:15;40858:34;40673:226;:::o;40905:366::-;41047:3;41068:67;41132:2;41127:3;41068:67;:::i;:::-;41061:74;;41144:93;41233:3;41144:93;:::i;:::-;41262:2;41257:3;41253:12;41246:19;;40905:366;;;:::o;41277:419::-;41443:4;41481:2;41470:9;41466:18;41458:26;;41530:9;41524:4;41520:20;41516:1;41505:9;41501:17;41494:47;41558:131;41684:4;41558:131;:::i;:::-;41550:139;;41277:419;;;:::o"},"methodIdentifiers":{"CLOCK_MODE()":"4bf5d7e9","DOMAIN_SEPARATOR()":"3644e515","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","checkpoints(address,uint32)":"f1127ed8","clock()":"91ddadf4","decimals()":"313ce567","decreaseAllowance(address,uint256)":"a457c2d7","delegate(address)":"5c19a95c","delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)":"c3cda520","delegates(address)":"587cde1e","eip712Domain()":"84b0196e","getPastTotalSupply(uint256)":"8e539e8c","getPastVotes(address,uint256)":"3a46b1a8","getVotes(address)":"9ab24eb0","increaseAllowance(address,uint256)":"39509351","name()":"06fdde03","nonces(address)":"7ecebe00","numCheckpoints(address)":"6fcfff45","owner()":"8da5cb5b","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf","renounceOwnership()":"715018a6","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fromDelegate\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"toDelegate\",\"type\":\"address\"}],\"name\":\"DelegateChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"previousBalance\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newBalance\",\"type\":\"uint256\"}],\"name\":\"DelegateVotesChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CLOCK_MODE\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"pos\",\"type\":\"uint32\"}],\"name\":\"checkpoints\",\"outputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"fromBlock\",\"type\":\"uint32\"},{\"internalType\":\"uint224\",\"name\":\"votes\",\"type\":\"uint224\"}],\"internalType\":\"struct ERC20Votes.Checkpoint\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"clock\",\"outputs\":[{\"internalType\":\"uint48\",\"name\":\"\",\"type\":\"uint48\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"}],\"name\":\"delegate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"delegateBySig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"delegates\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"timepoint\",\"type\":\"uint256\"}],\"name\":\"getPastTotalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timepoint\",\"type\":\"uint256\"}],\"name\":\"getPastVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"numCheckpoints\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"DelegateChanged(address,address,address)\":{\"details\":\"Emitted when an account changes their delegate.\"},\"DelegateVotesChanged(address,uint256,uint256)\":{\"details\":\"Emitted when a token transfer or delegate change results in changes to a delegate's number of votes.\"},\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"CLOCK_MODE()\":{\"details\":\"Description of the clock\"},\"DOMAIN_SEPARATOR()\":{\"details\":\"See {IERC20Permit-DOMAIN_SEPARATOR}.\"},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"checkpoints(address,uint32)\":{\"details\":\"Get the `pos`-th checkpoint for `account`.\"},\"clock()\":{\"details\":\"Clock used for flagging checkpoints. Can be overridden to implement timestamp based checkpoints (and voting).\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"delegate(address)\":{\"details\":\"Delegate votes from the sender to `delegatee`.\"},\"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Delegates votes from signer to `delegatee`\"},\"delegates(address)\":{\"details\":\"Get the address `account` is currently delegating to.\"},\"eip712Domain()\":{\"details\":\"See {EIP-5267}. _Available since v4.9._\"},\"getPastTotalSupply(uint256)\":{\"details\":\"Retrieve the `totalSupply` at the end of `timepoint`. Note, this value is the sum of all balances. It is NOT the sum of all the delegated votes! Requirements: - `timepoint` must be in the past\"},\"getPastVotes(address,uint256)\":{\"details\":\"Retrieve the number of votes for `account` at the end of `timepoint`. Requirements: - `timepoint` must be in the past\"},\"getVotes(address)\":{\"details\":\"Gets the current votes balance for `account`\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"nonces(address)\":{\"details\":\"See {IERC20Permit-nonces}.\"},\"numCheckpoints(address)\":{\"details\":\"Get number of checkpoints for `account`.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"See {IERC20Permit-permit}.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Token.sol\":\"Token\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"@openzeppelin/contracts/governance/utils/IVotes.sol\":{\"keccak256\":\"0x1618ddebe73377660f6da71afcba35d5ac4c4600918b3a381d9c6f37eba613eb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://666c8d7c62478b55e082f1835275b7acfc1595491998df6d67183ff2c70eab96\",\"dweb:/ipfs/QmVXmnXfxNaLhoX283dqyKJ8DJbF5thUd9sMuRoFpNMwr7\"]},\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0xac6c2efc64baccbde4904ae18ed45139c9aa8cff96d6888344d1e4d2eb8b659f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e416a280c610b6b7a5f158e4a41aacfaec01ef14d5d1de13b46be9e090265fc\",\"dweb:/ipfs/QmYZP2KrdyccBbhLZT42auhvBTMkwiwUS3V6HWb42rbwbG\"]},\"@openzeppelin/contracts/interfaces/IERC5805.sol\":{\"keccak256\":\"0xfc12b717f6a2cd0d67adc8700097d4464d37f18ce933d4fc9c948ab6aec35e80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://82386e69ebe902a2edfd4f8a5ecbeaeb2e00f6cc6481a973729e974373fb492e\",\"dweb:/ipfs/QmSXg4wBMBd83mQvkekT1GsiRX2Qyv5gvrqzv5qJx2M7Kc\"]},\"@openzeppelin/contracts/interfaces/IERC6372.sol\":{\"keccak256\":\"0xcaea9aeda3816ba872358c828f4f01455c22ae48ced49c4c7d72bd74176c09b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://16ff22d8df5aee94510ee43d361b6147caef164941a684cedcb75be44f351fe6\",\"dweb:/ipfs/QmaCCwMdHVdPApuEJHLZapSJyA7mp5dAugpma3VUzWGd8E\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15\",\"dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":{\"keccak256\":\"0x36c00327e3f9afd929cc2721aaa111ab57eff78a630cc364b279ad576b899295\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5bf927f4c8b71a5809be184c3107b915b0445ab2c4a33208331e5376692eb5a\",\"dweb:/ipfs/QmVXirsCY1sf4kodhbL6w3NWZkeZeaMuQB7M6DBAdZNqFE\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol\":{\"keccak256\":\"0x4e560f86662b6f72ab76122fff53317677154f14bac4a80dbd46a54172b3abfa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ca5c2518d247417cb01164f04eff57b7e87b5346bc03478ada916f26117aa7fd\",\"dweb:/ipfs/QmVgK66XGZCiH9x4mhqejKUTujtu68DyE6KrYi6MPuaHRJ\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0xec63854014a5b4f2b3290ab9103a21bdf902a508d0f41a8573fea49e98bf571a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc5b5dc12fbc4002f282eaa7a5f06d8310ed62c1c77c5770f6283e058454c39a\",\"dweb:/ipfs/Qme9rE2wS3yBuyJq9GgbmzbsBQsW2M2sVFqYYLw7bosGrv\"]},\"@openzeppelin/contracts/token/ERC20/extensions/draft-ERC20Permit.sol\":{\"keccak256\":\"0xbe43b6f1e04b5215939f1a76fa612c275b75948f6e7bf25808fb91e99444a33f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://86d672d9a23f3502472f6827af8e8116a6412b28c234dcfcb201413055cb0159\",\"dweb:/ipfs/Qmcts6GvEMHuyikwDHtcTdTW4SVP1k66KpUMRcCovWbLN8\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0xc0e310c163edf15db45d4ff938113ab357f94fa86e61ea8e790853c4d2e13256\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://04db5bc05dcb05ba1f6ca2dfbead17adc8a2e2f911aa80b05e7a36d9eaf96516\",\"dweb:/ipfs/QmVkfHZbXVBUPsTopueCn3qGJX8aEjahFF3Fn4NcygLNm5\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e26daf81e2252dc1fe1ce0e4b55c2eb7c6d1ee84ae6558d1a9554432ea1d32da\",\"dweb:/ipfs/Qmb1UANWiWq5pCKbmHSu772hd4nt374dVaghGmwSVNuk8Q\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x809bc3edb4bcbef8263fa616c1b60ee0004b50a8a1bfa164d8f57fd31f520c58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b93a1e39a4a19eba1600b92c96f435442db88cac91e315c8291547a2a7bcfe2\",\"dweb:/ipfs/QmTm34KVe6uZBZwq8dZDNWwPcm24qBJdxqL3rPxBJ4LrMv\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x8432884527a7ad91e6eed1cfc5a0811ae2073e5bca107bd0ca442e9236b03dbd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e3aa0eadab7aafcf91a95684765f778f64386f0368de88522ce873c21385278a\",\"dweb:/ipfs/QmPfaVAqWgH1QsT3dHVuL6jwMZbVKdoP8w1PvpiPT2FPWd\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://495145362c7ff1c9ca88c58bbbbcb412e3c2004406647412394486552ff6c278\",\"dweb:/ipfs/QmNNCeng6d5eRPDn6tkWSQhjE39XWfQEfjA63rRwHmr1iH\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]},\"contracts/Token.sol\":{\"keccak256\":\"0x53ac52e2814227bcbbfd3139aabfee1c5637c312206ce509180e137bac825884\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://58eea4a7ef1217b3721ee8093b3c4a39376ed6d9d2ec878dc5529fd959419ec1\",\"dweb:/ipfs/QmVVoxmH2AC8KPxzqjnyGigVtP17v8fNGGvNJcmbX7iEo1\"]}},\"version\":1}"}}}}}